{"version":3,"sources":["util/CheckIfLoggedOut.js","CreateAndLogin/CreateAndLogin.js","TopBar/TopBar.js","Profile/Profile.js","util/CSVConverter.js","LoggedHomepage/LoggedHomepage.js","ChangeProfile/ChangeProfile.js","AboutUs/AboutUs.js","Map/Map.js","RegisterParcel/RegisterParcel.js","util/CheckIfLoggedIn.js","ChangePassword/ChangePassword.js","util/ParcelDetailsModal/ParcelDetailsModal.js","util/ParcelEditModal/ParcelEditModal.js","MyParcels/MyParcels.js","ProposedParcelsEntity/ProposedParcelsEntity.js","ParcelsEntity/ParcelsEntity.js","ApproveParcels/ApproveParcels.js","AllParcels/AllParcels.js","App.js","index.js","logo.png","CreateAndLogin/logo.png","Profile/profile_picture.png","TopBar/logo.png","ChangeProfile/profile_picture.png","front_img.jpg"],"names":["CheckIfLoggedOut","navigate","useNavigate","localStorage","getItem","react_default","a","createElement","Fragment","CreateAndLogin","token","xmlhttp","XMLHttpRequest","type","submitHandler","e","preventDefault","className","react_router_dom","to","src","Image","alt","Form","onSubmit","Group","Control","placeholder","id","controlId","Check","label","onClick","x","document","getElementById","Button","onreadystatechange","readyState","status","responseText","obj","JSON","parse","atob","split","console","log","alert","setItem","myObj","password","value","myJson","stringify","open","setRequestHeader","send","href","required","maxLength","Select","onChange","target","confirmation","email","name","phone","nif","TopBar","LogoImage","ButtonGroup","size","Dropdown","Toggle","Menu","Item","removeItem","Profile","_useState","useState","_useState2","Object","slicedToArray","username","setUsername","_useState3","_useState4","setEmail","_useState5","_useState6","setName","_useState7","_useState8","setPhone","_useState9","_useState10","setNif","_useState11","_useState12","setType","_useState13","_useState14","setState","state","util_CheckIfLoggedOut","src_TopBar_TopBar","ProfileImage","CSVConverter","checkCSV","json","csv","lines","i","length","currentline","distrito","hasOwnProperty","concelho","freguesia","dicofre","csvJSON","useEffect","LoggedHomepage","util_CSVConverter","variant","ChangeProfile","for","AboutUs","window","google","containerStyle","width","height","center","lat","lng","options","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeWeight","clickable","draggable","editable","geodesic","zIndex","React","memo","distritos","keys","distritoList","push","file","setFile","documentState","setDocument","markerList","setMarker","paths","setPaths","area","setArea","perimeter","setPerimeter","setDistrito","_useState15","_useState16","concelhoOptions","setConcelhoOptions","_useState17","_useState18","freguesiaOptions","setFreguesiaOptions","getPathLength","getDistance","Math","round","getAreaOfPolygon","esm","googleMapsApiKey","mapContainerStyle","zoom","tilt","ev","concat","key","position","icon","path","maps","SymbolPath","CIRCLE","scale","addMarker","latLng","filter","element","index","f","append","toString","_step","_iterator","_createForOfIteratorHelper","entries","s","n","done","pair","err","submitParcel","FormData","Label","listC","list","handleSetDistrito","listF","handleSetConcelho","accept","files","RegisterParcel","src_Map_Map","CheckIfLoggedIn","ChangePassword","oldPassword","newPassword","modalContainerStyle","ParcelDetailsModal","props","setObj","Modal","onShow","owner","show","onHide","setShow","backdrop","dialogClassName","keyboard","Header","closeButton","Title","Body","undefined","coordinates","manager","description","usage","oldUsage","ParcelEditModal","managerValue","setmanagerValue","info","setInfo","managerList","setManager","managersObj","arr","managerName","sendManagerRequest","tipoSolo","MyParcels","editShow","setEditShow","parcelList","setPList","pathsArr","_loop","Card","style","cursor","Img","photoURL","isApproved","Badge","pill","bg","Text","title","Row","Col","handleShow","handleEditShow","util_ParcelDetailsModal_ParcelDetailsModal","util_ParcelEditModal_ParcelEditModal","ProposedParcelsEntity","parcel","addManager","removeManager","soloUtil","oldSoloUtil","ParcelsEntity","parcelName","ApproveParcels","AllParcels","Home","util_CheckIfLoggedIn","Front_img","App","react_router","App_Home","src_CreateAndLogin_CreateAndLogin","src_RegisterParcel_RegisterParcel","src_Profile_Profile","src_LoggedHomepage_LoggedHomepage","src_ChangeProfile_ChangeProfile","src_ChangePassword_ChangePassword","src_AboutUs_AboutUs","src_MyParcels_MyParcels","src_ProposedParcelsEntity_ProposedParcelsEntity","src_ParcelsEntity_ParcelsEntity","src_ApproveParcels_ApproveParcels","src_AllParcels_AllParcels","ReactDOM","createRoot","render","src_App_0","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.ec8233d5.chunk.js","sourcesContent":["import React, { Component }  from 'react';\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst CheckIfLoggedOut = () => {\r\n    const navigate = useNavigate();\r\n    let token = localStorage.getItem('token');\r\n    if(token == null) {\r\n        //O utilizador nao tem um token valido, logo nao tem acesso as pags que precisam de login para lhes aceder\r\n        navigate('/');\r\n    }\r\n\r\n    return(\r\n        <></>\r\n    )\r\n}\r\n\r\nexport default CheckIfLoggedOut","import Image from './logo.png'\r\nimport './CreateAndLogin.css'\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport CheckIfLoggedIn from \"../util/CheckIfLoggedOut\";\r\nimport {Button, Form, InputGroup} from \"react-bootstrap\";\r\nimport React, { Component }  from 'react';\r\n\r\n\r\nconst CreateAndLogin = () => {\r\n  const navigate = useNavigate()\r\n  let xmlhttp = new XMLHttpRequest();\r\n  let token;\r\n  let type = \"personal\";\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n  }\r\n\r\n\r\n  function login() {\r\n\r\n    xmlhttp.onreadystatechange = function () {\r\n      if (xmlhttp.readyState == 4) {\r\n        if (xmlhttp.status == 200) {\r\n          token = xmlhttp.responseText;\r\n          let obj = JSON.parse(atob(token.split(\".\")[1]));\r\n          //console.log(atob(token));\r\n          console.log(obj);\r\n          alert(\"Login efetuado com sucesso.\");\r\n          localStorage.setItem('token', token);\r\n          localStorage.setItem('role', obj[\"role\"]);\r\n          navigate('/homepage');\r\n        } else if(xmlhttp.status == 403) {\r\n          alert(\"O username ou a password introduzidas estão erradas.\");\r\n        } else if(xmlhttp.status == 404) {\r\n          alert(\"O username introduzido não existe.\");\r\n        } else {\r\n          alert(\"Não foi possível efetuar o login.\");\r\n        }\r\n      }\r\n    }\r\n\r\n    let myObj = { password: document.getElementById(\"session-password\").value };\r\n    let myJson = JSON.stringify(myObj);\r\n\r\n    xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.oa.r.appspot.com/rest/login/\" + document.getElementById(\"session-username\").value, true);\r\n    xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n    xmlhttp.send(myJson);\r\n  }\r\n\r\n  function showPassword() {\r\n    var x = document.getElementById(\"session-password\");\r\n    if (x.type === \"password\") {\r\n      x.type = \"text\";\r\n    } else {\r\n      x.type = \"password\";\r\n    }\r\n  }\r\n\r\n  function register() {\r\n    xmlhttp.onreadystatechange = function() {\r\n      if(xmlhttp.readyState == 4) {\r\n        if(xmlhttp.status == 200){\r\n          token = xmlhttp.responseText;\r\n          let obj = JSON.parse(atob(token.split(\".\")[1]));\r\n          console.log(obj);\r\n          alert(\"Registo efetuado com sucesso.\");\r\n          localStorage.setItem('token', token);\r\n          localStorage.setItem('role', obj[\"role\"]);\r\n          navigate('/homepage');\r\n        } else if(xmlhttp.status == 400) {\r\n          alert(\"Todos os campos obrigatórios devem ser preenchidos.\");\r\n        } else if(xmlhttp.status == 409) {\r\n          alert(\"Já existe um utilizador com o mesmo nome.\");\r\n        } else {\r\n          alert(\"Não foi possível registar o utilizador.\");\r\n        }\r\n      }\r\n    }\r\n\r\n    let myObj = {password:document.getElementById(\"create-acc-pass\").value,\r\n                  confirmation:document.getElementById(\"create-acc-conf-pass\").value,\r\n                  email:document.getElementById(\"create-acc-email\").value,\r\n                  name:document.getElementById(\"create-acc-name\").value,\r\n                  phone:document.getElementById(\"create-acc-phone\").value,\r\n                  nif:document.getElementById(\"create-acc-nif\").value};\r\n\r\n    let myJson = JSON.stringify(myObj);\r\n\r\n    console.log(type);\r\n    xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.oa.r.appspot.com/rest/register/\"+ type + \"/\" + document.getElementById(\"create-acc-user\").value, true);\r\n    xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n    xmlhttp.send(myJson);\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      <div className=\"cl_top\">\r\n\r\n        <div>\r\n          <Link to=\"/\"><img src={Image} alt=\"E-Floresta Logo\" className=\"cl_logo\" /></Link>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div className=\"bg-img\">\r\n\r\n        <div className=\"session-body\">\r\n\r\n          <div className=\"initiate-session\">\r\n\r\n            <h2 className=\"align-content\"><b>Iniciar Sessão</b></h2>\r\n\r\n            <Form onSubmit={submitHandler}>\r\n              <Form.Group className=\"session-form\" >\r\n                <Form.Control type=\"text\" placeholder=\"Nome de utilizador\" id=\"session-username\"/>\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"session-form\" >\r\n                <Form.Control type=\"password\" placeholder=\"Palavra-Passe\" id=\"session-password\"/>\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"checkbox-container\" controlId=\"loginShowPassCheckbox\" >\r\n                <Form.Check id=\"checkmark-login\" type=\"checkbox\" label=\"Mostrar Palavra-Passe\" onClick={showPassword}/>\r\n              </Form.Group>\r\n\r\n              <Button id=\"session-button\" type=\"submit\" onClick={login}>\r\n                Entrar\r\n              </Button>\r\n            </Form>\r\n\r\n            <p></p>\r\n            <span className=\"forgot-pass_Login\">Esqueceu a sua palavra-passe? <a href=\"#\">Clique aqui.</a></span>\r\n\r\n          </div>\r\n\r\n          <div className=\"division\"> </div>\r\n\r\n          <div className=\"create-account\">\r\n\r\n            <h2 className=\"align-content\"><b>Registe-se</b></h2>\r\n            <p className=\"align-content\">Ainda não tem conta?</p>\r\n            <p className=\"align-content\">Registe-se agora!</p>\r\n\r\n            <Form onSubmit={submitHandler}>\r\n              <Form.Group className=\"create-form\" >\r\n                <Form.Control required type=\"text\" placeholder=\"Nome de utilizador\" id=\"create-acc-user\" />\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"create-form\" >\r\n                <Form.Control required type=\"email\" placeholder=\"E-mail\" id=\"create-acc-email\" />\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"create-form\" >\r\n                <Form.Control required type=\"text\" placeholder=\"Nome Completo\" id=\"create-acc-name\" />\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"create-form\" >\r\n                <Form.Control required type=\"password\" placeholder=\"Palavra-Passe\" id=\"create-acc-pass\" />\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"create-form\" >\r\n                <Form.Control required type=\"password\" placeholder=\"Confirmar Palavra-Passe\" id=\"create-acc-conf-pass\" />\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"create-form\" >\r\n                <Form.Control placeholder=\"Telemóvel/Telefone\" maxLength=\"9\" id=\"create-acc-phone\" />\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"create-form\" >\r\n                <Form.Control placeholder=\"NIF\" maxLength=\"9\" id=\"create-acc-nif\" />\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"create-form\" >\r\n                <Form.Select required controlId=\"create-acc-type\" onChange={(e) => {type = e.target.value}}>\r\n                  <option value=\"personal\">Conta Pessoal</option>\r\n                  <option value=\"entity\">Conta de Entidade</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n\r\n              <Button id=\"create-acc-button\" type=\"submit\" onClick={register}>\r\n                Registar\r\n              </Button>\r\n\r\n            </Form>\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CreateAndLogin","import LogoImage from './logo.png'\r\nimport './TopBar.css'\r\nimport {Link} from \"react-router-dom\";\r\nimport {Button, ButtonGroup, Dropdown} from \"react-bootstrap\";\r\nimport React, {Component} from 'react';\r\n\r\nconst TopBar = () => {\r\n\r\n    return (\r\n        <div className=\"topBar_top\">\r\n\r\n            <div>\r\n                <Link to=\"/homepage\"><img src={LogoImage} alt=\"E-Floresta Logo\" className=\"topBar_logo\"/></Link>\r\n            </div>\r\n\r\n            <ButtonGroup className=\"buttons_TopBar\" size=\"lg\">\r\n                <Link to=\"/homepage\">\r\n                    <Button id=\"option1\">Página Inicial</Button>\r\n                </Link>\r\n\r\n                <Link to=\"/map\">\r\n                    <Button id=\"option2\">Registar Parcela</Button>\r\n                </Link>\r\n\r\n                {localStorage.getItem('role') == 'D' ? <Link to=\"/my-parcels\">\r\n                    <Button id=\"option3\">Minhas Parcelas</Button>\r\n                </Link> : <></>}\r\n\r\n                {localStorage.getItem('role') == 'C' ? <Link to=\"/parcels-entity\">\r\n                    <Button id=\"option5\">Minhas Parcelas</Button>\r\n                </Link> : <></>}\r\n\r\n                {localStorage.getItem('role') == 'C' ? <Link to=\"/proposed-parcels-entity\">\r\n                    <Button id=\"option6\">Parcelas Pendentes</Button>\r\n                </Link> : <></>}\r\n\r\n                {localStorage.getItem('role') == 'B' ? <Link to=\"/approve-parcels\">\r\n                    <Button id=\"option7\">Parcelas Pendentes</Button>\r\n                </Link> : <></>}\r\n\r\n                {localStorage.getItem('role') == 'B' ? <Link to=\"/all-parcels\">\r\n                    <Button id=\"option8\">Visualizar Parcelas</Button>\r\n                </Link> : <></>}\r\n\r\n                <Link to=\"/about-us\">\r\n                    <Button id=\"option4\">Sobre</Button>\r\n                </Link>\r\n            </ButtonGroup>\r\n\r\n            <Dropdown className=\"my-account-dropdown_TopBar\">\r\n                <Dropdown.Toggle className=\"dropdown_TopBar\">\r\n                    A Minha Conta\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu className=\"dropdown-content_TopBar\">\r\n                    <Dropdown.Item href=\"/profile\">Perfil</Dropdown.Item>\r\n                    <Dropdown.Item href=\"/\" onClick={() => localStorage.removeItem('token')}><b>Encerrar\r\n                        sessão</b></Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopBar","import  './Profile.css'\r\nimport ProfileImage from './profile_picture.png'\r\nimport TopBar from '../TopBar/TopBar.js'\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport { useState } from 'react'\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport React, { Component }  from 'react';\r\n\r\nconst Profile = () => {\r\n    const navigate = useNavigate();\r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [nif, setNif] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    const [state, setState] = useState(\"\"); //TODO: ver se e preciso\r\n\r\n\r\n    let xmlhttp = new XMLHttpRequest();\r\n\r\n    //Permite correr a funcao quando a pagina e carregada\r\n    (function getValues() {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState == 4) {\r\n                if (xmlhttp.status == 200) {\r\n                    const obj = JSON.parse(xmlhttp.responseText);\r\n                    setUsername(obj.username);\r\n                    setEmail(obj.email)\r\n                    setName(obj.name);\r\n                    setPhone(obj.phone);\r\n                    setNif(obj.nif);\r\n                    setType(obj.type);\r\n                    setState(obj.state);\r\n                } else if(xmlhttp.status == 403 ||xmlhttp.status == 404) {\r\n                    alert(\"Não tem permissões para efetuar esta operação.\");\r\n                    localStorage.removeItem(\"token\");\r\n                    navigate(\"/\");\r\n                }\r\n                else {\r\n                    alert(\"Não foi possível obter informação.\");\r\n                }\r\n            }\r\n        }\r\n\r\n        var myObj = {token:localStorage.getItem('token')};\r\n        var myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.oa.r.appspot.com/rest/info/profileinfo\");\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    })()\r\n\r\n    return(\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <TopBar />\r\n            <div className=\"profile_info\">\r\n                <img src={ProfileImage} alt=\"Profile picture\" className=\"profile_pic\"/>\r\n                <p></p>\r\n                <div id=\"username\">\r\n                    <p className=\"label\">Username: {username}</p>\r\n                </div>\r\n                <div id=\"email\">\r\n                    <p className=\"label\">E-mail: {email}</p>\r\n                </div>\r\n                <div id=\"name\">\r\n                    <p className=\"label\">Nome Completo: {name}</p>\r\n                </div>\r\n                <div id=\"phone\">\r\n                    <p className=\"label\">Telemóvel/Telefone: {phone}</p>\r\n                </div>\r\n                <div id=\"nif\">\r\n                    <p className=\"label\">NIF: {nif}</p>\r\n                </div>\r\n                <div id=\"type\">\r\n                    <p className=\"label\">Tipo de utilizador: {type}</p>\r\n                </div>\r\n\r\n                <div className=\"btn-group\" id=\"change-profile-info\">\r\n                    <div id=\"changeProfileInfo_Profile\">\r\n                        <Link to=\"/change-profile\">\r\n                            <button type=\"button\" className=\"btn btn-secondary btn-sm\">Editar Perfil</button>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div id=\"changePassword_Profile\">\r\n                        <Link to=\"/change-password\">\r\n                            <button type=\"button\" className=\"btn btn-warning btn-sm\">Alterar Palavra-Passe</button>\r\n                        </Link>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Profile","import React, {Component, useEffect} from 'react';\r\n//import csv from \"./teste.csv\";\r\n\r\n\r\nconst CSVConverter = () => {\r\n\r\n    function checkCSV() {\r\n\r\n        let xmlhttp = new XMLHttpRequest();\r\n\r\n        if(localStorage.getItem(\"csv\") === null){\r\n            xmlhttp.onreadystatechange = function () {\r\n                if (xmlhttp.readyState == 4) {\r\n                    if (xmlhttp.status == 200) {\r\n                        let csv = xmlhttp.responseText;\r\n                        let json = csvJSON(csv);\r\n                        localStorage.setItem('csv', json);\r\n                    }\r\n                }\r\n            }\r\n\r\n            var myObj = { token: localStorage.getItem('token') };\r\n            var myJson = JSON.stringify(myObj);\r\n\r\n            xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.oa.r.appspot.com/rest/parcel/getCSV\", false);\r\n            xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n            xmlhttp.send(myJson);\r\n        }\r\n    }\r\n\r\n    function csvJSON(csv){\r\n\r\n        let lines=csv.split(\"\\n\");\r\n        let obj = {};\r\n\r\n\r\n        for(let i=1;i<lines.length-1;i++){\r\n            let currentline=lines[i].split(\";\");\r\n\r\n            let distrito = currentline[1];\r\n            if(!obj.hasOwnProperty(distrito)){\r\n                obj[distrito] = {};\r\n            }\r\n\r\n            let concelho = currentline[2];\r\n            if(!obj[distrito].hasOwnProperty(concelho)){\r\n                obj[distrito][concelho] = {};\r\n            }\r\n\r\n            let freguesia = currentline[3];\r\n            obj[distrito][concelho][freguesia] ={\r\n                dicofre:freguesia = currentline[4]\r\n            }\r\n        }\r\n\r\n        return JSON.stringify(obj);\r\n    }\r\n\r\n    useEffect(() =>\r\n    {\r\n        checkCSV();\r\n    })\r\n\r\n    return(\r\n        <></>\r\n    )\r\n}\r\n\r\n\r\nexport default CSVConverter","import  './LoggedHomepage.css'\r\nimport TopBar from '../TopBar/TopBar.js'\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport {Button, Carousel, Modal} from \"react-bootstrap\";\r\nimport {GoogleMap, LoadScript, Polygon} from \"@react-google-maps/api\";\r\nimport React, { Component }  from 'react';\r\nimport CSVConverter from \"../util/CSVConverter\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst LoggedHomepage = () => {\r\n\r\n    return(\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <TopBar />\r\n\r\n            <CSVConverter/>\r\n\r\n            <div className=\"lgh_body\">\r\n\r\n                <div className=\"hero-register_LoggedHome\">\r\n                    <div className=\"hero-register-text_LoggedHome\">\r\n                        <h1><b>Registe as suas parcelas</b></h1>\r\n                        No nosso site é possível registar as suas parcelas de forma rápida e fácil. <br/>\r\n                        Clique na aba \"Registar Parcelas\". Clique no mapa para desenhar o seu terreno e marcar <br/>\r\n                        os seus limites e registe as informações respetivas ao mesmo do lado direito, preenchendo <br/>\r\n                        e selecionando os campos exigidos. Por fim, clique em Submeter. <br/>\r\n                        <p></p>\r\n                        <Link to=\"/map\">\r\n                            <Button id=\"buttonHero-register_LoggedHome\" variant=\"dark\">Registe já</Button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"hero-myParcels_LoggedHome\">\r\n                    <div className=\"hero-myParcels-text_LoggedHome\">\r\n                        <h1><b>Verifique as suas parcelas</b></h1>\r\n                        O site E-Floresta permite-lhe guardar toda a informação sobre os seus terrenos num único sítio,<br/>\r\n                        para um acesso rápido e fácil. Clique na aba \"Minhas Parcelas\". O mapa do lado esquerdo contém <br/>\r\n                        marcados todos os seus terrenos registados. Do lado direito, existe um cartão para cada uma das <br/>\r\n                        propriedades registadas. Clique em \"Detalhes\" para ver todas as informações sobre uma parcela. <br/>\r\n                        Clique em \"Editar\" para alterar alguma informação sobre a parcela em causa. <br/>\r\n                        <p></p>\r\n                        <Link to=\"/my-parcels\">\r\n                            <Button id=\"buttonHero-register_LoggedHome\" variant=\"dark\">Verifique as suas parcelas</Button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoggedHomepage\r\n","import  './ChangeProfile.css'\r\nimport TopBar from '../TopBar/TopBar.js'\r\nimport ProfileImage from \"./profile_picture.png\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport React, { Component }  from 'react';\r\nimport {useState} from \"react\";\r\n\r\nconst ChangeProfile = () => {\r\n    const navigate = useNavigate();\r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [nif, setNif] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n\r\n    let xmlhttp = new XMLHttpRequest();\r\n\r\n    (function getValues() {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState == 4) {\r\n                if (xmlhttp.status == 200) {\r\n                    const obj = JSON.parse(xmlhttp.responseText);\r\n                    setUsername(obj.username);\r\n                    setEmail(obj.email)\r\n                    setName(obj.name);\r\n                    setPhone(obj.phone);\r\n                    setNif(obj.nif);\r\n                    setType(obj.type);\r\n                } else if(xmlhttp.status == 403 ||xmlhttp.status == 404) {\r\n                    alert(\"Não tem permissões para efetuar esta operação.\");\r\n                    localStorage.removeItem(\"token\");\r\n                    navigate(\"/\");\r\n                }\r\n                else {\r\n                    alert(\"Não foi possível obter informação.\");\r\n                }\r\n            }\r\n        }\r\n\r\n        var myObj = {token:localStorage.getItem('token')};\r\n        var myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.oa.r.appspot.com/rest/info/profileinfo\");\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    })()\r\n\r\n\r\n\r\n    function changeProfile() {\r\n\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState == 4) {\r\n                if (xmlhttp.status == 200) {\r\n                    alert(\"Informação alterada com sucesso.\");\r\n                    navigate(\"/profile\");\r\n                } else if(xmlhttp.status == 403 ||xmlhttp.status == 404) {\r\n                    alert(\"Não tem permissões para efetuar esta operação.\");\r\n                    localStorage.removeItem(\"token\");\r\n                    navigate(\"/\");\r\n                }\r\n                else {\r\n                    alert(\"Não foi possível obter informação.\");\r\n                }\r\n            }\r\n        }\r\n\r\n        var myObj = {name:document.getElementById(\"change-complete-name\").value,\r\n            phone:document.getElementById(\"change-phone\").value,\r\n            nif:document.getElementById(\"change-nif\").value,\r\n            token:localStorage.getItem('token')\r\n        };\r\n\r\n        var myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.oa.r.appspot.com/rest/modify/info\");\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <TopBar />\r\n\r\n            <div className=\"profileInfo_ChangeProfile\">\r\n                <img src={ProfileImage} alt=\"Profile picture\" className=\"profile_pic\"/>\r\n                <p></p>\r\n                <div id=\"username_ChangeProfile\">\r\n                    <p className=\"label\" > Username: {username} </p>\r\n                </div>\r\n                <div id=\"email_ChangeProfile\">\r\n                    <p className=\"label\" > E-mail: {email} </p>\r\n                </div>\r\n                <div id=\"name_ChangeProfile\">\r\n                    <label className=\"label\"> Nome Completo: </label>\r\n                    <input id=\"change-complete-name\" type=\"text\" value={name}/>\r\n                </div>\r\n                <div id=\"phone_ChangeProfile\">\r\n                    <label className=\"label\"> Telemóvel/Telefone: </label>\r\n                    <input id=\"change-phone\" type=\"number\" value={phone} maxLength=\"9\"/>\r\n                </div>\r\n                <div id=\"nif_ChangeProfile\">\r\n                    <label className=\"label\" for=\"change-nif\">NIF:</label>\r\n                    <input id=\"change-nif\" type=\"number\" value={nif} maxLength=\"9\"/>\r\n                </div>\r\n                <div id=\"type_ChangeProfile\">\r\n                    <p className=\"label\"> Tipo de utilizador: {type} </p>\r\n                </div>\r\n\r\n                <div className=\"btn-group\" id=\"confirmAndCancel_ChangeProfile\">\r\n                    <div id=\"confirmChanges_ChangeProfile\">\r\n                        <Button type=\"button\" className=\"btn btn-success btn-sm\" onClick={changeProfile} >Confirmar Alterações</Button>\r\n                    </div>\r\n\r\n                    <div id=\"cancelChanges_ChangeProfile\">\r\n                        <Link to=\"/profile\">\r\n                            <Button type=\"button\" className=\"btn btn-secondary btn-sm\">Cancelar Alterações </Button>\r\n                        </Link>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default ChangeProfile","import  './AboutUs.css'\r\nimport TopBar from '../TopBar/TopBar.js'\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport React, { Component }  from 'react';\r\n\r\nconst AboutUs = () => {\r\n    return(\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <TopBar />\r\n            <div className=\"about-us\">\r\n                <h1>Equipa E-Floresta!</h1>\r\n            </div>\r\n\r\n            <div className=\"initial-text\">\r\n                O interior de Portugal está a viver um processo de desertificação populacional provocado pelo movimento\r\n                dos mais jovens para o litoral e pelo envelhecimento da população com graves consequências económicas,\r\n                sociais e ambientais. Em particular, a gestão da floresta torna-se incomportável, dando origem a perdas\r\n                económicas e ambientais resultantes dos incêndios florestais. Assim, a autarquia de Mação pretende\r\n                reordenar o seu território liderando uma iniciativa que promove a gestão integrada dos terrenos florestais\r\n                para ganhar escala e reduzir custos. <p> Esta plataforma web permite registar a adesão voluntária dos proprietários\r\n                a esta iniciativa comunitária e, posteriormente, seguir a sua gestão em termos de custos e proveitos. </p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default AboutUs","import React, {useEffect} from 'react'\r\nimport {GoogleMap, LoadScript} from '@react-google-maps/api';\r\nimport {Marker} from '@react-google-maps/api';\r\nimport {useState} from 'react'\r\nimport {Polygon} from '@react-google-maps/api';\r\nimport \"./Map.css\"\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport {getAreaOfPolygon, getDistance, getPathLength} from 'geolib';\r\nimport CSVConverter from \"../util/CSVConverter\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst google = window.google;\r\n\r\nconst containerStyle = {\r\n    width: '75vw',\r\n    height: 'calc(100vh - 60px)'\r\n};\r\n\r\nconst center = {\r\n    lat: 38.660677,\r\n    lng: -9.205971\r\n};\r\n\r\nconst options = {\r\n    fillColor: \"Khaki\",\r\n    fillOpacity: 0.3,\r\n    strokeColor: \"DarkOrange\",\r\n    strokeOpacity: 1,\r\n    strokeWeight: 2,\r\n    clickable: false,\r\n    draggable: false,\r\n    editable: false,\r\n    geodesic: false,\r\n    zIndex: 1\r\n}\r\n\r\n\r\nconst Map = () => {\r\n    const navigate = useNavigate();\r\n    const obj = JSON.parse(localStorage.getItem('csv'));\r\n    const distritos = Object.keys(obj);\r\n    const distritoList = [];\r\n    for(let i = 0; i<distritos.length; i++) {\r\n        distritoList.push(<option>{distritos[i]}</option>)\r\n    }\r\n\r\n    const [file, setFile] = useState();\r\n    const [documentState, setDocument] = useState();\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData(e.target);\r\n        submitParcel(formData);\r\n    }\r\n\r\n    const [markerList, setMarker] = useState([]);\r\n    const [paths, setPaths] = useState([]);\r\n    const [area, setArea] = useState(0);\r\n    const [perimeter, setPerimeter] = useState(0);\r\n\r\n    const [distrito, setDistrito] = useState(\"\");\r\n    const [concelhoOptions, setConcelhoOptions] = useState([]);\r\n    const [freguesiaOptions, setFreguesiaOptions] = useState([]);\r\n\r\n\r\n    function handleSetDistrito(distrito){\r\n        setDistrito(distrito);\r\n        let listC = Object.keys(obj[distrito]);\r\n\r\n        let list = [];\r\n        for(let i = 0; i<listC.length; i++){\r\n            list.push(<option>{listC[i]}</option>);\r\n        }\r\n        setConcelhoOptions(list);\r\n    }\r\n\r\n    function handleSetConcelho(concelho){\r\n        console.log(obj);\r\n        console.log(distrito);\r\n        console.log(concelho);\r\n        let listF = Object.keys(obj[distrito][concelho]);\r\n\r\n        let list = [];\r\n        for(let i = 0; i<listF.length; i++){\r\n            list.push(<option>{listF[i]}</option>);\r\n        }\r\n        setFreguesiaOptions(list);\r\n    }\r\n\r\n\r\n    React.useEffect(() => {\r\n        setPerimeter(getPathLength(paths) + (paths.length>1 ? getDistance(paths[paths.length-1], paths[0]) : 0));\r\n        setArea(Math.round(getAreaOfPolygon(paths)));\r\n    }, [paths]);\r\n\r\n\r\n    function addMarker(lat, lng) {\r\n        const google = window.google;\r\n\r\n        console.log(lat, lng);\r\n\r\n        setMarker(markerList.concat(<Marker key={markerList.length} id={markerList.length}\r\n                                            position={{\r\n                                                lat: lat,\r\n                                                lng: lng\r\n                                            }}\r\n                                            icon={{\r\n                                                path: google.maps.SymbolPath.CIRCLE,\r\n                                                fillColor: \"#ff8000\",\r\n                                                fillOpacity: 1.0,\r\n                                                strokeWeight: 0,\r\n                                                scale: 5\r\n                                            }}/>))\r\n\r\n        setPaths(paths.concat({\r\n            lat: lat,\r\n            lng: lng\r\n        }));\r\n    }\r\n\r\n\r\n    function rollback() {\r\n        setMarker(markerList.filter((element, index) => index < markerList.length - 1));\r\n        setPaths(paths.filter((element, index) => index < paths.length - 1));\r\n    }\r\n\r\n    function submitParcel(f) {\r\n        let xmlhttp = new XMLHttpRequest();\r\n\r\n        xmlhttp.onreadystatechange = function() {\r\n            if (xmlhttp.readyState == 4) {\r\n                if (xmlhttp.status == 200) {\r\n                    alert(\"Parcela registada com sucesso.\");\r\n                    navigate(\"/map\");\r\n                } else if(xmlhttp.status == 400) {\r\n                    alert(\"Todos os campos obrigatórios devem ser preenchidos.\");\r\n                    alert(xmlhttp.responseText);\r\n                } else if(xmlhttp.status == 403 || xmlhttp.status == 404) {\r\n                    alert(\"Não tem permissões para efetuar esta operação.\");\r\n                    localStorage.removeItem(\"token\");\r\n                    navigate(\"/\");\r\n                } else if(xmlhttp.status == 409) {\r\n                    alert(\"Já possui uma parcela com o mesmo nome.\")\r\n                }\r\n            }\r\n        }\r\n\r\n        f.append('name', document.getElementById(\"formParcelName\").value);\r\n        f.append('distrito', document.getElementById(\"formDistritoDropdown\").value);\r\n        f.append('concelho', document.getElementById(\"formConcelhoDropdown\").value);\r\n        f.append('freguesia', document.getElementById(\"formFreguesiaDropdown\").value);\r\n        f.append('photo', file);\r\n        f.append('coordinates', JSON.stringify(paths));\r\n        f.append('area', area.toString());\r\n        f.append('perimeter', perimeter.toString());\r\n        f.append('document', documentState);\r\n        f.append('usage', document.getElementById(\"formParcelUsage\").value);\r\n        f.append('oldUsage', document.getElementById(\"formParcelOldUsage\").value);\r\n\r\n        for (var pair of f.entries()) {\r\n            console.log(pair[0]+ ', ' + pair[1]);\r\n        }\r\n\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.oa.r.appspot.com/rest/parcel/register?token=\" + localStorage.getItem(\"token\"), true);\r\n        xmlhttp.send(f);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"mapDiv_Map\">\r\n            <CSVConverter/><LoadScript\r\n            googleMapsApiKey=\"AIzaSyAzmUVpLtuvY1vhrHL_-rcDyk_krHMdSjQ\"\r\n        >\r\n\r\n            <GoogleMap\r\n                mapContainerStyle={containerStyle}\r\n                center={center}\r\n                zoom={10}\r\n                tilt={0}\r\n                onClick={ev => {\r\n                    addMarker(ev.latLng.lat(), ev.latLng.lng())\r\n                }}\r\n            >\r\n                <Polygon\r\n                    paths={paths}\r\n                    options={options}\r\n                />\r\n                {markerList}\r\n                <></>\r\n            </GoogleMap>\r\n        </LoadScript>\r\n\r\n            <div className=\"wrapper\">\r\n                <div id=\"sideBar\">\r\n                    <div id=\"parcelInfo\">\r\n                        <div id=\"parcelArea\">\r\n                            <div className=\"MapInfo_Map\">Área</div>\r\n                            <div className=\"MapInfo_Map\">{area}m²</div>\r\n                        </div>\r\n                        <br/>\r\n                        <div id=\"parcelPerimeter\">\r\n                            <div className=\"MapInfo_Map\">Perímetro</div>\r\n                            <div className=\"MapInfo_Map\">{perimeter}m</div>\r\n                        </div>\r\n                    </div>\r\n                    <button type=\"button\" id=\"rollback\" className={paths.length > 0 ? \"btn btn-success\" : \"btn btn-secondary\"} onClick={rollback}>Voltar atrás</button>\r\n                </div>\r\n\r\n\r\n                <div className=\"submit_Map\">\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group className=\"mt-3\" controlId=\"formParcelName\">\r\n                            <Form.Label> <strong>Nome da Parcela</strong> </Form.Label>\r\n                            <Form.Control className=\"map_fields\" required type=\"text\" placeholder=\"Nome da parcela\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mt-3\" controlId=\"formDistritoDropdown\">\r\n                            <Form.Label> <strong>Distrito</strong> </Form.Label>\r\n                            <Form.Select className=\"map_fields\" onChange={(e) => handleSetDistrito(e.target.value)}>\r\n                                {distritoList}\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mt-3\" controlId=\"formConcelhoDropdown\">\r\n                            <Form.Label> <strong>Concelho</strong> </Form.Label>\r\n                            <Form.Select className=\"map_fields\" onChange={(e) => handleSetConcelho(e.target.value)}>\r\n                                {concelhoOptions}\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mt-3\" controlId=\"formFreguesiaDropdown\">\r\n                            <Form.Label> <strong>Freguesia</strong> </Form.Label>\r\n                            <Form.Select className=\"map_fields\">\r\n                                {freguesiaOptions}\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mt-3\" controlId=\"formParcelCover\">\r\n                            <Form.Label> <strong>Cobertura do solo</strong> </Form.Label>\r\n                            <Form.Control className=\"map_fields\" required type=\"text\" placeholder=\"Cobertura do solo\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mt-3\" controlId=\"formParcelUsage\">\r\n                            <Form.Label> <strong>Utilização do solo</strong> </Form.Label>\r\n                            <Form.Control className=\"map_fields\" required type=\"text\" placeholder=\"Utilização do solo\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mt-3\" controlId=\"formParcelOldUsage\">\r\n                            <Form.Label> <strong>Utilização prévia do solo</strong> </Form.Label>\r\n                            <Form.Control className=\"map_fields\" required type=\"text\" placeholder=\"Utilização prévia do solo\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"position-relative mt-3\" controlId=\"formParcelPhoto\">\r\n                            <Form.Label> <strong>Foto</strong> </Form.Label>\r\n                            <Form.Control\r\n                                className=\"map_fields\"\r\n                                type=\"file\"\r\n                                required\r\n                                name=\"file\"\r\n                                accept = \".png\"\r\n                                onChange={(e) => setFile(e.target.files[0])}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"position-relative mt-3\" controlId=\"formParcelPdf\">\r\n                            <Form.Label> <strong>PDF</strong> </Form.Label>\r\n                            <Form.Control\r\n                                className=\"map_fields\"\r\n                                type=\"file\"\r\n                                required\r\n                                name=\"file\"\r\n                                accept = \".pdf\"\r\n                                onChange={(e) => setDocument(e.target.files[0])}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Button className=\"mt-3 mb-3\" variant=\"success\" type=\"submit\">\r\n                            Submeter\r\n                        </Button>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default React.memo(Map)","import TopBar from \"../TopBar/TopBar.js\"\r\nimport Map from \"../Map/Map.js\"\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport React, { Component }  from 'react';\r\n\r\nconst RegisterParcel = () => {\r\n    return(\r\n        <>\r\n\r\n        <CheckIfLoggedOut />\r\n        <TopBar/>\r\n            <div className=\"map_RegisterPortion\">\r\n                <Map/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RegisterParcel","import React, { Component }  from 'react';\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst CheckIfLoggedIn = () => {\r\n    const navigate = useNavigate();\r\n    let token = localStorage.getItem('token');\r\n    if(token != null) {\r\n        //O utilizador saiu da pag sem fazer logout e ainda tem um token valido, logo nao precisa de fazer login novamente\r\n        navigate(\"/homepage\");\r\n    }\r\n\r\n    return(\r\n        <></>\r\n    )\r\n}\r\n\r\nexport default CheckIfLoggedIn","import './ChangePassword.css'\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport React, { Component }  from 'react';\r\n\r\nconst ChangePassword = () => {\r\n    const navigate = useNavigate();\r\n    let oldPassword, newPassword, confirmation\r\n\r\n    let xmlhttp = new XMLHttpRequest();\r\n\r\n    function changePassword() {\r\n\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState == 4) {\r\n                if (xmlhttp.status == 200) {\r\n                    alert(\"Palavra-passe alterada com sucesso.\");\r\n                    navigate(\"/profile\");\r\n                } else if (xmlhttp.status == 400) {\r\n                    alert(\"A nova palavra-passe e a confirmação não coincidem.\")\r\n                } else if (xmlhttp.status == 403 || xmlhttp.status == 404) {  //TODO: tratar de forma diferente se a pessoa errar a oldPassword\r\n                    alert(\"Não tem permissões para efetuar esta operação.\");\r\n                    localStorage.removeItem(\"token\");\r\n                    navigate(\"/\");\r\n                } else {\r\n                    alert(\"Não foi alterar a palavra-passe.\");\r\n                }\r\n            }\r\n        }\r\n\r\n        var myObj = {\r\n            oldPassword: document.getElementById(\"old-password\").value,\r\n            newPassword: document.getElementById(\"new-password\").value,\r\n            confirmation: document.getElementById(\"confirm-password\").value,\r\n            token: localStorage.getItem('token')\r\n        };\r\n\r\n        var myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.oa.r.appspot.com/rest/modify/password\");\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CheckIfLoggedOut/>\r\n            <TopBar/>\r\n\r\n            <div className=\"body-changePassword\">\r\n                <div id=\"oldPassword_ChangePassword\">\r\n                    Palavra-Passe Antiga: {oldPassword} <input className=\"fields_ChangePassword\" id=\"old-password\" type=\"password\"/>\r\n                </div>\r\n                <div id=\"newPassword_ChangePassword\">\r\n                    Nova Palavra-Passe: {newPassword} <input className=\"fields_ChangePassword\" id=\"new-password\" type=\"password\"/>\r\n                </div>\r\n                <div id=\"confirmPassword_ChangePassword\">\r\n                    Confirmar nova Palavra-Passe: {confirmation} <input className=\"fields_ChangePassword\" id=\"confirm-password\" type=\"password\"/>\r\n                </div>\r\n\r\n                <div className=\"btn-group\" id=\"confirmAndCancel_ChangePassword\">\r\n                    <div id=\"confirm_ChangePassword\">\r\n                        <Button type=\"button\" className=\"btn btn-success btn-sm\" onClick={changePassword} >Confirmar Alterações</Button>\r\n                    </div>\r\n\r\n                    <div id=\"cancel_ChangePassword\">\r\n                        <Link to=\"/profile\">\r\n                            <Button type=\"button\" className=\"btn btn-secondary btn-sm\">Cancelar Alterações </Button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ChangePassword","import {Modal} from \"react-bootstrap\";\r\nimport React from 'react';\r\nimport {GoogleMap, LoadScript, Polygon} from \"@react-google-maps/api\";\r\nimport {useState} from \"react\";\r\n\r\n\r\nconst center = {\r\n    lat: 38.660677,\r\n    lng: -9.205971\r\n};\r\n\r\nconst options = {\r\n    fillColor: \"Khaki\",\r\n    fillOpacity: 0.3,\r\n    strokeColor: \"DarkOrange\",\r\n    strokeOpacity: 1,\r\n    strokeWeight: 2,\r\n    clickable: false,\r\n    draggable: false,\r\n    editable: false,\r\n    geodesic: false,\r\n    zIndex: 1\r\n}\r\n\r\nconst modalContainerStyle = {\r\n    width: '100%',\r\n    height: '45vh'\r\n};\r\n\r\nconst ParcelDetailsModal = (props) => {\r\n\r\n    const [obj, setObj] = useState({});\r\n\r\n    const handleClose = () => props.setShow(false);\r\n\r\n    let xmlhttp = new XMLHttpRequest();\r\n\r\n    function loadModalValues() {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState == 4) {\r\n                if (xmlhttp.status == 200) {\r\n                    setObj(JSON.parse(xmlhttp.responseText));\r\n                }\r\n            }\r\n        }\r\n        let myObj = {token:localStorage.getItem('token')};\r\n        let myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.oa.r.appspot.com/rest/parcel/parcelInfo?parcelName=\"+props.obj.owner+\"_\"+props.obj.name); //TODO:alterar link\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n    return <>\r\n        <Modal\r\n            onShow={loadModalValues}\r\n            show={props.show}\r\n            onHide={handleClose}\r\n            backdrop=\"static\"\r\n            dialogClassName=\"modal-xl\"\r\n            keyboard={false}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title> Parcela: {props.obj.name} </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n\r\n            <GoogleMap\r\n                mapContainerStyle={modalContainerStyle}\r\n                center={center}\r\n                zoom={10}\r\n                tilt={0}\r\n            >\r\n                <Polygon\r\n                    paths={JSON.parse(props.obj.coordinates == undefined ? \"[]\" : props.obj.coordinates)}\r\n                    options={options}\r\n                />\r\n            </GoogleMap>\r\n\r\n            </Modal.Body>\r\n\r\n            <Modal.Body>\r\n                <label><b>Proprietário:</b> {props.obj.owner} </label><br/>\r\n                <label><b>Gerente:</b> {props.obj.manager} </label><br/>\r\n                <label><b>Freguesia:</b> {props.obj.freguesia} </label><br/>\r\n                <label><b>Concelho:</b> {props.obj.concelho} </label><br/>\r\n                <label><b>Distrito:</b> {props.obj.distrito} </label><br/>\r\n                <label><b>Área da parcela:</b> {props.obj.area}m² </label><br/>\r\n                <label><b>Perímetro da parcela:</b> {props.obj.perimeter}m </label><br/>\r\n                <label><b>Descrição:</b> {props.obj.description} </label><br/>\r\n                <label><b>Tipo de cobertura do solo:</b> {/*props.obj.tipoSolo*/} </label><br/>\r\n                <label><b>Utilização atual do solo:</b> {obj.usage} </label><br/>\r\n                <label><b>Utilização prévia do solo:</b> {obj.oldUsage} </label><br/>\r\n            </Modal.Body>\r\n        </Modal>\r\n    </>\r\n}\r\n\r\nexport default ParcelDetailsModal;","import './ParcelEditModal.css'\r\n\r\nimport {Button, ButtonGroup, Dropdown, Modal} from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport {GoogleMap, LoadScript, Polygon} from \"@react-google-maps/api\";\r\nimport {useState} from \"react\";\r\n\r\n\r\nconst center = {\r\n    lat: 38.660677,\r\n    lng: -9.205971\r\n};\r\n\r\nconst options = {\r\n    fillColor: \"Khaki\",\r\n    fillOpacity: 0.3,\r\n    strokeColor: \"DarkOrange\",\r\n    strokeOpacity: 1,\r\n    strokeWeight: 2,\r\n    clickable: false,\r\n    draggable: false,\r\n    editable: false,\r\n    geodesic: false,\r\n    zIndex: 1\r\n}\r\n\r\nconst modalContainerStyle = {\r\n    width: '100%',\r\n    height: '45vh'\r\n};\r\n\r\n\r\nconst ParcelEditModal = (props) => {\r\n    const [managerValue, setmanagerValue] = useState(\"\");\r\n\r\n    const [obj, setObj] = useState({});\r\n    const [info, setInfo] = useState({});\r\n\r\n    const [managerList, setManager] = useState([]);\r\n\r\n    const handleEditClose = () => props.setShow(false);\r\n\r\n    let xmlhttp = new XMLHttpRequest();\r\n\r\n    (function loadManagers() {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState == 4) {\r\n                if (xmlhttp.status == 200) {\r\n                    const managersObj = JSON.parse(xmlhttp.responseText);\r\n                    let arr = [];\r\n\r\n                    for(let i = 0; i<managersObj.length; i++){\r\n                        arr.push(<option value={managersObj[i]}>{managersObj[i]}</option>)\r\n                    }\r\n                    setmanagerValue(managersObj[0]);\r\n                    setManager(arr);\r\n                }\r\n            }\r\n        }\r\n\r\n        let myObj = {token:localStorage.getItem('token')};\r\n        let myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.oa.r.appspot.com/rest/parcel/managers\");\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    })()\r\n\r\n    function hasManager() {\r\n        if(props.obj.manager != \"\") {\r\n            return(\r\n                <label>\r\n                    <b>Gerente:</b> {props.obj.manager}\r\n                    <Button id=\"rmv-manager_MyParcels\" className=\"managerButtons_ParcelEditModal\" variant=\"danger\" size=\"sm\">Remover gerente</Button>\r\n                </label>\r\n            )\r\n        } else {\r\n            return(\r\n                <label>\r\n                    <b>Gerente:</b>\r\n\r\n                    <select id=\"dropdown-basic\" className=\"managerButtons_ParcelEditModal\" onChange={(e) => {setmanagerValue(e.target.value)}/*(e) => {managerValue = e}*/}>\r\n                        {managerList}\r\n                    </select>\r\n\r\n                    <Button onClick={() => {sendManagerRequest()}} id=\"add-manager_MyParcels\" className=\"managerButtons_ParcelEditModal\" variant=\"success\" size=\"sm\">Adicionar gerente</Button>\r\n\r\n                </label>\r\n            )\r\n        }\r\n    }\r\n\r\n    function loadModalValues() {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState == 4) {\r\n                if (xmlhttp.status == 200) {\r\n                    setInfo(JSON.parse(xmlhttp.responseText));\r\n                }\r\n            }\r\n        }\r\n        var myObj = {token:localStorage.getItem('token')};\r\n        var myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.oa.r.appspot.com/rest/parcel/parcelInfo?parcelName=\"+props.obj.owner+\"_\"+props.obj.name);\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n    function sendManagerRequest() {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState == 4) {\r\n                if (xmlhttp.status == 200) {\r\n                    alert(\"Pedido enviado.\")\r\n                }\r\n            }\r\n        }\r\n        var myObj = {token:localStorage.getItem('token'),\r\n                        managerName:managerValue};\r\n        console.log(myObj);\r\n        var myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.oa.r.appspot.com/rest/parcel/sendRequest/\" + props.obj.owner + \"_\" + props.obj.name); //TODO:alterar link\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n    /**\r\n     * function changeParcelInfo() {\r\n     *         xmlhttp.onreadystatechange = function () {\r\n     *             if (xmlhttp.readyState == 4) {\r\n     *                 if (xmlhttp.status == 200) {\r\n     *                     alert(\"Informação alterada com sucesso.\");\r\n     *                 } else if(xmlhttp.status == 403 ||xmlhttp.status == 404) {\r\n     *                     alert(\"Não tem permissões para efetuar esta operação.\");\r\n     *                     localStorage.removeItem(\"token\");\r\n     *                     window.location.href = \"/\";\r\n     *                 }\r\n     *                 else {\r\n     *                     alert(\"Não foi possível concluir a operação.\");\r\n     *                 }\r\n     *             }\r\n     *         }\r\n     *\r\n     *         var myObj = {tipoSolo:document.getElementById(\"cobertSolo-editParcelModal_ApproveParcels\").value,\r\n     *             usage:document.getElementById(\"utilAtSolo-editParcelModal_ApproveParcels\").value,\r\n     *             oldUsage:document.getElementById(\"utilPrevSolo-editParcelModal_ApproveParcels\").value,\r\n     *             token:localStorage.getItem('token')\r\n     *         };\r\n     *\r\n     *         var myJson = JSON.stringify(myObj);\r\n     *\r\n     *         xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.oa.r.appspot.com/rest/parcel//info\");\r\n     *         xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n     *         xmlhttp.send(myJson);\r\n     *     }\r\n     */\r\n\r\n\r\n    return <>\r\n        <Modal\r\n            onShow={loadModalValues}\r\n            show={props.show}\r\n            onHide={handleEditClose}\r\n            backdrop=\"static\"\r\n            dialogClassName=\"modal-xl\"\r\n            keyboard={false}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title> Parcela: {props.obj.name} </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n\r\n                <GoogleMap\r\n                    mapContainerStyle={modalContainerStyle}\r\n                    center={center}\r\n                    zoom={10}\r\n                    tilt={0}\r\n                >\r\n                    <Polygon\r\n                        paths={JSON.parse(props.obj.coordinates == undefined ? \"[]\" : props.obj.coordinates)}\r\n                        options={options}\r\n                    />\r\n                    \r\n                </GoogleMap>\r\n\r\n                <div>\r\n\r\n                    <ButtonGroup className=\"buttons-editParcelModal_ApproveParcels\" size=\"sm\">\r\n\r\n                        <Button id=\"rollback-editParcelModal_ApproveParcels\" variant=\"secondary\"> Retroceder </Button>\r\n\r\n                        <Button id=\"confirmNewCoord-editParcelModal_ApproveParcels\" variant=\"success\" > Confirmar novas coordenadas </Button>\r\n\r\n                    </ButtonGroup>\r\n                    <label id=\"newA-editParcelModal_ApproveParcels\"> <b>Nova área:</b> </label>\r\n                    <label id=\"newP-editParcelModal_ApproveParcels\"> <b>Novo perímetro:</b> </label>\r\n                </div>\r\n                <p></p>\r\n\r\n                <label className=\"labels-editParcelModal_ApproveParcels\"><b>Proprietário:</b> {props.obj.owner} </label><br/>\r\n\r\n                <label className=\"labels-editParcelModal_ApproveParcels\"> {hasManager()} </label><br/>\r\n\r\n                <label className=\"labels-editParcelModal_ApproveParcels\"><b>Freguesia:</b> {props.obj.freguesia} </label><br/>\r\n\r\n                <label className=\"labels-editParcelModal_ApproveParcels\"><b>Concelho:</b> {props.obj.concelho} </label><br/>\r\n\r\n                <label className=\"labels-editParcelModal_ApproveParcels\"><b>Distrito:</b> {props.obj.distrito} </label><br/>\r\n\r\n                <label className=\"labels-editParcelModal_ApproveParcels\"><b>Área da parcela:</b> {props.obj.area}m² </label><br/>\r\n\r\n                <label className=\"labels-editParcelModal_ApproveParcels\"><b>Perímetro da parcela:</b> {props.obj.perimeter}m </label><br/>\r\n\r\n                <label for=\"cobertSolo-editParcelModal_ApproveParcels\"><b>Tipo de cobertura do solo:</b>\r\n                    <input id=\"cobertSolo-editParcelModal_ApproveParcels\" className=\"inputs-editParcelModal\" type=\"text\" value={info.tipoSolo} />\r\n                </label><br/>\r\n\r\n                <label for=\"utilAtSolo-editParcelModal_ApproveParcels\"><b>Utilização atual do solo:</b>\r\n                    <input id=\"utilAtSolo-editParcelModal_ApproveParcels\" className=\"inputs-editParcelModal\" type=\"text\" value={info.usage} />\r\n                </label><br/>\r\n\r\n                <label for=\"utilPrevSolo-editParcelModal_ApproveParcels\"><b>Utilização prévia do solo:</b>\r\n                    <input id=\"utilPrevSolo-editParcelModal_ApproveParcels\" className=\"inputs-editParcelModal\" type=\"text\" value={info.oldUsage} />\r\n                </label><br/>\r\n                <p></p>\r\n\r\n                <Button type=\"button\" className=\"btn btn-success btn-sm\"> Confirmar Alterações </Button>\r\n\r\n            </Modal.Body>\r\n        </Modal>\r\n    </>\r\n\r\n}\r\n\r\n\r\nexport default ParcelEditModal;","import \"./MyParcels.css\"\r\n\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport {Badge, Button, ButtonGroup, Card, Col, Dropdown, Modal, Row} from \"react-bootstrap\";\r\nimport {useEffect, useState} from 'react'\r\nimport React from 'react';\r\nimport {GoogleMap, LoadScript, Polygon} from \"@react-google-maps/api\";\r\nimport ParcelDetailsModal from \"../util/ParcelDetailsModal/ParcelDetailsModal\";\r\nimport ParcelEditModal from \"../util/ParcelEditModal/ParcelEditModal\";\r\n\r\nconst containerStyle = {\r\n    width: '75vw',\r\n    height: '93.5vh'\r\n};\r\n\r\nconst center = {\r\n    lat: 38.660677,\r\n    lng: -9.205971\r\n};\r\n\r\nconst options = {\r\n    fillColor: \"Khaki\",\r\n    fillOpacity: 0.1,\r\n    strokeColor: \"DarkOrange\",\r\n    strokeOpacity: 1,\r\n    strokeWeight: 2,\r\n    clickable: false,\r\n    draggable: false,\r\n    editable: false,\r\n    geodesic: false,\r\n    zIndex: 1\r\n}\r\n\r\nconst modalContainerStyle = {\r\n    width: '72vw',\r\n    height: '45vh'\r\n};\r\n\r\n\r\nconst MyParcels = () => {\r\n    const [obj, setObj] = useState({});\r\n\r\n    const [paths, setPaths] = useState([]);\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [editShow, setEditShow] = useState(false);\r\n\r\n    const handleShow = (obj) => {\r\n        console.log(\"show\")\r\n        setObj(obj);\r\n        setShow(true);\r\n        setEditShow(false);\r\n    }\r\n    const handleEditShow = (obj) => {\r\n        console.log(\"showedit\")\r\n        setObj(obj);\r\n        setShow(false);\r\n        setEditShow(true);\r\n    }\r\n    const handleClose = () => setShow(false);\r\n    const handleEditClose = () => setEditShow(false);\r\n\r\n    const [parcelList, setPList] = useState([]);\r\n\r\n    let xmlhttp = new XMLHttpRequest();\r\n\r\n    let arr = [];\r\n    let pathsArr = [];\r\n    let verified = false;\r\n\r\n    function isParcelVerified(verified) {\r\n        if(verified) {\r\n            return(\r\n                <Badge pill bg=\"success\">Verificada</Badge>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <Badge pill bg=\"secondary\">Por verificar</Badge>\r\n            )\r\n        }\r\n    }\r\n\r\n    function hasManager() {\r\n        if(obj.manager != \"\") {\r\n            return(\r\n                <label>\r\n                    <b>Gerente:</b> {obj.manager}\r\n                    <Button id=\"rmv-manager_MyParcels\" variant=\"danger\" size=\"sm\">Remover gerente</Button>\r\n                </label>\r\n            )\r\n        } else {\r\n            return(\r\n                <label>\r\n                    <b>Gerente:</b>\r\n\r\n                    <Dropdown>\r\n                        <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\r\n                            Gerentes disponíveis\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu> //TODO:alterarDropdown\r\n                            <Dropdown.Item value=\"gerente1\">Gerente1</Dropdown.Item>\r\n                            <Dropdown.Item value=\"gerente2\">Gerente2</Dropdown.Item>\r\n                            <Dropdown.Item value=\"gerente3\">Gerente3</Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n\r\n                    <Button id=\"add-manager_MyParcels\" variant=\"success\" size=\"sm\">Adicionar gerente</Button>\r\n\r\n                </label>\r\n            )\r\n        }\r\n    }\r\n\r\n    function loadModalValues() {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState == 4) {\r\n                if (xmlhttp.status == 200) {\r\n                    const obj = JSON.parse(xmlhttp.responseText);\r\n                    setObj(obj);\r\n                }\r\n            }\r\n        }\r\n        var myObj = {token:localStorage.getItem('token')};\r\n        var myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.oa.r.appspot.com/rest/parcel/parcelInfo\");\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n    useEffect(() => {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState == 4) {\r\n                if (xmlhttp.status == 200) {\r\n                    const obj = JSON.parse(xmlhttp.responseText);\r\n                    for(let i = 0; i<obj.length; i++){\r\n                        arr.push(<Card className=\"parcel-card_MyParcels\" style={{ width: '15rem',cursor: \"pointer\"}}>\r\n                            <Card.Img className=\"parcel_picture\" variant=\"top\" src={obj[i].photoURL} />\r\n                            <Card.Body>\r\n                                <Card.Title>{obj[i].name} {isParcelVerified(obj[i].isApproved)} </Card.Title>\r\n                                <Card.Text>\r\n                                    <label className={\"w-100 text-truncate\"}>Área: {obj[i].area}m²</label><br/>\r\n                                    <label className={\"w-100 text-truncate\"}>Perímetro: {obj[i].perimeter}m</label><br/>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].freguesia}>Freguesia: {obj[i].freguesia}</label><br/>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].concelho}>Concelho: {obj[i].concelho}</label><br/>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].distrito}>Distrito: {obj[i].distrito}</label><br/>\r\n                                </Card.Text>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Button id=\"show-parcel-details_MyParcels\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => handleShow(obj[i])}>Detalhes</Button>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Button id=\"edit-parcel_MyParcels\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => handleEditShow(obj[i])}>Editar</Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card.Body>\r\n                        </Card>);\r\n\r\n                        pathsArr.push(\r\n                            <Polygon\r\n                                paths={JSON.parse(obj[i].coordinates)}\r\n                                options={options}\r\n                            />\r\n                        );\r\n                    }\r\n                    setPList(arr);\r\n                    setPaths(pathsArr);\r\n                }\r\n            }\r\n        }\r\n\r\n        var myObj = {token:localStorage.getItem('token')};\r\n        var myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.oa.r.appspot.com/rest/parcel/owned\");\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }, [])\r\n\r\n\r\n    return(\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <TopBar />\r\n\r\n            <LoadScript googleMapsApiKey=\"AIzaSyAzmUVpLtuvY1vhrHL_-rcDyk_krHMdSjQ\">\r\n\r\n                <ParcelDetailsModal obj={obj} show={show} setShow={setShow}/>\r\n\r\n                <ParcelEditModal obj={obj} show={editShow} setShow={setEditShow}/>\r\n\r\n                <div id=\"myParcelsBody\">\r\n\r\n                    <GoogleMap\r\n                        mapContainerStyle={containerStyle}\r\n                        center={center}\r\n                        zoom={10}\r\n                        tilt={0}\r\n                    >\r\n                        {paths}\r\n                    </GoogleMap>\r\n\r\n                    <div className=\"body_MyParcels\">\r\n                        <div className=\"container_MyParcels\">\r\n                            {parcelList}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </LoadScript>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyParcels","import \"./ProposedParcelsEntity.css\"\r\n\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport {useEffect, useState} from 'react'\r\nimport React, { Component }  from 'react';\r\nimport {Button, ButtonGroup, Card, Col, Modal, Row} from \"react-bootstrap\";\r\nimport {GoogleMap, LoadScript} from \"@react-google-maps/api\";\r\n\r\nconst center = {\r\n    lat: 38.660677,\r\n    lng: -9.205971\r\n};\r\n\r\nconst modalContainerStyle = {\r\n    width: '72vw',\r\n    height: '45vh'\r\n};\r\n\r\nconst ProposedParcelsEntity = () => {\r\n    const [obj, setObj] = useState({});\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleShow = () => {\r\n        console.log(\"show\")\r\n        setShow(true);\r\n    }\r\n    const handleClose = () => setShow(false);\r\n\r\n    const [parcelList, setPList] = useState([]);\r\n\r\n    let xmlhttp = new XMLHttpRequest();\r\n    let arr = [];\r\n\r\n    function loadModalValues() {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState == 4) {\r\n                if (xmlhttp.status == 200) {\r\n                    const obj = JSON.parse(xmlhttp.responseText);\r\n                    setObj(obj);\r\n                }\r\n            }\r\n        }\r\n        var myObj = {token:localStorage.getItem('token')};\r\n        var myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.oa.r.appspot.com/rest/parcel/parcelInfo\"); //TODO:alterar link\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n    function addManager(parcel) {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState == 4) {\r\n                if (xmlhttp.status == 200) {\r\n                    alert(\"Parcel accepted successfully\");\r\n                }\r\n            }\r\n        }\r\n        let myObj = {\r\n            token: localStorage.getItem('token'),\r\n        };\r\n        let myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.oa.r.appspot.com/rest/parcel/addmanager/\"+parcel.owner+\"_\"+parcel.name); //TODO:alterar link\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n    function removeManager(parcel) {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState == 4) {\r\n                if (xmlhttp.status == 200) {\r\n                    alert(\"Parcel rejected successfully\");\r\n                }\r\n                console.log(parcel.owner+\"_\"+parcel.name)\r\n            }\r\n        }\r\n        let myObj = {\r\n            token: localStorage.getItem('token'),\r\n        };\r\n        let myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.oa.r.appspot.com/rest/parcel/rejectparcel/\"+parcel.owner+\"_\"+parcel.name); //TODO:alterar link\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n    useEffect(() => {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState == 4) {\r\n                if (xmlhttp.status == 200) {\r\n                    const obj = JSON.parse(xmlhttp.responseText);\r\n                    for(let i = 0; i<obj.length; i++){\r\n                        arr.push(<Card className=\"parcel-card_ProposedParcelsEntity\" style={{ width: '15rem',cursor: \"pointer\"}}>\r\n                            <Card.Img className=\"parcel_picture\" variant=\"top\" src={obj[i].photoURL} />\r\n                            <Card.Body>\r\n                                <Card.Title>{obj[i].name} </Card.Title>\r\n                                <Card.Text>\r\n                                    <label className={\"w-100 text-truncate\"}>Área: {obj[i].area}m²</label><br/>\r\n                                    <label className={\"w-100 text-truncate\"}>Perímetro: {obj[i].perimeter}m</label><br/>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].freguesia}>Freguesia: {obj[i].freguesia}</label><br/>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].concelho}>Concelho: {obj[i].concelho}</label><br/>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].distrito}>Distrito: {obj[i].distrito}</label><br/>\r\n                                </Card.Text>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Button id=\"show-parcel-details_ProposedParcelsEntity\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => handleShow()}>Detalhes</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Button id=\"confirm-parcel_ProposedParcelsEntity\" onClick={() => addManager(obj[i])} className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\">Aceitar</Button>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Button id=\"reject-parcel_ProposedParcelsEntity\" onClick={() => removeManager(obj[i])} className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\">Rejeitar</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>);\r\n                    }\r\n                    setPList(arr);\r\n                }\r\n            }\r\n        }\r\n\r\n        var myObj = {token:localStorage.getItem('token')};\r\n        var myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.oa.r.appspot.com/rest/parcel/requested\");\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    })\r\n\r\n    return(\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <TopBar />\r\n\r\n            <Modal\r\n                onShow={loadModalValues}\r\n                show={show}\r\n                onHide={handleClose}\r\n                backdrop=\"static\"\r\n                dialogClassName=\"modal-xl\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title> Parcela: {obj.name} </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n\r\n                    <LoadScript googleMapsApiKey=\"AIzaSyAzmUVpLtuvY1vhrHL_-rcDyk_krHMdSjQ\">\r\n                        <GoogleMap\r\n                            mapContainerStyle={modalContainerStyle}\r\n                            center={center}\r\n                            zoom={10}\r\n                            tilt={0}\r\n                        >\r\n                        </GoogleMap>\r\n                    </LoadScript>\r\n\r\n                </Modal.Body>\r\n\r\n                <Modal.Body>\r\n                    <label> <b>Proprietário:</b> {obj.owner} </label> <br/>\r\n                    <label> <b>Gerente:</b> {obj.manager} </label> <br/>\r\n                    <label> <b>Freguesia:</b> {obj.freguesia} </label> <br/>\r\n                    <label> <b>Concelho:</b> {obj.concelho} </label> <br/>\r\n                    <label> <b>Distrito:</b> {obj.distrito} </label> <br/>\r\n                    <label> <b>Área da parcela:</b> {obj.area}m² </label> <br/>\r\n                    <label> <b>Perímetro da parcela:</b> {obj.perimeter}m </label> <br/>\r\n                    <label> <b>Descrição:</b> {obj.description} </label> <br/>\r\n                    <label> <b>Tipo de cobertura do solo:</b> {obj.tipoSolo} </label> <br/>\r\n                    <label> <b>Utilização atual do solo:</b> {obj.soloUtil} </label> <br/>\r\n                    <label> <b>Utilização prévia do solo:</b> {obj.oldSoloUtil} </label> <br/>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            <div className=\"proposedParcelsEntityBody\">\r\n                <div className=\"container_ProposedParcelsEntity\">\r\n                    {parcelList}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProposedParcelsEntity","import \"./ParcelsEntity.css\"\r\n\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport {Badge, Button, ButtonGroup, Card, Col, Dropdown, Modal, Row} from \"react-bootstrap\";\r\nimport {useEffect, useState} from 'react'\r\nimport React from 'react';\r\nimport {GoogleMap, LoadScript, Polygon} from \"@react-google-maps/api\";\r\nimport ParcelDetailsModal from \"../util/ParcelDetailsModal/ParcelDetailsModal\";\r\nimport ParcelEditModal from \"../util/ParcelEditModal/ParcelEditModal\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\n\r\nconst containerStyle = {\r\n    width: '75vw',\r\n    height: '93.5vh'\r\n};\r\n\r\nconst center = {\r\n    lat: 38.660677,\r\n    lng: -9.205971\r\n};\r\n\r\nconst options = {\r\n    fillColor: \"Khaki\",\r\n    fillOpacity: 0.3,\r\n    strokeColor: \"DarkOrange\",\r\n    strokeOpacity: 1,\r\n    strokeWeight: 2,\r\n    clickable: false,\r\n    draggable: false,\r\n    editable: false,\r\n    geodesic: false,\r\n    zIndex: 1\r\n}\r\n\r\n\r\nconst ParcelsEntity = () => {\r\n    const navigate = useNavigate();\r\n    const [obj, setObj] = useState({});\r\n\r\n    const [paths, setPaths] = useState([]);\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleShow = (obj) => {\r\n        console.log(\"show\")\r\n        setObj(obj);\r\n        setShow(true);\r\n    }\r\n\r\n    const handleClose = () => setShow(false);\r\n\r\n    const [parcelList, setPList] = useState([]);\r\n\r\n    let xmlhttp = new XMLHttpRequest();\r\n\r\n    let arr = [];\r\n    let pathsArr = [];\r\n\r\n    function removeManager(parcelName, owner){\r\n        let xmlhttp = new XMLHttpRequest();\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState == 4) {\r\n                if (xmlhttp.status == 200) {\r\n                    navigate(\"/parcels-entity\");\r\n                }\r\n            }\r\n        }\r\n        let myObj = {token:localStorage.getItem('token')};\r\n        let myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.oa.r.appspot.com/rest/removemanager/\" + owner + \"_\" + parcelName);\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n\r\n    function loadModalValues() {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState == 4) {\r\n                if (xmlhttp.status == 200) {\r\n                    const obj = JSON.parse(xmlhttp.responseText);\r\n                    setObj(obj);\r\n                }\r\n            }\r\n        }\r\n        var myObj = {token:localStorage.getItem('token')};\r\n        var myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.oa.r.appspot.com/rest/parcel/parcelInfo\");\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n    useEffect(() => {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState == 4) {\r\n                if (xmlhttp.status == 200) {\r\n                    const obj = JSON.parse(xmlhttp.responseText);\r\n                    for(let i = 0; i<obj.length; i++){\r\n                        arr.push(<Card className=\"parcel-card_ParcelsEntity\" style={{ width: '15rem',cursor: \"pointer\"}}>\r\n                            <Card.Img className=\"parcel_picture\" variant=\"top\" src={obj[i].photoURL} />\r\n                            <Card.Body>\r\n                                <Card.Title>{obj[i].name} </Card.Title>\r\n                                <Card.Text>\r\n                                    <label className={\"w-100 text-truncate\"}>Área: {obj[i].area}m²</label><br/>\r\n                                    <label className={\"w-100 text-truncate\"}>Perímetro: {obj[i].perimeter}m</label><br/>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].freguesia}>Freguesia: {obj[i].freguesia}</label><br/>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].concelho}>Concelho: {obj[i].concelho}</label><br/>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].distrito}>Distrito: {obj[i].distrito}</label><br/>\r\n                                </Card.Text>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Button id=\"show-parcel-details_ParcelsEntity\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => handleShow(obj[i])}>Detalhes</Button>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Button id=\"remove-parcel_ParcelsEntity\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => removeManager(obj[i].name, obj[i].owner)}>Remover</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>);\r\n\r\n                        pathsArr.push(\r\n                            <Polygon\r\n                                paths={JSON.parse(obj[i].coordinates)}\r\n                                options={options}\r\n                            />\r\n                        );\r\n                    }\r\n                    setPList(arr);\r\n                    setPaths(pathsArr);\r\n                }\r\n            }\r\n        }\r\n\r\n        let myObj = {token:localStorage.getItem('token')};\r\n        let myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.oa.r.appspot.com/rest/parcel/managed\");\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    })\r\n\r\n\r\n    return(\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <TopBar />\r\n\r\n            <LoadScript googleMapsApiKey=\"AIzaSyAzmUVpLtuvY1vhrHL_-rcDyk_krHMdSjQ\">\r\n\r\n                <ParcelDetailsModal obj={obj} show={show} setShow={setShow}/>\r\n\r\n                <div id=\"ParcelsEntityBody\">\r\n\r\n                    <GoogleMap\r\n                        mapContainerStyle={containerStyle}\r\n                        center={center}\r\n                        zoom={10}\r\n                        tilt={0}\r\n                    >\r\n                        {paths}\r\n                    </GoogleMap>\r\n\r\n                    <div className=\"body_ParcelsEntity\">\r\n                        <div className=\"container_ParcelsEntity\">\r\n                            {parcelList}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </LoadScript>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ParcelsEntity","import \"./ApproveParcels.css\"\r\n\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport {useEffect, useState} from 'react'\r\nimport React, { Component }  from 'react';\r\nimport {Button, ButtonGroup, Card, Col, Container, Dropdown, Modal, Row} from \"react-bootstrap\";\r\nimport {GoogleMap, LoadScript} from \"@react-google-maps/api\";\r\nimport ParcelDetailsModal from \"../util/ParcelDetailsModal/ParcelDetailsModal\";\r\nimport ParcelEditModal from \"../util/ParcelEditModal/ParcelEditModal\";\r\n\r\nconst center = {\r\n    lat: 38.660677,\r\n    lng: -9.205971\r\n};\r\n\r\nconst ApproveParcels = () => {\r\n    const [obj, setObj] = useState({});\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [editShow, setEditShow] = useState(false);\r\n\r\n    const handleShow = (obj) => {\r\n        console.log(\"show\")\r\n        setObj(obj)\r\n        setShow(true);\r\n        setEditShow(false);\r\n    }\r\n\r\n    const handleEditShow = (obj) => {\r\n        console.log(\"showedit\")\r\n        setObj(obj)\r\n        setShow(false);\r\n        setEditShow(true);\r\n    }\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleEditClose = () => setEditShow(false);\r\n\r\n    const [parcelList, setPList] = useState([]);\r\n\r\n    let xmlhttp = new XMLHttpRequest();\r\n    let arr = [];\r\n\r\n    useEffect(() => {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState == 4) {\r\n                if (xmlhttp.status == 200) {\r\n                    const obj = JSON.parse(xmlhttp.responseText);\r\n                    for(let i = 0; i<obj.length; i++){\r\n                        arr.push(<Card className=\"parcel-card_ApproveParcels\" style={{ width: '15rem',cursor: \"pointer\"}}>\r\n                            <Card.Img className=\"parcel_picture\" variant=\"top\" src={obj[i].photoURL} />\r\n                            <Card.Body>\r\n                                <Card.Title>{obj[i].name} </Card.Title>\r\n                                <Card.Text>\r\n                                    <label className={\"w-100 text-truncate\"}>Área: {obj[i].area}m²</label>\r\n                                    <label className={\"w-100 text-truncate\"}>Perímetro: {obj[i].perimeter}m</label>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].freguesia}>Freguesia: {obj[i].freguesia}</label>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].concelho}>Concelho: {obj[i].concelho}</label>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].distrito}>Distrito: {obj[i].distrito}</label>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Button id=\"show-parcel-details_ApproveParcels\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => handleShow(obj[i])}>Detalhes</Button>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Button id=\"edit-parcel_ApproveParcels\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => handleEditShow(obj[i])}>Editar</Button>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Button id=\"confirm-parcel_ApproveParcels\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\">Aprovar</Button>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Button id=\"reject-parcel_ApproveParcels\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\">Rejeitar</Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card.Text>\r\n\r\n                            </Card.Body>\r\n                        </Card>);\r\n                    }\r\n                    setPList(arr);\r\n                }\r\n            }\r\n        }\r\n\r\n        var myObj = {token:localStorage.getItem('token')};\r\n        var myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.oa.r.appspot.com/rest/parcel/owned\");\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }, [])\r\n\r\n    return(\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <TopBar />\r\n\r\n            <LoadScript googleMapsApiKey=\"AIzaSyAzmUVpLtuvY1vhrHL_-rcDyk_krHMdSjQ\">\r\n\r\n                <ParcelDetailsModal obj={obj} show={show} setShow={setShow}/>\r\n\r\n                <ParcelEditModal obj={obj} show={editShow} setShow={setEditShow}/>\r\n\r\n            </LoadScript>\r\n\r\n            <div className=\"approveParcelsBody\">\r\n                <div className=\"container_ApproveParcels\">\r\n                    {parcelList}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ApproveParcels","import \"./AllParcels.css\"\r\n\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport {useEffect, useState} from 'react'\r\nimport React, { Component }  from 'react';\r\nimport {Button, ButtonGroup, Card, Col, Container, Dropdown, Modal, Row} from \"react-bootstrap\";\r\nimport {GoogleMap, LoadScript} from \"@react-google-maps/api\";\r\nimport ParcelDetailsModal from \"../util/ParcelDetailsModal/ParcelDetailsModal\";\r\nimport ParcelEditModal from \"../util/ParcelEditModal/ParcelEditModal\";\r\n\r\n\r\nconst AllParcels = () => {\r\n\r\n    const [obj, setObj] = useState({});\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [editShow, setEditShow] = useState(false);\r\n\r\n    const handleShow = (obj) => {\r\n        console.log(\"show\")\r\n        setObj(obj)\r\n        setShow(true);\r\n        setEditShow(false);\r\n    }\r\n\r\n    const handleEditShow = (obj) => {\r\n        console.log(\"showedit\")\r\n        setObj(obj)\r\n        setShow(false);\r\n        setEditShow(true);\r\n    }\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleEditClose = () => setEditShow(false);\r\n\r\n    const [parcelList, setPList] = useState([]);\r\n\r\n    let xmlhttp = new XMLHttpRequest();\r\n    let arr = [];\r\n\r\n    useEffect(() => {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState == 4) {\r\n                if (xmlhttp.status == 200) {\r\n                    const obj = JSON.parse(xmlhttp.responseText);\r\n                    for(let i = 0; i<obj.length; i++){\r\n\r\n\r\n                        arr.push(<Card className=\"parcel-card_AllParcels\" style={{ width: '15rem',cursor: \"pointer\"}}>\r\n                            <Card.Img className=\"parcel_picture_AllParcels\" variant=\"top\" src={obj[i].photoURL} />\r\n                            <Card.Body>\r\n                                <Card.Title>{obj[i].name} </Card.Title>\r\n                                <Card.Text>\r\n                                    <label className={\"w-100 text-truncate\"}>Área: {obj[i].area}m²</label>\r\n                                    <label className={\"w-100 text-truncate\"}>Perímetro: {obj[i].perimeter}m</label>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].freguesia}>Freguesia: {obj[i].freguesia}</label>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].concelho}>Concelho: {obj[i].concelho}</label>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].distrito}>Distrito: {obj[i].distrito}</label>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Button id=\"show-parcel-details_AllParcels\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => handleShow(obj[i])}>Detalhes</Button>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Button id=\"edit-parcel_AllParcels\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => handleEditShow(obj[i])}>Editar</Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card.Text>\r\n\r\n                            </Card.Body>\r\n                        </Card>);\r\n                    }\r\n                    setPList(arr);\r\n                }\r\n            }\r\n        }\r\n\r\n        var myObj = {token:localStorage.getItem('token')};\r\n        var myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.oa.r.appspot.com/rest/parcel/owned\");\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }, [])\r\n\r\n    return(<>\r\n        <CheckIfLoggedOut />\r\n        <TopBar />\r\n\r\n            <LoadScript googleMapsApiKey=\"AIzaSyAzmUVpLtuvY1vhrHL_-rcDyk_krHMdSjQ\">\r\n\r\n                <ParcelDetailsModal obj={obj} show={show} setShow={setShow}/>\r\n\r\n                <ParcelEditModal obj={obj} show={editShow} setShow={setEditShow}/>\r\n\r\n            </LoadScript>\r\n\r\n            <div className=\"allParcelsBody\">\r\n                <div className=\"chooseFreguesia_AllParcels\">\r\n\r\n                    <Dropdown>\r\n                        <Dropdown.Toggle variant=\"light\" id=\"dropdown-basic\">\r\n                            Freguesia\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu> //TODO:alterarDropdown\r\n                            <Dropdown.Item value=\"freguesia1\">Freguesia1</Dropdown.Item>\r\n                            <Dropdown.Item value=\"freguesia2\">Freguesia2</Dropdown.Item>\r\n                            <Dropdown.Item value=\"freguesia3\">Freguesia3</Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n\r\n                </div>\r\n\r\n                <div className=\"container_AllParcels\">\r\n                    {parcelList}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AllParcels","import Image from './logo.png'\r\n\r\nimport './App.css'\r\nimport CreateAndLogin from './CreateAndLogin/CreateAndLogin'\r\nimport Profile from './Profile/Profile'\r\nimport LoggedHomepage from \"./LoggedHomepage/LoggedHomepage\"\r\nimport ChangeProfile from \"./ChangeProfile/ChangeProfile\"\r\nimport AboutUs from \"./AboutUs/AboutUs\"\r\nimport RegisterParcel from './RegisterParcel/RegisterParcel'\r\nimport CheckIfLoggedIn from './util/CheckIfLoggedIn'\r\nimport ChangePassword from \"./ChangePassword/ChangePassword\";\r\nimport MyParcels from \"./MyParcels/MyParcels\";\r\nimport ProposedParcelsEntity from \"./ProposedParcelsEntity/ProposedParcelsEntity\";\r\nimport ParcelsEntity from \"./ParcelsEntity/ParcelsEntity\";\r\nimport ApproveParcels from \"./ApproveParcels/ApproveParcels\";\r\nimport AllParcels from \"./AllParcels/AllParcels\";\r\n\r\nimport Front_img from \"./front_img.jpg\";\r\nimport React, { Component }  from 'react';\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes, Route, Link\r\n} from \"react-router-dom\"\r\n\r\n\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n      <Router>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home />} />\r\n          <Route path=\"/create-and-login\" element={<CreateAndLogin />} />\r\n          <Route path=\"/map\" element={<RegisterParcel />} />\r\n          <Route path=\"/profile\" element={<Profile />} />\r\n          <Route path=\"/homepage\" element={<LoggedHomepage />} />\r\n          <Route path=\"/change-profile\" element={<ChangeProfile />} />\r\n          <Route path=\"/change-password\" element={<ChangePassword />} />\r\n          <Route path=\"/about-us\" element={<AboutUs />} />\r\n          <Route path=\"/my-parcels\" element={<MyParcels />} />\r\n          <Route path=\"/proposed-parcels-entity\" element={<ProposedParcelsEntity />} />\r\n          <Route path=\"/parcels-entity\" element={<ParcelsEntity />} />\r\n          <Route path=\"/approve-parcels\" element={<ApproveParcels />} />\r\n          <Route path=\"/all-parcels\" element={<AllParcels />} />\r\n        </Routes>\r\n      </Router>\r\n  )\r\n}\r\n\r\nconst Home = () => {\r\n  return (\r\n      <>\r\n        <CheckIfLoggedIn />\r\n\r\n        <div className=\"home_top\">\r\n\r\n          <div>\r\n            <Link to=\"/\"><img src={Image} alt=\"E-Floresta Logo\" className=\"home_logo\" /></Link>\r\n          </div>\r\n\r\n          <div className=\"home_button\">\r\n            <Link to=\"/create-and-login\">\r\n              <Button id=\"topButton_Home\" type=\"button\">Login | Criar Conta</Button>\r\n            </Link>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"home_body\">\r\n\r\n            <div className=\"hero-image_Home\">\r\n                <div className=\"hero-text_Home\">\r\n                    <h1><b>E-Floresta</b></h1>\r\n                    <p>Registe as suas parcelas de forma rápida e fácil</p>\r\n                    <Link to=\"/create-and-login\">\r\n                        <Button id=\"button-hero_Home\" variant=\"dark\">Comece já</Button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"text_Home\">\r\n                <div>\r\n                    <h1>\r\n                        O que é o projeto E-Floresta?\r\n                    </h1>\r\n\r\n                    O interior de Portugal está a viver um processo de desertificação populacional provocado pelo movimento\r\n                    dos mais jovens para o litoral e pelo envelhecimento da população com graves consequências económicas,\r\n                    sociais e ambientais. Em particular, a gestão da floresta torna-se incomportável, dando origem a perdas\r\n                    económicas e ambientais resultantes dos incêndios florestais. Assim, a autarquia de Mação pretende\r\n                    reordenar o seu território liderando uma iniciativa que promove a gestão integrada dos terrenos florestais\r\n                    para ganhar escala e reduzir custos. <p> Esta plataforma web permite registar a adesão voluntária dos proprietários\r\n                    a esta iniciativa comunitária e, posteriormente, seguir a sua gestão em termos de custos e proveitos. </p>\r\n                </div>\r\n                <div>\r\n                    <img src={Front_img}/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n      </>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\n\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom/client'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.createRoot(document.getElementById('root')).render(<App />)","module.exports = __webpack_public_path__ + \"static/media/logo.e6484752.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.e6484752.png\";","module.exports = __webpack_public_path__ + \"static/media/profile_picture.9acfe78b.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.e6484752.png\";","module.exports = __webpack_public_path__ + \"static/media/profile_picture.9acfe78b.png\";","module.exports = __webpack_public_path__ + \"static/media/front_img.b7ac53e9.jpg\";"],"sourceRoot":""}