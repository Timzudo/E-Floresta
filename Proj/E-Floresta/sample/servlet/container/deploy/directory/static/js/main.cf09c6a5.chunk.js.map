{"version":3,"sources":["Profile/profile_picture.png","TopBar/logo.png","util/CheckIfLoggedOut.js","CreateAndLogin/CreateAndLogin.js","TopBar/TopBar.js","Profile/Profile.js","util/CSVConverter.js","LoggedHomepage/LoggedHomepage.js","ChangeProfile/ChangeProfile.js","AboutUs/AboutUs.js","Map/Map.js","RegisterParcel/RegisterParcel.js","util/CheckIfLoggedIn.js","ChangePassword/ChangePassword.js","util/ParcelDetailsModal/ParcelDetailsModal.js","util/ParcelEditModal/ParcelEditModal.js","util/ParcelNearbyModal/ParcelNearbyModal.js","MyParcels/MyParcels.js","MapAdmin/MapAdmin.js","ProposedParcelsEntity/ProposedParcelsEntity.js","ParcelsEntity/ParcelsEntity.js","ApproveParcels/ApproveParcels.js","ApproveParcelsAdmin/ApproveParcelsAdmin.js","AllParcels/AllParcels.js","AllParcelsAdmin/AllParcelsAdmin.js","util/Statistics/PieChartStatistics.js","util/Statistics/NumberStatistics.js","Statistics/Statistics.js","StatisticsEntity/StatisticsEntity.js","StatisticsAdmin/StatisticsAdmin.js","ConfirmationPage/ConfirmationPage.js","Rankings/Rankings.js","RecoverPassword/RecoverPassword.js","RecoverPassword/RecoverRequest.js","FindUser/FindUser.js","ReportsTechnician/ReportsTechnician.js","MakeReport/MakeReport.js","UploadCSV/UploadCSV.js","ErrorsPages/Error404.js","App.js","index.js","logo.png","ChangeProfile/profile_picture.png","CreateAndLogin/logo.png","ErrorsPages/icon.png","front_img.jpg"],"names":["module","exports","__webpack_require__","p","CheckIfLoggedOut","navigate","useNavigate","localStorage","getItem","react_default","a","createElement","Fragment","CreateAndLogin","token","xmlhttp","XMLHttpRequest","submitHandler","e","preventDefault","className","react_router_dom","to","src","Image","alt","Form","onSubmit","Group","Control","type","placeholder","id","maxLength","controlId","Check","label","onClick","x","document","getElementById","Button","onreadystatechange","readyState","status","responseText","obj","JSON","parse","atob","split","console","log","alert","setItem","myObj","password","value","myJson","stringify","open","setRequestHeader","send","href","required","confirmation","email","name","phone","nif","TopBar","LogoImage","ButtonGroup","size","includes","Dropdown","Toggle","Menu","Item","removeItem","Profile","_useState","useState","_useState2","Object","slicedToArray","username","setUsername","_useState3","_useState4","setEmail","_useState5","_useState6","setName","_useState7","_useState8","setPhone","_useState9","_useState10","setNif","_useState11","_useState12","setType","_useState13","_useState14","state","setState","_useState15","_useState16","grade","setGrade","useEffect","util_CheckIfLoggedOut","src_TopBar_TopBar","ProfileImage","Badge","bg","userGrade","expirationTime","CSVConverter","checkCSV","Date","now","parseInt","json","csv","lines","i","length","currentline","distrito","hasOwnProperty","concelho","freguesia","dicofre","csvJSON","toString","LoggedHomepage","util_CSVConverter","variant","ChangeProfile","defaultValue","htmlFor","AboutUs","window","google","containerStyle","width","height","center","lat","lng","options","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeWeight","clickable","draggable","editable","geodesic","zIndex","React","memo","distritos","keys","distritoList","push","useGeoFile","setUseGeoFile","file","setFile","documentState","setDocument","markerList","setMarker","paths","setPaths","area","setArea","perimeter","setPerimeter","setDistrito","_useState17","_useState18","concelhoOptions","setConcelhoOptions","_useState19","_useState20","freguesiaOptions","setFreguesiaOptions","addMarker","concat","esm","key","position","icon","path","maps","SymbolPath","CIRCLE","scale","getPathLength","getDistance","Math","round","getAreaOfPolygon","googleMapsApiKey","mapContainerStyle","zoom","tilt","ev","latLng","Number","filter","element","index","f","append","_step","_iterator","_createForOfIteratorHelper","entries","s","n","done","pair","err","submitParcel","FormData","target","Label","Select","onChange","listC","list","handleSetDistrito","disabled","listF","handleSetConcelho","accept","files","reader","FileReader","readAsText","onload","evt","result","coordinates","coordinateList","arr1","arr2","loadGeojson","RegisterParcel","src_Map_Map","CheckIfLoggedIn","ChangePassword","oldPassword","newPassword","modalContainerStyle","ParcelDetailsModal","props","setObj","centerLoc","setCenterLoc","setZoom","Modal","onShow","owner","show","onHide","setShow","backdrop","dialogClassName","keyboard","Header","closeButton","Title","Body","latitude","longitude","onLoad","centerPoint","getCenterOfBounds","arr","orderByDistance","mostDistant","dist","pow","undefined","manager","cover","usage","oldUsage","description","documentURL","photoURL","auxArr","geometry","mapCoordinates","filename","text","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","download","optionsSecondary","ParcelEditModal","managerValue","setmanagerValue","setmanagerRequestValue","changedInfo","setChangedInfo","info","setInfo","_useState21","_useState22","showSelects","setShowSelects","_useState23","_useState24","managerList","setManager","didMount","useRef","current","_sendNewInfo","asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","sendInfo","sendDocument","sendPhoto","sendCoordinates","Promise","all","then","location","reload","catch","stop","apply","this","arguments","_sendInfo","_callee2","_context2","method","headers","Content-Type","abrupt","fetch","_x","_sendDocument","_callee3","formData","_context3","_x2","_sendPhoto","_callee4","photo","_context4","_x3","_sendCoordinates","_callee5","_context5","myObjManager","r","ok","managersObj","managerRequest","removeManager","isApproved","managerName","sendManagerRequest","for","Spinner","animation","role","as","rows","deleteParcel","nearbyOptions","nearbyHoverOptions","ParcelNearbyModal","mapRef","setMapRef","nearbyParcels","setNearbyParcels","infoWindow","setInfoWindow","parcelName","t","_loop","ref","polygon","onMouseOver","setOptions","onMouseOut","onCloseClick","addInfoWindow","m","onCenterChanged","getCenter","MyParcels","requested","setRequested","editShow","setEditShow","nearbyShow","setNearbyShow","parcelList","setPList","pathsArr","verified","Card","cursor","Img","pill","Text","title","Row","Col","handleShow","handleEditShow","handleNearbyShow","util_ParcelDetailsModal_ParcelDetailsModal","util_ParcelEditModal_ParcelEditModal","util_ParcelNearbyModal_ParcelNearbyModal","MapAdmin_createForOfIteratorHelper","ProposedParcelsEntity","parcel","addManager","ParcelsEntity","ApproveParcels","approveParcel","rejectParcel","ApproveParcelsAdmin","objCSV","distritoValue","concelhoValue","freguesiaValue","AllParcels","optionsPoly","AllParcelsAdmin","PieChartStatistics","labelList","setLabelList","dataList","setDataList","request","setRequest","dataOptions","labels","datasets","backgroundColor","borderColor","borderWidth","data","url","array","Array","from","_ref","_ref2","auxLabelList","auxDataList","react_chartjs_2_dist","responsive","NumberStatistics","setResult","Statistics","utilSoloByNumber","utilSoloByArea","Statistics_PieChartStatistics","Statistics_NumberStatistics","StatisticsEntity","StatisticsAdmin","Table","striped","bordered","hover","ConfirmationPage","confirmed","setConfirmed","search","useLocation","URLSearchParams","get","Rankings","RecoverPassword","y","sent","setSent","FindUserModal","handleClose","setChangeState","setChangeRole","changeInfo","setNewRole","setDistritoOptions","changeRole","changeState","newRole","distritoOptions","setDistritoValue","setConcelhoValue","setFreguesiaValue","FindUser_regeneratorRuntime","_sendState","newState","_sendRole","csvObj","ce","String","sendState","sendRole","reason","FindUser","FindUser_FindUserModal","ReportsTechnician","reportList","setReportList","reviewReport","reportID","opinion","border","sender","priority","topic","message","Footer","MakeReport","UploadCSV","Error404","Image1","Home","util_CheckIfLoggedIn","Front_img","App","react_router","App_Home","src_CreateAndLogin_CreateAndLogin","src_RegisterParcel_RegisterParcel","src_MapAdmin_MapAdmin","src_Profile_Profile","src_LoggedHomepage_LoggedHomepage","src_ChangeProfile_ChangeProfile","src_ChangePassword_ChangePassword","src_AboutUs_AboutUs","src_MyParcels_MyParcels","src_ProposedParcelsEntity_ProposedParcelsEntity","src_ParcelsEntity_ParcelsEntity","src_ApproveParcels_ApproveParcels","src_ApproveParcelsAdmin_ApproveParcelsAdmin","src_AllParcels_AllParcels","src_AllParcelsAdmin_AllParcelsAdmin","src_Statistics_Statistics","src_StatisticsEntity_StatisticsEntity","src_StatisticsAdmin_StatisticsAdmin","src_ConfirmationPage_ConfirmationPage","src_RecoverPassword_RecoverPassword","RecoverPassword_RecoverRequest","src_Rankings_Rankings","src_FindUser_FindUser","src_ReportsTechnician_ReportsTechnician","src_MakeReport_MakeReport","src_UploadCSV_UploadCSV","src_ErrorsPages_Error404","ReactDOM","createRoot","render","src_App_0"],"mappings":"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","file":"static/js/main.cf09c6a5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile_picture.9acfe78b.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.e6484752.png\";","import React, { Component }  from 'react';\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst CheckIfLoggedOut = () => {\r\n    const navigate = useNavigate();\r\n    let token = localStorage.getItem('token');\r\n    if(token == null) {\r\n        //O utilizador nao tem um token valido, logo nao tem acesso as pags que precisam de login para lhes aceder\r\n        navigate('/');\r\n    }\r\n\r\n    return(\r\n        <></>\r\n    )\r\n}\r\n\r\nexport default CheckIfLoggedOut","import Image from './logo.png'\r\nimport './CreateAndLogin.css'\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport CheckIfLoggedIn from \"../util/CheckIfLoggedOut\";\r\nimport {Button, Form, InputGroup} from \"react-bootstrap\";\r\nimport React, { Component }  from 'react';\r\n\r\n\r\nconst CreateAndLogin = () => {\r\n  const navigate = useNavigate()\r\n  let xmlhttp = new XMLHttpRequest();\r\n  let token;\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n  }\r\n\r\n\r\n  function login() {\r\n\r\n    xmlhttp.onreadystatechange = function () {\r\n      if (xmlhttp.readyState === 4) {\r\n        if (xmlhttp.status === 200) {\r\n          token = xmlhttp.responseText;\r\n          let obj = JSON.parse(atob(token.split(\".\")[1]));\r\n          console.log(obj);\r\n          alert(\"Login efetuado com sucesso.\");\r\n\r\n          localStorage.setItem('token', token);\r\n          localStorage.setItem('role', obj[\"role\"]);\r\n          navigate('/homepage');\r\n        } else if(xmlhttp.status === 403) {\r\n          alert(\"O username ou a password introduzidas estão erradas.\");\r\n        }\r\n        else if(xmlhttp.status === 404) {\r\n          alert(\"O username introduzido não existe.\");\r\n        }\r\n        else if(xmlhttp.status === 500) {\r\n          alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n        }\r\n        else {\r\n          alert(\"Não foi possível efetuar o login.\");\r\n        }\r\n        console.log(xmlhttp.status);\r\n      }\r\n    }\r\n\r\n    let myObj = { password: document.getElementById(\"session-password\").value };\r\n    let myJson = JSON.stringify(myObj);\r\n\r\n    xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/login/\" + document.getElementById(\"session-username\").value, true);\r\n    xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n    xmlhttp.send(myJson);\r\n  }\r\n\r\n  function showPassword() {\r\n    var x = document.getElementById(\"session-password\");\r\n    if (x.type === \"password\") {\r\n      x.type = \"text\";\r\n    } else {\r\n      x.type = \"password\";\r\n    }\r\n  }\r\n\r\n  function register() {\r\n    xmlhttp.onreadystatechange = function() {\r\n      if(xmlhttp.readyState === 4) {\r\n        if(xmlhttp.status === 200){\r\n          token = xmlhttp.responseText;\r\n          let obj = JSON.parse(atob(token.split(\".\")[1]));\r\n          console.log(obj);\r\n          alert(\"Registo efetuado com sucesso.\");\r\n          localStorage.setItem('token', token);\r\n          localStorage.setItem('role', obj[\"role\"]);\r\n          navigate('/homepage');\r\n        } else if(xmlhttp.status === 400) {\r\n          alert(\"Todos os campos obrigatórios devem ser preenchidos corretamente.\");\r\n        } else if(xmlhttp.status === 409) {\r\n          alert(\"Utilizador ou e-mail já registado.\");\r\n        } else if(xmlhttp.status === 500) {\r\n          alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n        } else {\r\n          alert(\"Não foi possível registar o utilizador.\");\r\n        }\r\n      }\r\n    }\r\n\r\n    let myObj = {password:document.getElementById(\"create-acc-pass\").value,\r\n                  confirmation:document.getElementById(\"create-acc-conf-pass\").value,\r\n                  email:document.getElementById(\"create-acc-email\").value,\r\n                  name:document.getElementById(\"create-acc-name\").value,\r\n                  phone:document.getElementById(\"create-acc-phone\").value,\r\n                  nif:document.getElementById(\"create-acc-nif\").value};\r\n\r\n    let myJson = JSON.stringify(myObj);\r\n\r\n    xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/register/personal/\" + document.getElementById(\"create-acc-user\").value, true);\r\n    xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n    xmlhttp.send(myJson);\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      <div className=\"cl_top\">\r\n\r\n        <div>\r\n          <Link to=\"/\"><img src={Image} alt=\"E-Floresta Logo\" className=\"cl_logo\" /></Link>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div className=\"bg-img\">\r\n\r\n        <div className=\"session-body\">\r\n\r\n          <div className=\"initiate-session\">\r\n\r\n            <h2 className=\"align-content\"><b>Iniciar Sessão</b></h2>\r\n\r\n            <Form onSubmit={submitHandler}>\r\n              <Form.Group className=\"session-form\" >\r\n                <Form.Control type=\"text\" placeholder=\"Nome de utilizador\" id=\"session-username\" maxLength=\"64\"/>\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"session-form\" >\r\n                <Form.Control type=\"password\" placeholder=\"Palavra-Passe\" id=\"session-password\" maxLength=\"64\"/>\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"checkbox-container\" controlId=\"loginShowPassCheckbox\" >\r\n                <Form.Check id=\"checkmark-login\" type=\"checkbox\" label=\"Mostrar Palavra-Passe\" onClick={showPassword}/>\r\n              </Form.Group>\r\n\r\n              <Button id=\"session-button\" type=\"submit\" onClick={login}>\r\n                Entrar\r\n              </Button>\r\n            </Form>\r\n\r\n            <p></p>\r\n            <span className=\"forgot-pass_Login\">Esqueceu a sua palavra-passe? <a  href=\"/recover-request\">Clique aqui.</a></span>\r\n\r\n          </div>\r\n\r\n          <div className=\"division\"> </div>\r\n\r\n          <div className=\"create-account\">\r\n\r\n            <h2 className=\"align-content\"><b>Registe-se</b></h2>\r\n            <p className=\"align-content\">Ainda não tem conta?</p>\r\n            <p className=\"align-content\">Registe-se agora!</p>\r\n\r\n            <Form onSubmit={submitHandler}>\r\n              <Form.Group className=\"create-form\" >\r\n                <Form.Control required type=\"text\" placeholder=\"Nome de utilizador\" id=\"create-acc-user\" maxLength=\"64\"/>\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"create-form\" >\r\n                <Form.Control required type=\"email\" placeholder=\"E-mail\" id=\"create-acc-email\" maxLength=\"64\"/>\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"create-form\" >\r\n                <Form.Control required type=\"text\" placeholder=\"Nome Completo\" id=\"create-acc-name\" maxLength=\"64\"/>\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"create-form\" >\r\n                <Form.Control required type=\"password\" placeholder=\"Palavra-Passe\" id=\"create-acc-pass\" maxLength=\"64\"/>\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"create-form\" >\r\n                <Form.Control required type=\"password\" placeholder=\"Confirmar Palavra-Passe\" id=\"create-acc-conf-pass\" maxLength=\"64\"/>\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"create-form\" >\r\n                <Form.Control placeholder=\"Telemóvel/Telefone\" maxLength=\"9\" id=\"create-acc-phone\" />\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"create-form\" >\r\n                <Form.Control placeholder=\"NIF\" maxLength=\"9\" id=\"create-acc-nif\" />\r\n              </Form.Group>\r\n\r\n              <Button id=\"create-acc-button\" type=\"submit\" onClick={register}>\r\n                Registar\r\n              </Button>\r\n\r\n            </Form>\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CreateAndLogin","import LogoImage from './logo.png'\r\nimport './TopBar.css'\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport {Button, ButtonGroup, Dropdown} from \"react-bootstrap\";\r\nimport React from 'react';\r\n\r\nconst TopBar = () => {\r\n    const navigate = useNavigate();\r\n    return (\r\n        <div className=\"topBar_top\">\r\n\r\n            <div>\r\n                <Link to=\"/homepage\"><img src={LogoImage} alt=\"E-Floresta Logo\" className=\"topBar_logo\"/></Link>\r\n            </div>\r\n\r\n            <ButtonGroup className=\"buttons_TopBar\" size=\"lg\">\r\n                <Link to=\"/homepage\">\r\n                    <Button id=\"option1\">Página Inicial</Button>\r\n                </Link>\r\n\r\n                {localStorage.getItem('role') === 'D' ? <Link to=\"/map\">\r\n                    <Button id=\"option2\">Registar Parcela</Button>\r\n                </Link> : <></>}\r\n\r\n                {localStorage.getItem('role').includes(\"A\") || localStorage.getItem('role').includes(\"B\") ? <Link to=\"/map-admin\">\r\n                    <Button id=\"option17\">Registar Parcela</Button>\r\n                </Link> : <></>}\r\n\r\n                {localStorage.getItem('role') === 'D' ? <Link to=\"/my-parcels\">\r\n                    <Button id=\"option3\">Minhas Parcelas</Button>\r\n                </Link> : <></>}\r\n\r\n                {localStorage.getItem('role') === 'C' ? <Link to=\"/parcels-entity\">\r\n                    <Button id=\"option5\">Minhas Parcelas</Button>\r\n                </Link> : <></>}\r\n\r\n                {localStorage.getItem('role').includes('A')  ? <Link to=\"/approve-parcels-admin\">\r\n                    <Button id=\"option15\">Parcelas Pendentes</Button>\r\n                </Link> : <></>}\r\n\r\n                {localStorage.getItem('role').includes('A') ? <Link to=\"/all-parcels-admin\">\r\n                    <Button id=\"option16\">Visualizar Parcelas</Button>\r\n                </Link> : <></>}\r\n\r\n                {localStorage.getItem('role') === 'C' ? <Link to=\"/proposed-parcels-entity\">\r\n                    <Button id=\"option6\">Parcelas Pendentes</Button>\r\n                </Link> : <></>}\r\n\r\n                {localStorage.getItem('role').includes('D') ? <Link to=\"/statistics\">\r\n                    <Button id=\"option9\">Estatísticas</Button>\r\n                </Link> : <></>}\r\n\r\n                {localStorage.getItem('role') === 'C' ? <Link to=\"/statistics-entity\">\r\n                    <Button id=\"option11\">Estatísticas</Button>\r\n                </Link> : <></>}\r\n\r\n                {localStorage.getItem('role').includes('A') ? <Link to=\"/statistics-admin\">\r\n                    <Button id=\"option12\">Estatísticas</Button>\r\n                </Link> : <></>}\r\n\r\n                {localStorage.getItem('role').includes('B')  ? <Link to=\"/approve-parcels\">\r\n                    <Button id=\"option7\">Parcelas Pendentes</Button>\r\n                </Link> : <></>}\r\n\r\n                {localStorage.getItem('role').includes('B') ? <Link to=\"/all-parcels\">\r\n                    <Button id=\"option8\">Visualizar Parcelas</Button>\r\n                </Link> : <></>}\r\n\r\n                <Link to=\"/rankings\">\r\n                    <Button id=\"option10\">Rankings</Button>\r\n                </Link>\r\n\r\n                {localStorage.getItem('role').includes('A') || localStorage.getItem('role').includes('B') ? <Link to=\"/reports-technician\">\r\n                    <Button id=\"option13\">Reports</Button>\r\n                </Link> : <></>}\r\n\r\n                {localStorage.getItem('role') === 'A1' ? <Link to=\"/upload-csv\">\r\n                    <Button id=\"option17\">CSV</Button>\r\n                </Link> : <></>}\r\n\r\n\r\n                <Link to=\"/about-us\">\r\n                    <Button id=\"option4\">Sobre</Button>\r\n                </Link>\r\n            </ButtonGroup>\r\n\r\n            <Dropdown className=\"my-account-dropdown_TopBar\">\r\n                <Dropdown.Toggle className=\"dropdown_TopBar\">\r\n                    A Minha Conta\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu className=\"dropdown-content_TopBar\">\r\n                    <Dropdown.Item onClick={() => navigate(\"/profile\")}>Perfil</Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => {localStorage.removeItem('token'); navigate(\"/\")}}><b>Encerrar\r\n                        sessão</b></Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopBar","import  './Profile.css'\r\nimport ProfileImage from './profile_picture.png'\r\nimport TopBar from '../TopBar/TopBar.js'\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport { useState } from 'react'\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport React, {useEffect} from 'react'\r\nimport {Badge} from \"react-bootstrap\";\r\n\r\nconst Profile = () => {\r\n    const navigate = useNavigate();\r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [nif, setNif] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    const [state, setState] = useState(\"\"); //TODO: ver se e preciso\r\n    const [grade, setGrade] = useState(\"\");\r\n\r\n\r\n    let xmlhttp = new XMLHttpRequest();\r\n\r\n    //Permite correr a funcao quando a pagina e carregada\r\n    useEffect(() => {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState === 4) {\r\n                if (xmlhttp.status === 200) {\r\n                    const obj = JSON.parse(xmlhttp.responseText);\r\n                    setUsername(obj.username);\r\n                    setEmail(obj.email)\r\n                    setName(obj.name);\r\n                    setPhone(obj.phone);\r\n                    setNif(obj.nif);\r\n                    setType(obj.type);\r\n                    setState(obj.state);\r\n                    setGrade(obj.grade);\r\n                } else if(xmlhttp.status == 403 ||xmlhttp.status == 404) {\r\n                    alert(\"Não tem permissões para efetuar esta operação.\");\r\n                    localStorage.removeItem(\"token\");\r\n                    navigate(\"/\");\r\n                }\r\n                else {\r\n                    alert(\"Não foi possível obter informação.\");\r\n                }\r\n            }\r\n        }\r\n\r\n        var myObj = {token:localStorage.getItem('token')};\r\n        var myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/info/profileinfo\");\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }, [])\r\n\r\n\r\n    function userGrade(grade) {\r\n        if(grade === 1) {\r\n            return(\r\n                <Badge className=\"badge_Profile\" bg=\"danger\">1</Badge>\r\n            )\r\n        }\r\n        else if(grade === 2) {\r\n            return(\r\n                <Badge className=\"badge_Profile\" id=\"badge-2_Profile\" bg=\"warning\">2</Badge>\r\n            )\r\n        }\r\n        else if(grade === 3){\r\n            return(\r\n                <Badge className=\"badge_Profile\" bg=\"info\">3</Badge>\r\n            )\r\n        }\r\n        else if(grade === 4){\r\n            return(\r\n                <Badge className=\"badge_Profile\" bg=\"primary\">4</Badge>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <Badge className=\"badge_Profile\" bg=\"success\">5</Badge>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <TopBar />\r\n\r\n            <div className=\"bg-img_Profile\">\r\n                <div className=\"profile_info\">\r\n                    <img src={ProfileImage} alt=\"Profile picture\" className=\"profile_pic\"/>\r\n                    <p></p>\r\n                    <div id=\"username\">\r\n                        <p className=\"label_Profile\"><b>Username: </b> {username}</p>\r\n                    </div>\r\n                    <div id=\"email\">\r\n                        <p className=\"label_Profile\"><b>E-mail: </b> {email}</p>\r\n                    </div>\r\n                    <div id=\"name\">\r\n                        <p className=\"label_Profile\"><b>Nome Completo: </b> {name}</p>\r\n                    </div>\r\n                    <div id=\"phone\">\r\n                        <p className=\"label_Profile\"><b>Telemóvel/Telefone: </b> {phone===\"\"? \"Indefinido\":phone}</p>\r\n                    </div>\r\n                    <div id=\"nif\">\r\n                        <p className=\"label_Profile\"><b>NIF: </b> {nif===\"\"? \"Indefinido\":nif}</p>\r\n                    </div>\r\n                    <div id=\"grade\">\r\n                        <p className=\"label_Profile\"><b>Nota: </b> {userGrade(grade)}</p>\r\n                    </div>\r\n                    <div id=\"state\">\r\n                        <p className=\"label_Profile\"><b>Estado: </b> {state === \"ACTIVE\"?\"Ativo\":\"Inativo\"}</p>\r\n                    </div>\r\n                    <div id=\"type\">\r\n                        <p className=\"label_Profile\"><b>Tipo de utilizador: </b> {type}</p>\r\n                    </div>\r\n\r\n                    <div className=\"btn-group\" id=\"change-profile-info\">\r\n                        <div id=\"changeProfileInfo_Profile\">\r\n                            <Link to=\"/change-profile\">\r\n                                <button type=\"button\" className=\"btn btn-secondary btn-sm\">Editar Perfil</button>\r\n                            </Link>\r\n                        </div>\r\n\r\n                        <div id=\"changePassword_Profile\">\r\n                            <button onClick={ () => navigate(\"/change-password\")} type=\"button\" className=\"btn btn-warning btn-sm\">Alterar Palavra-Passe</button>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Profile","import React, {Component, useEffect} from 'react';\r\n//import csv from \"./teste.csv\";\r\n\r\nconst expirationTime = 1000*60*60*24*7;\r\n\r\nconst CSVConverter = () => {\r\n\r\n    function checkCSV() {\r\n\r\n        let xmlhttp = new XMLHttpRequest();\r\n        console.log(Date.now());\r\n        console.log(parseInt(localStorage.getItem('csvTime')));\r\n\r\n        if(localStorage.getItem(\"csv\") === null || localStorage.getItem(\"csvTime\") === null || (Date.now() > parseInt(localStorage.getItem('csvTime')))){\r\n            xmlhttp.onreadystatechange = function () {\r\n                if (xmlhttp.readyState === 4) {\r\n                    if (xmlhttp.status === 200) {\r\n                        let csv = xmlhttp.responseText;\r\n                        let json = csvJSON(csv);\r\n                        localStorage.setItem('csv', json);\r\n                        localStorage.setItem('csvTime', (Date.now()+expirationTime).toString());\r\n                    }\r\n                }\r\n            }\r\n\r\n            var myObj = { token: localStorage.getItem('token') };\r\n            var myJson = JSON.stringify(myObj);\r\n\r\n            xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/getCSV\", false);\r\n            xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n            xmlhttp.send(myJson);\r\n        }\r\n    }\r\n\r\n    function csvJSON(csv){\r\n\r\n        let lines=csv.split(\"\\n\");\r\n        let obj = {};\r\n\r\n\r\n        for(let i=1;i<lines.length-1;i++){\r\n            let currentline=lines[i].split(\";\");\r\n\r\n            let distrito = currentline[1];\r\n            if(!obj.hasOwnProperty(distrito)){\r\n                obj[distrito] = {};\r\n            }\r\n\r\n            let concelho = currentline[2];\r\n            if(!obj[distrito].hasOwnProperty(concelho)){\r\n                obj[distrito][concelho] = {};\r\n            }\r\n\r\n            let freguesia = currentline[3];\r\n            obj[distrito][concelho][freguesia] ={\r\n                dicofre:freguesia = currentline[4]\r\n            }\r\n        }\r\n\r\n        return JSON.stringify(obj);\r\n    }\r\n\r\n    useEffect(() =>\r\n    {\r\n        checkCSV();\r\n    }, [])\r\n\r\n    return(\r\n        <></>\r\n    )\r\n}\r\n\r\n\r\nexport default CSVConverter","import  './LoggedHomepage.css'\r\nimport TopBar from '../TopBar/TopBar.js'\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport {Button, Carousel, Modal} from \"react-bootstrap\";\r\nimport {GoogleMap, LoadScript, Polygon} from \"@react-google-maps/api\";\r\nimport React, { Component }  from 'react';\r\nimport CSVConverter from \"../util/CSVConverter\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst LoggedHomepage = () => {\r\n\r\n    return(\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <TopBar />\r\n\r\n            <CSVConverter/>\r\n\r\n            <div className=\"lgh_body\">\r\n\r\n                <div className=\"hero-register_LoggedHome\">\r\n                    <div className=\"hero-register-text_LoggedHome\">\r\n                        <h1><b>Registe as suas parcelas</b></h1>\r\n                        No nosso site é possível registar as suas parcelas de forma rápida e fácil. <br/>\r\n                        Clique na aba \"Registar Parcelas\". Clique no mapa para desenhar o seu terreno e marcar <br/>\r\n                        os seus limites e registe as informações respetivas ao mesmo do lado direito, preenchendo <br/>\r\n                        e selecionando os campos exigidos. Por fim, clique em Submeter. <br/>\r\n                        <p></p>\r\n                        <Link to=\"/map\">\r\n                            <Button variant=\"dark\">Registe já</Button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"hero-myParcels_LoggedHome\">\r\n                    <div className=\"hero-myParcels-text_LoggedHome\">\r\n                        <h1><b>Verifique as suas parcelas</b></h1>\r\n                        O site E-Floresta permite-lhe guardar toda a informação sobre os seus terrenos num único sítio,<br/>\r\n                        para um acesso rápido e fácil. Clique na aba \"Minhas Parcelas\". O mapa do lado esquerdo contém <br/>\r\n                        marcados todos os seus terrenos registados. Do lado direito, existe um cartão para cada uma das <br/>\r\n                        propriedades registadas. Clique em \"Detalhes\" para ver todas as informações sobre uma parcela. <br/>\r\n                        Clique em \"Editar\" para alterar alguma informação sobre a parcela em causa. <br/>\r\n                        <p></p>\r\n                        <Link to=\"/my-parcels\">\r\n                            <Button variant=\"dark\">Verifique as suas parcelas</Button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"hero-stats_LoggedHome\">\r\n                    <div className=\"hero-stats-text_LoggedHome\">\r\n                        <h1><b>Estatísticas personalizadas</b></h1>\r\n                        O E-Floresta possui estatísticas personalizadas sobre as suas parcelas registadas para facilitar <br/>\r\n                        ainda mais a organização e o gerenciamento dos seus terrenos. Para lhes aceder, clique na aba \"Estatísticas\". <br/>\r\n                        <p></p>\r\n                        <Link to=\"/statistics\">\r\n                            <Button variant=\"dark\">Veja as estatísticas</Button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoggedHomepage\r\n","import React, {useEffect} from 'react'\r\nimport  './ChangeProfile.css'\r\nimport TopBar from '../TopBar/TopBar.js'\r\nimport ProfileImage from \"./profile_picture.png\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport {Badge, Button} from \"react-bootstrap\";\r\nimport {useState} from \"react\";\r\n\r\nconst ChangeProfile = () => {\r\n    const navigate = useNavigate();\r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [nif, setNif] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n\r\n    let xmlhttp = new XMLHttpRequest();\r\n\r\n    useEffect(() => {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState === 4) {\r\n                if (xmlhttp.status === 200) {\r\n                    const obj = JSON.parse(xmlhttp.responseText);\r\n                    setUsername(obj.username);\r\n                    setEmail(obj.email)\r\n                    setName(obj.name);\r\n                    setPhone(obj.phone);\r\n                    setNif(obj.nif);\r\n                    setType(obj.type);\r\n                } else if(xmlhttp.status === 403 || xmlhttp.status === 404) {\r\n                    alert(\"Não tem permissões para efetuar esta operação.\");\r\n                    localStorage.removeItem(\"token\");\r\n                    navigate(\"/\");\r\n                }\r\n                else if (xmlhttp.status === 500){\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n                else {\r\n                    alert(\"Não foi possível obter informação.\");\r\n                }\r\n            }\r\n        }\r\n\r\n        var myObj = {token:localStorage.getItem('token')};\r\n        var myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/info/profileinfo\");\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }, [])\r\n\r\n\r\n    function changeProfile() {\r\n\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState === 4) {\r\n                if (xmlhttp.status === 200) {\r\n                    alert(\"Informação alterada com sucesso.\");\r\n                    navigate(\"/profile\");\r\n                } else if(xmlhttp.status === 403 ||xmlhttp.status === 404) {\r\n                    alert(\"Não tem permissões para efetuar esta operação.\");\r\n                    localStorage.removeItem(\"token\");\r\n                    navigate(\"/\");\r\n                }\r\n                else {\r\n                    console.log(xmlhttp.status);\r\n                    alert(\"Não foi possível obter informação.\");\r\n                }\r\n            }\r\n        }\r\n\r\n        var myObj = {name:document.getElementById(\"change-complete-name\").value,\r\n            phone:document.getElementById(\"change-phone\").value,\r\n            nif:document.getElementById(\"change-nif\").value,\r\n            token:localStorage.getItem('token')\r\n        };\r\n\r\n        var myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"PUT\", \"https://moonlit-oven-349523.appspot.com/rest/modify/info/\"+username);\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <TopBar />\r\n\r\n            <div className=\"bg-img_ChangeProfile\">\r\n                <div className=\"profileInfo_ChangeProfile\">\r\n                    <img src={ProfileImage} alt=\"Profile picture\" className=\"profile_pic\"/>\r\n                    <p></p>\r\n                    <div id=\"username_ChangeProfile\">\r\n                        <p className=\"label_ChangeProfile\"><b>Username: </b> {username} </p>\r\n                    </div>\r\n                    <div id=\"email_ChangeProfile\">\r\n                        <p className=\"label_ChangeProfile\"><b>E-mail: </b> {email} </p>\r\n                    </div>\r\n                    <div id=\"name_ChangeProfile\">\r\n                        <label className=\"label_ChangeProfile\"><b>Nome Completo: </b> </label>\r\n                        <input id=\"change-complete-name\" type=\"text\" defaultValue={name} maxLength=\"64\"/>\r\n                    </div>\r\n                    <div id=\"phone_ChangeProfile\">\r\n                        <label className=\"label_ChangeProfile\"><b>Telemóvel/Telefone: </b></label>\r\n                        <input id=\"change-phone\" type=\"number\" defaultValue={phone} maxLength=\"9\"/>\r\n                    </div>\r\n                    <div id=\"nif_ChangeProfile\">\r\n                        <label className=\"label_ChangeProfile\" htmlFor=\"change-nif\"><b>NIF: </b></label>\r\n                        <input id=\"change-nif\" type=\"number\" defaultValue={nif} maxLength=\"9\"/>\r\n                    </div>\r\n                    <div id=\"type_ChangeProfile\">\r\n                        <p className=\"label_ChangeProfile\"> <b>Tipo de utilizador: </b> {type} </p>\r\n                    </div>\r\n\r\n                    <div className=\"btn-group\" id=\"confirmAndCancel_ChangeProfile\">\r\n                        <div id=\"confirmChanges_ChangeProfile\">\r\n                            <Button type=\"button\" className=\"btn btn-success btn-sm\" onClick={changeProfile}>Confirmar\r\n                                Alterações</Button>\r\n                        </div>\r\n\r\n                        <div id=\"cancelChanges_ChangeProfile\">\r\n                            <Link to=\"/profile\">\r\n                                <Button type=\"button\" className=\"btn btn-secondary btn-sm\">Cancelar Alterações </Button>\r\n                            </Link>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default ChangeProfile","import  './AboutUs.css'\r\nimport TopBar from '../TopBar/TopBar.js'\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport React, { Component }  from 'react';\r\n\r\nconst AboutUs = () => {\r\n    return(\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <TopBar />\r\n            <div className=\"about-us\">\r\n                <h1>Equipa E-Floresta!</h1>\r\n            </div>\r\n\r\n            <div className=\"initial-text\">\r\n                O interior de Portugal está a viver um processo de desertificação populacional provocado pelo movimento\r\n                dos mais jovens para o litoral e pelo envelhecimento da população com graves consequências económicas,\r\n                sociais e ambientais. Em particular, a gestão da floresta torna-se incomportável, dando origem a perdas\r\n                económicas e ambientais resultantes dos incêndios florestais. Assim, a autarquia de Mação pretende\r\n                reordenar o seu território liderando uma iniciativa que promove a gestão integrada dos terrenos florestais\r\n                para ganhar escala e reduzir custos. <p> Esta plataforma web permite registar a adesão voluntária dos proprietários\r\n                a esta iniciativa comunitária e, posteriormente, seguir a sua gestão em termos de custos e proveitos. </p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default AboutUs","import React from 'react'\r\nimport {GoogleMap, LoadScript} from '@react-google-maps/api';\r\nimport {Marker} from '@react-google-maps/api';\r\nimport {useState} from 'react'\r\nimport {Polygon} from '@react-google-maps/api';\r\nimport \"./Map.css\"\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport {getAreaOfPolygon, getDistance, getPathLength} from 'geolib';\r\nimport CSVConverter from \"../util/CSVConverter\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst google = window.google;\r\n\r\nconst containerStyle = {\r\n    width: '75vw',\r\n    height: 'calc(100vh - 60px)'\r\n};\r\n\r\nconst center = {\r\n    lat: 38.660677,\r\n    lng: -9.205971\r\n};\r\n\r\nconst options = {\r\n    fillColor: \"Khaki\",\r\n    fillOpacity: 0.3,\r\n    strokeColor: \"DarkOrange\",\r\n    strokeOpacity: 1,\r\n    strokeWeight: 2,\r\n    clickable: false,\r\n    draggable: false,\r\n    editable: false,\r\n    geodesic: false,\r\n    zIndex: 1\r\n}\r\n\r\n\r\nconst Map = () => {\r\n    const navigate = useNavigate();\r\n    const obj = JSON.parse(localStorage.getItem('csv'));\r\n    const distritos = Object.keys(obj);\r\n    const distritoList = [];\r\n    for(let i = 0; i<distritos.length; i++) {\r\n        distritoList.push(<option>{distritos[i]}</option>)\r\n    }\r\n\r\n    const [useGeoFile, setUseGeoFile] = useState(false);\r\n    const [file, setFile] = useState();\r\n    const [documentState, setDocument] = useState();\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData(e.target);\r\n        submitParcel(formData);\r\n    }\r\n\r\n    const [markerList, setMarker] = useState([]);\r\n    const [paths, setPaths] = useState([]);\r\n    const [area, setArea] = useState(0);\r\n    const [perimeter, setPerimeter] = useState(0);\r\n\r\n    const [distrito, setDistrito] = useState(\"\");\r\n    const [concelhoOptions, setConcelhoOptions] = useState([]);\r\n    const [freguesiaOptions, setFreguesiaOptions] = useState([]);\r\n\r\n\r\n    function handleSetDistrito(distrito){\r\n        setDistrito(distrito);\r\n        let listC = Object.keys(obj[distrito]);\r\n\r\n        let list = [];\r\n        for(let i = 0; i<listC.length; i++){\r\n            list.push(<option>{listC[i]}</option>);\r\n        }\r\n        setConcelhoOptions(list);\r\n        setFreguesiaOptions([]);\r\n    }\r\n\r\n    function handleSetConcelho(concelho){\r\n        console.log(obj);\r\n        console.log(distrito);\r\n        console.log(concelho);\r\n        let listF = Object.keys(obj[distrito][concelho]);\r\n\r\n        let list = [];\r\n        for(let i = 0; i<listF.length; i++){\r\n            list.push(<option>{listF[i]}</option>);\r\n        }\r\n        setFreguesiaOptions(list);\r\n    }\r\n\r\n    function loadGeojson(file){\r\n        setMarker([]);\r\n        setPaths([]);\r\n        const google = window.google;\r\n\r\n        let reader = new FileReader();\r\n        reader.readAsText(file, \"UTF-8\");\r\n        reader.onload = function (evt) {\r\n            let obj = JSON.parse(evt.target.result);\r\n            console.log(evt.target.result);\r\n            if(obj.type !== \"Polygon\"){\r\n                alert(\"Formato inválido\");\r\n                return null;\r\n            }\r\n            if(obj.coordinates.length > 1){\r\n                alert(\"Formato inválido\");\r\n                return null;\r\n            }\r\n\r\n            let coordinateList = obj.coordinates[0];\r\n\r\n\r\n            let arr1 = [];\r\n            let arr2 = [];\r\n            for(let i = 0; i<coordinateList.length-1; i++){\r\n                arr1.push(<Marker key={markerList.length} id={markerList.length}\r\n                                                    position={{\r\n                                                        lat: coordinateList[i][0],\r\n                                                        lng: coordinateList[i][1]\r\n                                                    }}\r\n                                                    icon={{\r\n                                                        path: google.maps.SymbolPath.CIRCLE,\r\n                                                        fillColor: \"#ff8000\",\r\n                                                        fillOpacity: 1.0,\r\n                                                        strokeWeight: 0,\r\n                                                        scale: 5\r\n                                                    }}/>)\r\n                arr2.push({\r\n                    lat: coordinateList[i][0],\r\n                    lng: coordinateList[i][1]\r\n                });\r\n            }\r\n            setMarker(arr1);\r\n            setPaths(arr2);\r\n        }\r\n    }\r\n\r\n\r\n    React.useEffect(() => {\r\n        setPerimeter(getPathLength(paths) + (paths.length>1 ? getDistance(paths[paths.length-1], paths[0]) : 0));\r\n        setArea(Math.round(getAreaOfPolygon(paths)));\r\n    }, [paths]);\r\n\r\n\r\n    function addMarker(lat, lng) {\r\n        const google = window.google;\r\n\r\n        console.log(lat, lng);\r\n\r\n        setMarker(markerList.concat(<Marker key={markerList.length} id={markerList.length}\r\n                                            position={{\r\n                                                lat: lat,\r\n                                                lng: lng\r\n                                            }}\r\n                                            icon={{\r\n                                                path: google.maps.SymbolPath.CIRCLE,\r\n                                                fillColor: \"#ff8000\",\r\n                                                fillOpacity: 1.0,\r\n                                                strokeWeight: 0,\r\n                                                scale: 5\r\n                                            }}/>))\r\n\r\n        setPaths(paths.concat({\r\n            lat: lat,\r\n            lng: lng\r\n        }));\r\n    }\r\n\r\n\r\n    function rollback() {\r\n        setMarker(markerList.filter((element, index) => index < markerList.length - 1));\r\n        setPaths(paths.filter((element, index) => index < paths.length - 1));\r\n    }\r\n\r\n    function submitParcel(f) {\r\n        let xmlhttp = new XMLHttpRequest();\r\n\r\n        xmlhttp.onreadystatechange = function() {\r\n            if (xmlhttp.readyState === 4) {\r\n                if (xmlhttp.status === 200) {\r\n                    alert(\"Parcela registada com sucesso.\");\r\n                    navigate(\"/map\");\r\n                } else if(xmlhttp.status === 400) {\r\n                    alert(\"Todos os campos obrigatórios devem ser preenchidos.\");\r\n                } else if(xmlhttp.status === 403 || xmlhttp.status === 404) {\r\n                    alert(\"Não tem permissões para efetuar esta operação.\");\r\n                    localStorage.removeItem(\"token\");\r\n                    navigate(\"/\");\r\n                } else if(xmlhttp.status === 409) {\r\n                    alert(\"Já possui uma parcela com o mesmo nome.\")\r\n                }\r\n                else {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n            }\r\n        }\r\n\r\n        f.append('token', localStorage.getItem('token'));\r\n        f.append('name', document.getElementById(\"formParcelName\").value);\r\n        f.append('distrito', document.getElementById(\"formDistritoDropdown\").value);\r\n        f.append('concelho', document.getElementById(\"formConcelhoDropdown\").value);\r\n        f.append('freguesia', document.getElementById(\"formFreguesiaDropdown\").value);\r\n        f.append('photo', file);\r\n        f.append('coordinates', JSON.stringify(paths));\r\n        f.append('area', area.toString());\r\n        f.append('perimeter', perimeter.toString());\r\n        f.append('document', documentState);\r\n        f.append('usage', document.getElementById(\"formParcelUsage\").value);\r\n        f.append('oldUsage', document.getElementById(\"formParcelOldUsage\").value);\r\n        f.append('cover', document.getElementById(\"formParcelCover\").value);\r\n\r\n        for (var pair of f.entries()) {\r\n            console.log(pair[0]+ ', ' + pair[1]);\r\n        }\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/register\", true);\r\n        xmlhttp.send(f);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"mapDiv_Map\">\r\n            <CSVConverter/><LoadScript\r\n            googleMapsApiKey=\"AIzaSyAzmUVpLtuvY1vhrHL_-rcDyk_krHMdSjQ\"\r\n        >\r\n\r\n            <GoogleMap\r\n                mapContainerStyle={containerStyle}\r\n                center={center}\r\n                zoom={10}\r\n                tilt={0}\r\n                onClick={ev => {\r\n                    addMarker(ev.latLng.lat(), ev.latLng.lng())\r\n                }}\r\n            >\r\n                <Polygon\r\n                    paths={paths}\r\n                    options={options}\r\n                />\r\n                {markerList}\r\n                <></>\r\n            </GoogleMap>\r\n        </LoadScript>\r\n\r\n            <div className=\"wrapper\">\r\n                <div id=\"sideBar\">\r\n                    <div id=\"parcelInfo\">\r\n                        <div id=\"parcelArea\">\r\n                            <div className=\"MapInfo_Map\">Área</div>\r\n                            <div className=\"MapInfo_Map\">{area}m²</div>\r\n                        </div>\r\n                        <br/>\r\n                        <div id=\"parcelPerimeter\">\r\n                            <div className=\"MapInfo_Map\">Perímetro</div>\r\n                            <div className=\"MapInfo_Map\">{perimeter}m</div>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"parcelAddPoint\">\r\n                        <div id=\"addLat\">\r\n                            <div className=\"MapInfo_Map\">Latitude</div>\r\n                            <input className=\"latlng_input\" type=\"number\" id=\"input_lat\" placeholder=\"Ex: 38.661142\" maxLength=\"64\"/>\r\n                        </div>\r\n                        <br/>\r\n                        <div id=\"addLng\">\r\n                            <div className=\"MapInfo_Map\">Longitude</div>\r\n                            <input className=\"latlng_input\" type=\"number\" id=\"input_lng\" placeholder=\"Ex: -9.203510\" maxLength=\"64\"/>\r\n                        </div>\r\n                        <button type=\"button\" id=\"submit_latlng\" className=\"btn btn-success\" onClick={() => addMarker(Number(document.getElementById(\"input_lat\").value), Number(document.getElementById(\"input_lng\").value))}>Adicionar ponto</button>\r\n                    </div>\r\n                    <button type=\"button\" id=\"rollback\" className={paths.length > 0 ? \"btn btn-success\" : \"btn btn-secondary\"} onClick={rollback}>Voltar atrás</button>\r\n                </div>\r\n\r\n\r\n                <div className=\"submit_Map\">\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group className=\"mt-3\" controlId=\"formParcelName\">\r\n                            <Form.Label> <strong>Nome da Parcela</strong> </Form.Label>\r\n                            <Form.Control className=\"map_fields\" required type=\"text\" placeholder=\"Nome da parcela\" maxLength=\"64\"/>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mt-3\" controlId=\"formDistritoDropdown\">\r\n                            <Form.Label> <strong>Distrito</strong> </Form.Label>\r\n                            <Form.Select defaultValue=\"\" className=\"map_fields\" onChange={(e) => handleSetDistrito(e.target.value)}>\r\n                                <option disabled={true} value=\"\">-</option>\r\n                                {distritoList}\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mt-3\" controlId=\"formConcelhoDropdown\">\r\n                            <Form.Label> <strong>Concelho</strong> </Form.Label>\r\n                            <Form.Select defaultValue=\"\" className=\"map_fields\" onChange={(e) => handleSetConcelho(e.target.value)}>\r\n                                <option disabled={true} value=\"\">-</option>\r\n                                {concelhoOptions}\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mt-3\" controlId=\"formFreguesiaDropdown\">\r\n                            <Form.Label> <strong>Freguesia</strong> </Form.Label>\r\n                            <Form.Select defaultValue=\"\" className=\"map_fields\">\r\n                                <option disabled={true} value=\"\">-</option>\r\n                                {freguesiaOptions}\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mt-3\" controlId=\"formParcelSection\">\r\n                            <Form.Label> <strong>Secção da Parcela</strong> </Form.Label>\r\n                            <Form.Control className=\"map_fields\" required type=\"text\" placeholder=\"Secção da Parcela\" maxLength=\"2\"/>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mt-3\" controlId=\"formParcelArticalNum\">\r\n                            <Form.Label> <strong>Nº de Artigo da Parcela</strong> </Form.Label>\r\n                            <Form.Control className=\"map_fields\" required type=\"number\" placeholder=\"Nº de Artigo\" maxLength=\"3\"/>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mt-3\" controlId=\"formParcelCover\">\r\n                            <Form.Label> <strong>Cobertura do solo</strong> </Form.Label>\r\n                            <Form.Control className=\"map_fields\" required type=\"text\" placeholder=\"Cobertura do solo\" maxLength=\"64\"/>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mt-3\" controlId=\"formParcelUsage\">\r\n                            <Form.Label> <strong>Utilização do solo</strong> </Form.Label>\r\n                            <Form.Select className=\"map_fields\">\r\n                                <option value=\"Recreacional\">Recreacional</option>\r\n                                <option value=\"Transporte\">Transporte</option>\r\n                                <option value=\"Agricultural\">Agricultural</option>\r\n                                <option value=\"Residencial\">Residencial</option>\r\n                                <option value=\"Comercial\">Comercial</option>\r\n                                <option value=\"Pasto\">Pasto</option>\r\n                                <option value=\"Floresta\">Floresta</option>\r\n                                <option value=\"Privado\">Privado</option>\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mt-3\" controlId=\"formParcelOldUsage\">\r\n                            <Form.Label> <strong>Utilização prévia do solo</strong> </Form.Label>\r\n                            <Form.Select className=\"map_fields\">\r\n                                <option value=\"Recreacional\">Recreacional</option>\r\n                                <option value=\"Transporte\">Transporte</option>\r\n                                <option value=\"Agricultural\">Agricultural</option>\r\n                                <option value=\"Residencial\">Residencial</option>\r\n                                <option value=\"Comercial\">Comercial</option>\r\n                                <option value=\"Pasto\">Pasto</option>\r\n                                <option value=\"Floresta\">Floresta</option>\r\n                                <option value=\"Privado\">Privado</option>\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group className=\"position-relative mt-3\" controlId=\"formParcelPhoto\">\r\n                            <Form.Label> <strong>Foto</strong> </Form.Label>\r\n                            <Form.Control\r\n                                className=\"map_fields\"\r\n                                type=\"file\"\r\n                                required\r\n                                name=\"file\"\r\n                                accept = \".png\"\r\n                                onChange={(e) => setFile(e.target.files[0])}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"position-relative mt-3\" controlId=\"formParcelPdf\">\r\n                            <Form.Label> <strong>PDF</strong> </Form.Label>\r\n                            <Form.Control\r\n                                className=\"map_fields\"\r\n                                type=\"file\"\r\n                                required\r\n                                name=\"file\"\r\n                                accept = \".pdf\"\r\n                                onChange={(e) => {setDocument(e.target.files[0]); console.log(e.target.files[0])}}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Check\r\n                            className=\"position-relative mt-3\"\r\n                            type=\"switch\"\r\n                            id=\"custom-switch\"\r\n                            label=\"Importar ficheiro Geojson\"\r\n                            onChange={ () => setUseGeoFile(!useGeoFile)}\r\n                        />\r\n\r\n                        {useGeoFile ? <Form.Group className=\"position-relative mt-3\" controlId=\"formParcelPdf\">\r\n                            <Form.Label> <strong>Ficheiro Geojson</strong> </Form.Label>\r\n                            <Form.Control\r\n                                className=\"map_fields\"\r\n                                type=\"file\"\r\n                                required\r\n                                name=\"file\"\r\n                                accept = \".geojson\"\r\n                                onChange={(e) => {if(e.target.files[0]){loadGeojson(e.target.files[0])}}}\r\n                            />\r\n                        </Form.Group>:<></>}\r\n\r\n                        <Button className=\"mt-3 mb-3\" variant=\"success\" type=\"submit\">\r\n                            Submeter\r\n                        </Button>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default React.memo(Map)","import TopBar from \"../TopBar/TopBar.js\"\r\nimport Map from \"../Map/Map.js\"\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport React, { Component }  from 'react';\r\n\r\nconst RegisterParcel = () => {\r\n    return(\r\n        <>\r\n\r\n        <CheckIfLoggedOut />\r\n        <TopBar/>\r\n            <div className=\"map_RegisterPortion\">\r\n                <Map/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RegisterParcel","import React, { Component }  from 'react';\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst CheckIfLoggedIn = () => {\r\n    const navigate = useNavigate();\r\n    let token = localStorage.getItem('token');\r\n    if(token != null) {\r\n        //O utilizador saiu da pag sem fazer logout e ainda tem um token valido, logo nao precisa de fazer login novamente\r\n        navigate(\"/homepage\");\r\n    }\r\n\r\n    return(\r\n        <></>\r\n    )\r\n}\r\n\r\nexport default CheckIfLoggedIn","import './ChangePassword.css'\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {Link, useLocation, useNavigate} from \"react-router-dom\";\r\nimport React, { Component }  from 'react';\r\n\r\nconst ChangePassword = () => {\r\n    const navigate = useNavigate();\r\n    let oldPassword, newPassword, confirmation\r\n    let xmlhttp = new XMLHttpRequest();\r\n\r\n    function changePassword() {\r\n\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState === 4) {\r\n                if (xmlhttp.status === 200) {\r\n                    alert(\"Palavra-passe alterada com sucesso.\");\r\n                    navigate(\"/profile\");\r\n                } else if (xmlhttp.status === 400) {\r\n                    alert(\"A nova palavra-passe e a confirmação não cumprem os requisitos.\")\r\n                } else if (xmlhttp.status === 403 || xmlhttp.status === 404) {\r\n                    alert(\"Não tem permissões para efetuar esta operação.\");\r\n                    localStorage.removeItem(\"token\");\r\n                    navigate(\"/\");\r\n                } else if (xmlhttp.status === 500) {\r\n                        alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                } else {\r\n                    alert(\"Não foi alterar a palavra-passe.\");\r\n                    console.log(xmlhttp.status);\r\n                }\r\n            }\r\n        }\r\n\r\n        var myObj = {\r\n            oldPassword: document.getElementById(\"old-password\").value,\r\n            newPassword: document.getElementById(\"new-password\").value,\r\n            confirmation: document.getElementById(\"confirm-password\").value,\r\n            token: localStorage.getItem('token')\r\n        };\r\n\r\n        var myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"PUT\", \"https://moonlit-oven-349523.appspot.com/rest/modify/password\");\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CheckIfLoggedOut/>\r\n            <TopBar/>\r\n\r\n            <div className=\"bg-img_ChangePassword\">\r\n                <div className=\"body-changePassword\">\r\n                    <h2 className=\"title_ChangePassword\"><b>Altere a sua palavra-passe</b></h2>\r\n                    <br/>\r\n                    <div id=\"oldPassword_ChangePassword\">\r\n                        Palavra-Passe Antiga: {oldPassword} <input className=\"fields_ChangePassword\" id=\"old-password_ChangePassword\" type=\"password\" maxLength=\"64\"/>\r\n                    </div>\r\n                    <div id=\"newPassword_ChangePassword\">\r\n                        Nova Palavra-Passe: {newPassword} <input className=\"fields_ChangePassword\" id=\"new-password_ChangePassword\" type=\"password\" maxLength=\"64\"/>\r\n                    </div>\r\n                    <div id=\"confirmPassword_ChangePassword\">\r\n                        Confirmar nova Palavra-Passe: {confirmation} <input className=\"fields_ChangePassword\" id=\"confirm-password_ChangePassword\" type=\"password\" maxLength=\"64\"/>\r\n                    </div>\r\n\r\n                    <div className=\"btn-group\" id=\"confirmAndCancel_ChangePassword\">\r\n                        <div id=\"confirm_ChangePassword\">\r\n                            <Button type=\"button\" className=\"btn btn-success btn-sm\" onClick={changePassword} >Confirmar Alterações</Button>\r\n                        </div>\r\n\r\n                        <div id=\"cancel_ChangePassword\">\r\n                            <Link to=\"/profile\">\r\n                                <Button type=\"button\" className=\"btn btn-secondary btn-sm\">Cancelar Alterações </Button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ChangePassword","import './ParcelDetailsModal.css'\r\nimport {Button, Modal, Toast} from \"react-bootstrap\";\r\nimport React from 'react';\r\nimport {GoogleMap, Polygon} from \"@react-google-maps/api\";\r\nimport {useState} from \"react\";\r\nimport {getCenterOfBounds, getDistance, orderByDistance} from \"geolib\";\r\nimport mapCoordinates from 'geojson-apply-right-hand-rule'\r\n\r\n\r\nconst center = {\r\n    lat: 38.660677,\r\n    lng: -9.205971\r\n};\r\n\r\nconst options = {\r\n    fillColor: \"Khaki\",\r\n    fillOpacity: 0.3,\r\n    strokeColor: \"DarkOrange\",\r\n    strokeOpacity: 1,\r\n    strokeWeight: 2,\r\n    clickable: false,\r\n    draggable: false,\r\n    editable: false,\r\n    geodesic: false,\r\n    zIndex: 1\r\n}\r\n\r\nconst modalContainerStyle = {\r\n    width: '100%',\r\n    height: '45vh'\r\n};\r\n\r\nconst ParcelDetailsModal = (props) => {\r\n\r\n    const [obj, setObj] = useState({});\r\n    const [centerLoc, setCenterLoc] = useState(center);\r\n    const [zoom, setZoom] = useState(15);\r\n    const handleClose = () => {props.setShow(false);clearStates()}\r\n\r\n    function clearStates(){\r\n        setObj({});\r\n        setCenterLoc(center);\r\n        setZoom(15);\r\n    }\r\n\r\n    let xmlhttp = new XMLHttpRequest();\r\n\r\n    function loadModalValues() {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState === 4) {\r\n                if (xmlhttp.status === 200) {\r\n                    setObj(JSON.parse(xmlhttp.responseText));\r\n                }\r\n            }\r\n        }\r\n        let myObj = {token:localStorage.getItem('token')};\r\n        let myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/parcelInfo?parcelName=\"+props.obj.owner+\"_\"+props.obj.name); //TODO:alterar link\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n    function onLoad() {\r\n        let centerPoint = getCenterOfBounds(JSON.parse(props.obj.coordinates));\r\n        setCenterLoc(centerPoint);\r\n\r\n        let arr = orderByDistance(centerPoint, JSON.parse(props.obj.coordinates));\r\n        let mostDistant = arr[arr.length-1];\r\n        let dist = getDistance(centerPoint, mostDistant, 1);\r\n        setZoom(Math.round(97.1634 - (69.2069*Math.pow((dist*9), 0.0174478)))-1);\r\n    }\r\n\r\n    function exportGeoJSON(){\r\n        let arr = [];\r\n        let paths = JSON.parse(props.obj.coordinates);\r\n        for(let i = 0; i<paths.length; i++){\r\n            let auxArr = [];\r\n            auxArr.push(paths[i].lat);\r\n            auxArr.push(paths[i].lng);\r\n            arr.push(auxArr);\r\n        }\r\n        let auxArr = [];\r\n        auxArr.push(paths[0].lat);\r\n        auxArr.push(paths[0].lng);\r\n        arr.push(auxArr);\r\n\r\n        const geometry = mapCoordinates(arr);\r\n\r\n        download(props.obj.name+\".geojson\", JSON.stringify(geometry))\r\n    }\r\n\r\n    function download(filename, text) {\r\n        let element = document.createElement('a');\r\n        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\r\n        element.setAttribute('download', filename);\r\n\r\n        element.style.display = 'none';\r\n        document.body.appendChild(element);\r\n\r\n        element.click();\r\n\r\n        document.body.removeChild(element);\r\n    }\r\n\r\n    return <>\r\n        <Modal\r\n            onShow={loadModalValues}\r\n            show={props.show}\r\n            onHide={handleClose}\r\n            backdrop=\"static\"\r\n            dialogClassName=\"modal-xl\"\r\n            keyboard={false}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title> Parcela: {props.obj.name} </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n\r\n            <GoogleMap\r\n                mapContainerStyle={modalContainerStyle}\r\n                center={{\r\n                    lat:centerLoc.latitude,\r\n                    lng:centerLoc.longitude}\r\n                }\r\n                zoom={zoom}\r\n                tilt={0}\r\n                onLoad={() => onLoad(props.obj.coordinates)}\r\n\r\n            >\r\n                <Polygon\r\n                    paths={JSON.parse(props.obj.coordinates === undefined ? \"[]\" : props.obj.coordinates)}\r\n                    options={options}\r\n                />\r\n            </GoogleMap>\r\n\r\n            </Modal.Body>\r\n\r\n            <Modal.Body>\r\n                <label className=\"field_ParcelDetailsModal\" id=\"proprietario_ParcelDetailsModal\"><b>Proprietário:</b> {props.obj.owner} </label><br/>\r\n                <label className=\"field_ParcelDetailsModal\"><b>Gerente:</b> {props.obj.manager === \"\" ? \" - \" : props.obj.manager} </label><br/>\r\n                <label className=\"field_ParcelDetailsModal\"><b>Freguesia:</b> {props.obj.freguesia} </label><br/>\r\n                <label className=\"field_ParcelDetailsModal\"><b>Concelho:</b> {props.obj.concelho} </label><br/>\r\n                <label className=\"field_ParcelDetailsModal\"><b>Distrito:</b> {props.obj.distrito} </label><br/>\r\n                <label className=\"field_ParcelDetailsModal\"><b>Área da parcela:</b> {props.obj.area}m² </label><br/>\r\n                <label className=\"field_ParcelDetailsModal\"><b>Tipo de cobertura do solo:</b> {obj.cover} </label><br/>\r\n                <label className=\"field_ParcelDetailsModal\"><b>Utilização atual do solo:</b> {obj.usage} </label><br/>\r\n                <label className=\"field_ParcelDetailsModal\"><b>Utilização prévia do solo:</b> {obj.oldUsage} </label><br/>\r\n                <label className=\"field_ParcelDetailsModal\"><b>Descrição:</b> {obj.description} </label><br/>\r\n                <Button type=\"button\" id=\"document_ParcelDetailsModal\" variant=\"outline-success\" size=\"sm\" onClick={() => (window.open(obj.documentURL), '_blank')}> Ver documento </Button>\r\n                <Button type=\"button\" id=\"photo_ParcelDetailsModal\" variant=\"outline-success\" size=\"sm\" onClick={() => (window.open(obj.photoURL), '_blank')}> Ver foto </Button><br/>\r\n                <Button type=\"button\" id=\"geojson_ParcelDetailsModal\" className=\"btn btn-success btn-sm\" onClick={exportGeoJSON}> Exportar fiheiro GeoJSON </Button>\r\n            </Modal.Body>\r\n        </Modal>\r\n    </>\r\n}\r\n\r\nexport default ParcelDetailsModal;","import './ParcelEditModal.css'\r\n\r\nimport {Button, ButtonGroup, Form, Modal, Spinner} from \"react-bootstrap\";\r\nimport {GoogleMap, Marker, Polygon} from \"@react-google-maps/api\";\r\nimport {useState, useRef} from \"react\";\r\nimport {getAreaOfPolygon, getCenterOfBounds, getDistance, getPathLength, orderByDistance} from \"geolib\";\r\nimport React from 'react'\r\n\r\n\r\nconst center = {\r\n    lat: 38.660677,\r\n    lng: -9.205971\r\n};\r\n\r\nconst options = {\r\n    fillColor: \"Khaki\",\r\n    fillOpacity: 0.2,\r\n    strokeColor: \"DarkOrange\",\r\n    strokeOpacity: 1,\r\n    strokeWeight: 2,\r\n    clickable: false,\r\n    draggable: false,\r\n    editable: false,\r\n    geodesic: false,\r\n    zIndex: 1\r\n}\r\nconst optionsSecondary = {\r\n    fillColor: \"DarkCyan\",\r\n    fillOpacity: 0.4,\r\n    strokeColor: \"Aqua\",\r\n    strokeOpacity: 1,\r\n    strokeWeight: 2,\r\n    clickable: false,\r\n    draggable: false,\r\n    editable: false,\r\n    geodesic: false,\r\n    zIndex: 1\r\n}\r\n\r\nconst modalContainerStyle = {\r\n    width: '100%',\r\n    height: '45vh'\r\n};\r\n\r\n\r\nconst ParcelEditModal = (props) => {\r\n    const [markerList, setMarker] = useState([]);\r\n    const [paths, setPaths] = useState([]);\r\n    const [area, setArea] = useState(0);\r\n    const [perimeter, setPerimeter] = useState(0);\r\n    const [zoom, setZoom] = useState(15);\r\n\r\n    const [managerValue, setmanagerValue] = useState(\"\");\r\n    const [managerRequestValue, setmanagerRequestValue] = useState(\"\");\r\n    const [changedInfo, setChangedInfo] = useState(false);\r\n    const [centerLoc, setCenterLoc] = useState(center);\r\n    const [info, setInfo] = useState({});\r\n    const [showSelects, setShowSelects] = useState(false);\r\n\r\n    const [managerList, setManager] = useState([]);\r\n\r\n    const handleEditClose = () => {closeModal();clearStates()}\r\n\r\n\r\n    function clearStates(){\r\n        setMarker([]);\r\n        setPaths([]);\r\n        setArea(0);\r\n        setPerimeter(0);\r\n        setZoom(0);\r\n        setmanagerValue(\"\");\r\n        setmanagerRequestValue(\"\");\r\n        setChangedInfo(false);\r\n        setCenterLoc(center);\r\n        setInfo({});\r\n        setManager([]);\r\n    }\r\n\r\n    function closeModal(){\r\n        props.setShow(false);\r\n    }\r\n\r\n    const didMount = useRef(false);\r\n    React.useEffect(() => {\r\n        console.log(\"useeffect\");\r\n        if (didMount.current) setShowSelects(!showSelects);\r\n        else didMount.current = true;\r\n    }, [info]);\r\n\r\n    let xmlhttp = new XMLHttpRequest();\r\n\r\n\r\n    function onLoad() {\r\n        let centerPoint = getCenterOfBounds(JSON.parse(props.obj.coordinates));\r\n        setCenterLoc({\r\n            lat: centerPoint.latitude,\r\n            lng: centerPoint.longitude\r\n        });\r\n\r\n        let arr = orderByDistance(centerPoint, JSON.parse(props.obj.coordinates));\r\n        let mostDistant = arr[arr.length-1];\r\n        let dist = getDistance(centerPoint, mostDistant, 1);\r\n        setZoom(Math.round(97.1634 - (69.2069*Math.pow((dist*9), 0.0174478)))-1);\r\n    }\r\n\r\n    function addMarker(lat, lng) {\r\n        const google = window.google;\r\n\r\n        setMarker(markerList.concat(<Marker key={markerList.length} id={markerList.length}\r\n                                            position={{\r\n                                                lat: lat,\r\n                                                lng: lng\r\n                                            }}\r\n                                            icon={{\r\n                                                path: google.maps.SymbolPath.CIRCLE,\r\n                                                fillColor: \"Aqua\",\r\n                                                fillOpacity: 1.0,\r\n                                                strokeWeight: 0,\r\n                                                scale: 5\r\n                                            }}/>))\r\n\r\n        setPaths(paths.concat({\r\n            lat: lat,\r\n            lng: lng\r\n        }));\r\n    }\r\n\r\n    function rollback() {\r\n        setMarker(markerList.filter((element, index) => index < markerList.length - 1));\r\n        setPaths(paths.filter((element, index) => index < paths.length - 1));\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setPerimeter(getPathLength(paths) + (paths.length>1 ? getDistance(paths[paths.length-1], paths[0]) : 0));\r\n        setArea(Math.round(getAreaOfPolygon(paths)));\r\n    }, [paths]);\r\n\r\n    function hasManager() {\r\n        if(props.obj.manager !== \"\") {\r\n            return(\r\n                <label>\r\n                    <b>Gerente:</b> {props.obj.manager}\r\n                    <Button onClick={() => removeManager()} id=\"rmv-manager_MyParcels\" className=\"managerButtons_ParcelEditModal\" variant=\"danger\" size=\"sm\">Remover gerente</Button>\r\n                </label>\r\n            )\r\n        }\r\n        else {\r\n            if(info.managerRequest !== \"\") {\r\n                return(\r\n                    <label>\r\n                        <span><b>Gerente:</b> Pedido pendente a {info.managerRequest}</span>\r\n                        <Button id=\"rmv-pending_MyParcels\" className=\"managerButtons_ParcelEditModal\" variant=\"outline-danger\" size=\"sm\">Anular pedido</Button>\r\n                    </label>\r\n                )\r\n            }\r\n            else {\r\n                if(props.obj.isApproved === \"APPROVED\") {\r\n                    return(\r\n                        <label>\r\n                            <b>Gerente:</b>\r\n\r\n                            <select id=\"dropdown-basic\" className=\"managerButtons_ParcelEditModal\" onChange={(e) => {setmanagerValue(e.target.value)}/*(e) => {managerValue = e}*/}>\r\n                                {managerList}\r\n                            </select>\r\n\r\n                            <Button onClick={() => {sendManagerRequest()}} id=\"add-manager_MyParcels\" className=\"managerButtons_ParcelEditModal\" variant=\"success\" size=\"sm\">Adicionar gerente</Button>\r\n\r\n                        </label>\r\n                    )\r\n                }\r\n                else {\r\n                    return(\r\n                        <label>\r\n                            <b>Gerente:</b> <span className=\"red-text\">As parcelas devem estar aprovadas para efetuar pedidos de gerenciamento.</span>\r\n                        </label>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function removeManager(){\r\n        let myObj = {token:localStorage.getItem('token')};\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObj),\r\n        };\r\n\r\n        fetch(\"https://moonlit-oven-349523.appspot.com/rest/parcel/removemanager/\" + props.obj.owner + \"_\" + props.obj.name, options)\r\n            .then((r) =>{\r\n                if(r.ok){\r\n                    alert(\"Gerente removido.\");\r\n                    window.location.reload();\r\n                }\r\n            });\r\n    }\r\n\r\n    function removeRequest(){\r\n        let myObj = {token:localStorage.getItem('token')};\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObj),\r\n        };\r\n\r\n        fetch(\"https://moonlit-oven-349523.appspot.com/rest/parcel/rejectrequest/\" + props.obj.owner + \"_\" + props.obj.name, options)\r\n            .then((r) =>{\r\n                if(r.ok){\r\n                    alert(\"Pedido removido.\");\r\n                    window.location.reload();\r\n                }\r\n            });\r\n    }\r\n\r\n    function deleteParcel(){\r\n        let myObj = {token:localStorage.getItem('token')};\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObj),\r\n        };\r\n\r\n        fetch(\"https://moonlit-oven-349523.appspot.com/rest/parcel/delete/\" + props.obj.owner + \"_\" + props.obj.name, options)\r\n            .then((r) =>{\r\n                if(r.ok){\r\n                    alert(\"Parcela removida.\");\r\n                    window.location.reload();\r\n                }\r\n            });\r\n    }\r\n\r\n    function loadModalValues() {\r\n        let myObjManager = {token:localStorage.getItem('token')};\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObjManager),\r\n        };\r\n\r\n        fetch(\"https://moonlit-oven-349523.appspot.com/rest/parcel/availablemanagers/\"+props.obj.owner+\"_\"+props.obj.name, options)\r\n            .then((r) => {\r\n                if(r.ok){\r\n                    r.text().then((text) => {\r\n                        const managersObj = JSON.parse(text);\r\n                        let arr = [];\r\n\r\n                        for(let i = 0; i<managersObj.length; i++){\r\n                            arr.push(<option value={managersObj[i]}>{managersObj[i]}</option>)\r\n                        }\r\n                        setmanagerValue(managersObj[0]);\r\n                        setManager(arr);\r\n                    })\r\n                }\r\n            });\r\n\r\n\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState === 4) {\r\n                if (xmlhttp.status === 200) {\r\n                    setInfo(JSON.parse(xmlhttp.responseText));\r\n                    setmanagerRequestValue(JSON.parse(xmlhttp.responseText).managerRequest);\r\n                }\r\n            }\r\n        }\r\n        let myObj = {token:localStorage.getItem('token')};\r\n        let myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/parcelInfo?parcelName=\"+props.obj.owner+\"_\"+props.obj.name);\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n    function sendManagerRequest() {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState === 4) {\r\n                if (xmlhttp.status === 200) {\r\n                    alert(\"Pedido enviado.\")\r\n                }\r\n            }\r\n        }\r\n        var myObj = {token:localStorage.getItem('token'),\r\n                        managerName:managerValue};\r\n        console.log(myObj);\r\n        var myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/sendrequest/\" + props.obj.owner + \"_\" + props.obj.name); //TODO:alterar link\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n    async function sendNewInfo(){\r\n        let arr = [];\r\n\r\n        if(changedInfo){\r\n            arr.push(sendInfo());\r\n            console.log(\"yau\");\r\n        }\r\n        if(document.getElementById(\"file-editParcelModal_ApproveParcels\").files[0] !== undefined){\r\n            arr.push(sendDocument(document.getElementById(\"file-editParcelModal_ApproveParcels\").files[0]));\r\n        }\r\n        if(document.getElementById(\"photo-editParcelModal_ApproveParcels\").files[0] !== undefined){\r\n            arr.push(sendPhoto(document.getElementById(\"photo-editParcelModal_ApproveParcels\").files[0]));\r\n        }\r\n        if(paths.length > 2){\r\n            arr.push(sendCoordinates(paths));\r\n            console.log(\"send\");\r\n        }\r\n\r\n        Promise.all(arr).then(() => {alert(\"Success\"); window.location.reload()}).catch(() => alert(\"Error\"));\r\n    }\r\n\r\n    async function sendInfo(){\r\n        let myObj = {cover:document.getElementById(\"cobertSolo-editParcelModal_ApproveParcels\").value,\r\n            usage:document.getElementById(\"utilAtSolo-editParcelModal_ApproveParcels\").value,\r\n            oldUsage:document.getElementById(\"utilPrevSolo-editParcelModal_ApproveParcels\").value,\r\n            description:document.getElementById(\"description-editParcelModal_ApproveParcels\").value,\r\n            token:localStorage.getItem('token')};\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObj),\r\n        };\r\n\r\n        return fetch(\"https://moonlit-oven-349523.appspot.com/rest/parcel/modify/\" + props.obj.owner + \"_\" + props.obj.name+\"/info\", options);\r\n    }\r\n\r\n    async function sendDocument(document){\r\n        let formData = new FormData();\r\n        formData.append('token', localStorage.getItem('token'));\r\n        formData.append('document', document);\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            body: formData,\r\n        };\r\n\r\n        return fetch(\"https://moonlit-oven-349523.appspot.com/rest/parcel/modify/\" + props.obj.owner + \"_\" + props.obj.name+\"/document\", options);\r\n    }\r\n\r\n    async function sendPhoto(photo){\r\n        let formData = new FormData();\r\n        formData.append('token', localStorage.getItem('token'));\r\n        formData.append('photo', photo);\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            body: formData,\r\n        };\r\n\r\n        return fetch(\"https://moonlit-oven-349523.appspot.com/rest/parcel/modify/\" + props.obj.owner + \"_\" + props.obj.name+\"/photo\", options);\r\n    }\r\n\r\n    async function sendCoordinates(paths){\r\n        let myObj = {token:localStorage.getItem('token'),\r\n            coordinates:JSON.stringify(paths),\r\n            area:area.toString(),\r\n            perimeter:perimeter.toString()};\r\n        console.log(JSON.stringify(myObj));\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObj),\r\n        };\r\n\r\n        return fetch(\"https://moonlit-oven-349523.appspot.com/rest/parcel/modify/\" + props.obj.owner + \"_\" + props.obj.name+\"/coordinates\", options);\r\n    }\r\n\r\n\r\n    return <>\r\n        <Modal\r\n            onShow={loadModalValues}\r\n            show={props.show}\r\n            onHide={handleEditClose}\r\n            backdrop=\"static\"\r\n            dialogClassName=\"modal-xl\"\r\n            keyboard={false}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title> Parcela: {props.obj.name} </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n\r\n                <GoogleMap\r\n                    mapContainerStyle={modalContainerStyle}\r\n                    center={centerLoc}\r\n\r\n                    zoom={zoom}\r\n                    tilt={0}\r\n                    onLoad={() => onLoad(paths)}\r\n                    onClick={ev => {\r\n                        addMarker(ev.latLng.lat(), ev.latLng.lng())\r\n                    }}\r\n                >\r\n                    <Polygon\r\n                        paths={JSON.parse(props.obj.coordinates === undefined ? \"[]\" : props.obj.coordinates)}\r\n                        options={options}\r\n                    />\r\n                    <Polygon\r\n                        paths={paths}\r\n                        options={optionsSecondary}\r\n                    />\r\n                    {markerList}\r\n                    \r\n                </GoogleMap>\r\n\r\n                <div>\r\n\r\n                    <ButtonGroup className=\"buttons-editParcelModal_ApproveParcels\" size=\"sm\">\r\n\r\n                        <Button id=\"rollback-editParcelModal_ApproveParcels\" variant=\"secondary\" className={paths.length > 0 ? \"btn btn-success\" : \"btn btn-secondary\"} onClick={rollback}> Retroceder </Button>\r\n\r\n                    </ButtonGroup>\r\n                    <label id=\"newA-editParcelModal_ApproveParcels\"> <b>Nova área:{area}</b> </label>\r\n                    <label id=\"newP-editParcelModal_ApproveParcels\"> <b>Novo perímetro:{perimeter}</b> </label>\r\n                </div>\r\n                <p></p>\r\n\r\n                <label className=\"labels-editParcelModal_ApproveParcels\"><b>Proprietário:</b> {props.obj.owner} </label><br/>\r\n\r\n                <label className=\"labels-editParcelModal_ApproveParcels\"> {hasManager()} </label><br/>\r\n\r\n                <label className=\"labels-editParcelModal_ApproveParcels\"><b>Freguesia:</b> {props.obj.freguesia} </label><br/>\r\n\r\n                <label className=\"labels-editParcelModal_ApproveParcels\"><b>Concelho:</b> {props.obj.concelho} </label><br/>\r\n\r\n                <label className=\"labels-editParcelModal_ApproveParcels\"><b>Distrito:</b> {props.obj.distrito} </label><br/>\r\n\r\n                <label className=\"labels-editParcelModal_ApproveParcels\"><b>Área da parcela:</b> {props.obj.area}m² </label><br/>\r\n\r\n\r\n                <label for=\"cobertSolo-editParcelModal_ApproveParcels\"><b>Tipo de cobertura do solo:</b>\r\n                    <input onChange={ () => (setChangedInfo(true))} id=\"cobertSolo-editParcelModal_ApproveParcels\" className=\"inputs-editParcelModal\" type=\"text\" defaultValue={info.cover} maxLength=\"64\"/>\r\n                </label>\r\n\r\n                {showSelects?<><Form.Group className=\"mt-3\" controlId=\"utilAtSolo-editParcelModal_ApproveParcels\">\r\n                        <Form.Label> <strong>Utilização atual do solo:</strong> </Form.Label>\r\n                        <Form.Select defaultValue={info.usage} onChange={ () => (setChangedInfo(true))} className=\"inputs-editParcelModal\">\r\n                            <option value=\"Recreacional\">Recreacional</option>\r\n                            <option value=\"Transporte\">Transporte</option>\r\n                            <option value=\"Agricultural\">Agricultural</option>\r\n                            <option value=\"Residencial\">Residencial</option>\r\n                            <option value=\"Comercial\">Comercial</option>\r\n                            <option value=\"Pasto\">Pasto</option>\r\n                            <option value=\"Floresta\">Floresta</option>\r\n                            <option value=\"Privado\">Privado</option>\r\n                        </Form.Select>\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group className=\"mt-3\" controlId=\"utilPrevSolo-editParcelModal_ApproveParcels\">\r\n                        <Form.Label> <strong>Utilização prévia do solo:</strong> </Form.Label>\r\n                        <Form.Select defaultValue={info.oldUsage} onChange={ () => (setChangedInfo(true))} className=\"inputs-editParcelModal\">\r\n                            <option value=\"Recreacional\">Recreacional</option>\r\n                            <option value=\"Transporte\">Transporte</option>\r\n                            <option value=\"Agricultural\">Agricultural</option>\r\n                            <option value=\"Residencial\">Residencial</option>\r\n                            <option value=\"Comercial\">Comercial</option>\r\n                            <option value=\"Pasto\">Pasto</option>\r\n                            <option value=\"Floresta\">Floresta</option>\r\n                            <option value=\"Privado\">Privado</option>\r\n                        </Form.Select>\r\n                    </Form.Group></>:<Spinner animation=\"border\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Loading...</span>\r\n                </Spinner>}\r\n\r\n                <p></p>\r\n                <label htmlFor=\"description-editParcelModal_ApproveParcels\"><b>Descrição:</b>\r\n\r\n                    <Form.Group controlId=\"editParcelInput\" className=\"inputs-editParcelModal\" >\r\n                        <Form.Control onChange={ () => (setChangedInfo(true))} required type=\"text\"\r\n                                      placeholder=\"Descrição\" id=\"description-editParcelModal_ApproveParcels\" maxLength=\"512\"\r\n                                      as=\"textarea\" rows={4} defaultValue={info.description}/>\r\n                    </Form.Group>\r\n                </label><br/>\r\n\r\n                <label htmlFor=\"file-editParcelModal_ApproveParcels\"><b>Alterar Documento: </b>\r\n                    <input id=\"file-editParcelModal_ApproveParcels\" type=\"file\" name=\"upload\" accept=\"application/pdf\" />\r\n                </label><br/>\r\n\r\n                <label htmlFor=\"photo-editParcelModal_ApproveParcels\"><b>Alterar Fotografia: </b>\r\n                    <input id=\"photo-editParcelModal_ApproveParcels\" type=\"file\" name=\"upload\" accept=\"image/png\" />\r\n                </label><br/>\r\n\r\n                <p></p>\r\n\r\n                <div id=\"edit_modal_buttons\">\r\n                    <Button type=\"button\" className=\"btn btn-success btn-sm\" onClick={sendNewInfo}> Confirmar Alterações </Button>\r\n                    <Button id=\"delete_parcel\" onClick={() => {deleteParcel()}} className=\"managerButtons_ParcelEditModal\" variant=\"danger\" size=\"sm\">Apagar parcela</Button>\r\n                </div>\r\n\r\n\r\n            </Modal.Body>\r\n        </Modal>\r\n    </>\r\n\r\n}\r\n\r\n\r\nexport default ParcelEditModal;","import {Button, Modal, Toast} from \"react-bootstrap\";\r\nimport React from 'react';\r\nimport {GoogleMap, Polygon} from \"@react-google-maps/api\";\r\nimport {InfoWindow} from \"@react-google-maps/api\";\r\nimport {useState} from \"react\";\r\nimport {getCenterOfBounds, getDistance, orderByDistance} from \"geolib\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\n\r\nconst center = {\r\n    lat: 38.660677,\r\n    lng: -9.205971\r\n};\r\n\r\nconst options = {\r\n    fillColor: \"Khaki\",\r\n    fillOpacity: 0.3,\r\n    strokeColor: \"DarkOrange\",\r\n    strokeOpacity: 1,\r\n    strokeWeight: 2,\r\n    clickable: false,\r\n    draggable: false,\r\n    editable: false,\r\n    geodesic: false,\r\n    zIndex: 1\r\n}\r\nconst nearbyOptions = {\r\n    fillColor: \"DarkSalmon\",\r\n    fillOpacity: 0.3,\r\n    strokeColor: \"Crimson\",\r\n    strokeOpacity: 1,\r\n    strokeWeight: 2,\r\n    clickable: true,\r\n    draggable: false,\r\n    editable: false,\r\n    geodesic: false,\r\n    zIndex: 0\r\n}\r\n\r\nconst nearbyHoverOptions = {\r\n    fillColor: \"Orange\",\r\n    fillOpacity: 0.3,\r\n    strokeColor: \"Crimson\",\r\n    strokeOpacity: 1,\r\n    strokeWeight: 2,\r\n    clickable: true,\r\n    draggable: false,\r\n    editable: false,\r\n    geodesic: false,\r\n    zIndex: 0\r\n}\r\n\r\nconst modalContainerStyle = {\r\n    width: '100%',\r\n    height: '45vh'\r\n};\r\n\r\nconst ParcelNearbyModal = (props) => {\r\n    const [mapRef, setMapRef] = useState(null);\r\n    const navigate = useNavigate();\r\n    const [centerLoc, setCenterLoc] = useState(center);\r\n    const [zoom, setZoom] = useState(15);\r\n    const handleClose = () => {props.setShow(false);clearStates()}\r\n    const [nearbyParcels, setNearbyParcels] = useState([]);\r\n    const [infoWindow, setInfoWindow] = useState(<></>);\r\n\r\n    function clearStates(){\r\n        setMapRef(null);\r\n        setCenterLoc(center);\r\n        setZoom(15);\r\n        setNearbyParcels([]);\r\n        setInfoWindow(<></>);\r\n    }\r\n\r\n    function loadModalValues() {\r\n        let myObj = {token:localStorage.getItem('token')};\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObj),\r\n        };\r\n\r\n        let parcelName = props.obj.owner + \"_\" + props.obj.name;\r\n        fetch(\"https://moonlit-oven-349523.appspot.com/rest/parcel/nearby?parcelName=\"+parcelName, options)\r\n            .then((r) => {\r\n                if(r.ok){\r\n                    r.text().then(t => {\r\n                        let obj = JSON.parse(t);\r\n                        let arr = [];\r\n                        for(let i = 0; i<obj.length; i++){\r\n                            if(obj[i].parcelName !== parcelName){\r\n                                let ref;\r\n                                arr.push(\r\n                                    <Polygon\r\n                                        onLoad={(polygon) => ref = polygon}\r\n                                        onMouseOver={(ev) => ref.setOptions(nearbyHoverOptions)}\r\n                                        onMouseOut={(ev) => ref.setOptions(nearbyOptions)}\r\n                                        onClick={ev => addInfoWindow(ev.latLng.lat(), ev.latLng.lng(), obj[i].parcelName)}\r\n                                        paths={JSON.parse(obj[i].coordinates)}\r\n                                        options={nearbyOptions}\r\n                                    />\r\n                                )\r\n                            }\r\n                        }\r\n                        setNearbyParcels(arr);\r\n                    })\r\n                }\r\n            });\r\n    }\r\n\r\n    function addInfoWindow(lat, lng, parcelName){\r\n        let info =\r\n            <InfoWindow\r\n                position={{lat:lat, lng:lng}}\r\n                onCloseClick={ () => setInfoWindow(<></>)}\r\n            >\r\n                <Button id=\"report-parcel_ProposedParcelsEntity\" onClick={() => navigate(\"/make-report?id=\" + parcelName)} type=\"submit\">Reportar</Button>\r\n            </InfoWindow>\r\n\r\n        setInfoWindow(info);\r\n    }\r\n\r\n    function onLoad() {\r\n        let centerPoint = getCenterOfBounds(JSON.parse(props.obj.coordinates));\r\n        setCenterLoc(centerPoint);\r\n\r\n        let arr = orderByDistance(centerPoint, JSON.parse(props.obj.coordinates));\r\n        let mostDistant = arr[arr.length-1];\r\n        let dist = getDistance(centerPoint, mostDistant, 1);\r\n        setZoom(Math.round(97.1634 - (69.2069*Math.pow((dist*9), 0.0174478)))-1);\r\n    }\r\n\r\n    return <>\r\n        <Modal\r\n            onShow={loadModalValues}\r\n            show={props.show}\r\n            onHide={handleClose}\r\n            backdrop=\"static\"\r\n            dialogClassName=\"modal-xl\"\r\n            keyboard={false}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title> Parcela: {props.obj.name} </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n\r\n                <GoogleMap\r\n                    mapContainerStyle={modalContainerStyle}\r\n                    center={{\r\n                        lat:centerLoc.latitude,\r\n                        lng:centerLoc.longitude}\r\n                    }\r\n                    zoom={zoom}\r\n                    tilt={0}\r\n                    onLoad={(m) => {onLoad(props.obj.coordinates); setMapRef(m)}}\r\n                    onCenterChanged={() => setCenterLoc(mapRef.getCenter())}\r\n                    onClick={() => setInfoWindow(<></>)}\r\n                >\r\n                    <Polygon\r\n                        paths={JSON.parse(props.obj.coordinates === undefined ? \"[]\" : props.obj.coordinates)}\r\n                        options={options}\r\n                    />\r\n                    {nearbyParcels}\r\n                    {infoWindow}\r\n                </GoogleMap>\r\n            </Modal.Body>\r\n        </Modal>\r\n    </>\r\n}\r\n\r\nexport default ParcelNearbyModal;","import \"./MyParcels.css\"\r\n\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport {Badge, Button, Card, Col, Row, Spinner} from \"react-bootstrap\";\r\nimport {useEffect, useState} from 'react'\r\nimport React from 'react';\r\nimport {GoogleMap, LoadScript, Polygon} from \"@react-google-maps/api\";\r\nimport ParcelDetailsModal from \"../util/ParcelDetailsModal/ParcelDetailsModal\";\r\nimport ParcelEditModal from \"../util/ParcelEditModal/ParcelEditModal\";\r\nimport ParcelNearbyModal from \"../util/ParcelNearbyModal/ParcelNearbyModal\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst containerStyle = {\r\n    width: '75vw',\r\n    height: '93.5vh'\r\n};\r\n\r\nconst center = {\r\n    lat: 38.660677,\r\n    lng: -9.205971\r\n};\r\n\r\nconst options = {\r\n    fillColor: \"Khaki\",\r\n    fillOpacity: 0.2,\r\n    strokeColor: \"DarkOrange\",\r\n    strokeOpacity: 1,\r\n    strokeWeight: 2,\r\n    clickable: false,\r\n    draggable: false,\r\n    editable: false,\r\n    geodesic: false,\r\n    zIndex: 1\r\n}\r\n\r\n\r\nconst MyParcels = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const [requested, setRequested] = useState(false);\r\n    const [obj, setObj] = useState({});\r\n\r\n    const [paths, setPaths] = useState([]);\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [editShow, setEditShow] = useState(false);\r\n    const [nearbyShow, setNearbyShow] = useState(false);\r\n\r\n    const handleShow = (obj) => {\r\n        console.log(\"show\")\r\n        setObj(obj);\r\n        setShow(true);\r\n        setEditShow(false);\r\n        setNearbyShow(false);\r\n    }\r\n    const handleEditShow = (obj) => {\r\n        console.log(\"showedit\")\r\n        setObj(obj);\r\n        setShow(false);\r\n        setEditShow(true);\r\n        setNearbyShow(false);\r\n    }\r\n    const handleNearbyShow = (obj) => {\r\n        console.log(\"shownearby\")\r\n        setObj(obj);\r\n        setShow(false);\r\n        setEditShow(false);\r\n        setNearbyShow(true);\r\n    }\r\n\r\n    const [parcelList, setPList] = useState([]);\r\n\r\n    let xmlhttp = new XMLHttpRequest();\r\n\r\n    let arr = [];\r\n    let pathsArr = [];\r\n\r\n    function isParcelVerified(verified) {\r\n        if(verified === \"APPROVED\") {\r\n            return(\r\n                <Badge pill bg=\"success\">Verificada</Badge>\r\n            )\r\n        }\r\n        else if(verified === \"REJECTED\") {\r\n            return(\r\n                <Badge pill bg=\"danger\">Rejeitada</Badge>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <Badge pill bg=\"secondary\">Por verificar</Badge>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState === 4) {\r\n                if (xmlhttp.status === 200) {\r\n                    const obj = JSON.parse(xmlhttp.responseText);\r\n                    for(let i = 0; i<obj.length; i++){\r\n                        arr.push(<Card className=\"parcel-card_MyParcels\" style={{ width: '15rem',cursor: \"default\"}}>\r\n                            <Card.Img className=\"parcel_picture\" variant=\"top\" src={obj[i].photoURL} />\r\n                            <Card.Body>\r\n                                <Card.Title>{obj[i].name} {isParcelVerified(obj[i].isApproved)} </Card.Title>\r\n                                <Card.Text>\r\n                                    <label className={\"w-100 text-truncate\"}>Área: {obj[i].area}m²</label><br/>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].freguesia}>Freguesia: {obj[i].freguesia}</label><br/>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].concelho}>Concelho: {obj[i].concelho}</label><br/>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].distrito}>Distrito: {obj[i].distrito}</label><br/>\r\n                                </Card.Text>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Button id=\"show-parcel-details_MyParcels\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => handleShow(obj[i])}>Detalhes</Button>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Button id=\"edit-parcel_MyParcels\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => handleEditShow(obj[i])}>Editar</Button>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Button id=\"nearby-parcel_MyParcels\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => handleNearbyShow(obj[i])}>Parcelas Próximas</Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card.Body>\r\n                        </Card>);\r\n\r\n                        pathsArr.push(\r\n                            <Polygon\r\n                                paths={JSON.parse(obj[i].coordinates)}\r\n                                options={options}\r\n                            />\r\n                        );\r\n                    }\r\n                    setPList(arr);\r\n                    setPaths(pathsArr);\r\n                }\r\n                else if(xmlhttp.status === 403){\r\n                    localStorage.removeItem('token');\r\n                    navigate('/');\r\n                }\r\n                else if(xmlhttp.status === 404){\r\n                    alert(\"Utilizador não existe.\");\r\n                }\r\n                else {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n                setRequested(false);\r\n            }\r\n        }\r\n\r\n        var myObj = {token:localStorage.getItem('token')};\r\n        var myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/owned\");\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n        setRequested(true);\r\n    }, [])\r\n\r\n\r\n    return(\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <TopBar />\r\n\r\n            <LoadScript googleMapsApiKey=\"AIzaSyAzmUVpLtuvY1vhrHL_-rcDyk_krHMdSjQ\">\r\n\r\n                <ParcelDetailsModal obj={obj} show={show} setShow={setShow}/>\r\n\r\n                <ParcelEditModal obj={obj} show={editShow} setShow={setEditShow}/>\r\n\r\n                <ParcelNearbyModal obj={obj} show={nearbyShow} setShow={setNearbyShow}/>\r\n\r\n                <div id=\"myParcelsBody\">\r\n\r\n                    <GoogleMap\r\n                        mapContainerStyle={containerStyle}\r\n                        center={center}\r\n                        zoom={10}\r\n                        tilt={0}\r\n                    >\r\n                        {paths}\r\n                    </GoogleMap>\r\n\r\n                    <div className=\"body_MyParcels\">\r\n                        <div className=\"container_MyParcels\">\r\n                            {requested? <Spinner id=\"spinner_ConfirmationPage\" variant=\"success\" animation=\"border\" role=\"status\">\r\n                                <span className=\"visually-hidden\">Carregando...</span>\r\n                            </Spinner> : parcelList}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </LoadScript>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyParcels","import React from 'react'\r\nimport {GoogleMap, LoadScript} from '@react-google-maps/api';\r\nimport {Marker} from '@react-google-maps/api';\r\nimport {useState} from 'react'\r\nimport {Polygon} from '@react-google-maps/api';\r\nimport \"./MapAdmin.css\"\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport {getAreaOfPolygon, getDistance, getPathLength} from 'geolib';\r\nimport CSVConverter from \"../util/CSVConverter\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\n\r\nconst google = window.google;\r\n\r\nconst containerStyle = {\r\n    width: '75vw',\r\n    height: 'calc(100vh - 60px)'\r\n};\r\n\r\nconst center = {\r\n    lat: 38.660677,\r\n    lng: -9.205971\r\n};\r\n\r\nconst options = {\r\n    fillColor: \"Khaki\",\r\n    fillOpacity: 0.3,\r\n    strokeColor: \"DarkOrange\",\r\n    strokeOpacity: 1,\r\n    strokeWeight: 2,\r\n    clickable: false,\r\n    draggable: false,\r\n    editable: false,\r\n    geodesic: false,\r\n    zIndex: 1\r\n}\r\n\r\n\r\nconst MapAdmin = () => {\r\n    const navigate = useNavigate();\r\n    const obj = JSON.parse(localStorage.getItem('csv'));\r\n    const distritos = Object.keys(obj);\r\n    const distritoList = [];\r\n    for(let i = 0; i<distritos.length; i++) {\r\n        distritoList.push(<option>{distritos[i]}</option>)\r\n    }\r\n\r\n    const [useGeoFile, setUseGeoFile] = useState(false);\r\n    const [file, setFile] = useState();\r\n    const [documentState, setDocument] = useState();\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData(e.target);\r\n        submitParcel(formData);\r\n    }\r\n\r\n    const [markerList, setMarker] = useState([]);\r\n    const [paths, setPaths] = useState([]);\r\n    const [area, setArea] = useState(0);\r\n    const [perimeter, setPerimeter] = useState(0);\r\n\r\n    const [distrito, setDistrito] = useState(\"\");\r\n    const [concelhoOptions, setConcelhoOptions] = useState([]);\r\n    const [freguesiaOptions, setFreguesiaOptions] = useState([]);\r\n\r\n\r\n    function handleSetDistrito(distrito){\r\n        setDistrito(distrito);\r\n        let listC = Object.keys(obj[distrito]);\r\n\r\n        let list = [];\r\n        for(let i = 0; i<listC.length; i++){\r\n            list.push(<option>{listC[i]}</option>);\r\n        }\r\n        setConcelhoOptions(list);\r\n        setFreguesiaOptions([]);\r\n    }\r\n\r\n    function handleSetConcelho(concelho){\r\n        console.log(obj);\r\n        console.log(distrito);\r\n        console.log(concelho);\r\n        let listF = Object.keys(obj[distrito][concelho]);\r\n\r\n        let list = [];\r\n        for(let i = 0; i<listF.length; i++){\r\n            list.push(<option>{listF[i]}</option>);\r\n        }\r\n        setFreguesiaOptions(list);\r\n    }\r\n\r\n    function loadGeojson(file){\r\n        setMarker([]);\r\n        setPaths([]);\r\n        const google = window.google;\r\n\r\n        let reader = new FileReader();\r\n        reader.readAsText(file, \"UTF-8\");\r\n        reader.onload = function (evt) {\r\n            let obj = JSON.parse(evt.target.result);\r\n            console.log(evt.target.result);\r\n            if(obj.type !== \"Polygon\"){\r\n                alert(\"Formato inválido\");\r\n                return null;\r\n            }\r\n            if(obj.coordinates.length > 1){\r\n                alert(\"Formato inválido\");\r\n                return null;\r\n            }\r\n\r\n            let coordinateList = obj.coordinates[0];\r\n\r\n\r\n            let arr1 = [];\r\n            let arr2 = [];\r\n            for(let i = 0; i<coordinateList.length-1; i++){\r\n                arr1.push(<Marker key={markerList.length} id={markerList.length}\r\n                                                    position={{\r\n                                                        lat: coordinateList[i][0],\r\n                                                        lng: coordinateList[i][1]\r\n                                                    }}\r\n                                                    icon={{\r\n                                                        path: google.maps.SymbolPath.CIRCLE,\r\n                                                        fillColor: \"#ff8000\",\r\n                                                        fillOpacity: 1.0,\r\n                                                        strokeWeight: 0,\r\n                                                        scale: 5\r\n                                                    }}/>)\r\n                arr2.push({\r\n                    lat: coordinateList[i][0],\r\n                    lng: coordinateList[i][1]\r\n                });\r\n            }\r\n            setMarker(arr1);\r\n            setPaths(arr2);\r\n        }\r\n    }\r\n\r\n\r\n    React.useEffect(() => {\r\n        setPerimeter(getPathLength(paths) + (paths.length>1 ? getDistance(paths[paths.length-1], paths[0]) : 0));\r\n        setArea(Math.round(getAreaOfPolygon(paths)));\r\n    }, [paths]);\r\n\r\n\r\n    function addMarker(lat, lng) {\r\n        const google = window.google;\r\n\r\n        console.log(lat, lng);\r\n\r\n        setMarker(markerList.concat(<Marker key={markerList.length} id={markerList.length}\r\n                                            position={{\r\n                                                lat: lat,\r\n                                                lng: lng\r\n                                            }}\r\n                                            icon={{\r\n                                                path: google.maps.SymbolPath.CIRCLE,\r\n                                                fillColor: \"#ff8000\",\r\n                                                fillOpacity: 1.0,\r\n                                                strokeWeight: 0,\r\n                                                scale: 5\r\n                                            }}/>))\r\n\r\n        setPaths(paths.concat({\r\n            lat: lat,\r\n            lng: lng\r\n        }));\r\n    }\r\n\r\n\r\n    function rollback() {\r\n        setMarker(markerList.filter((element, index) => index < markerList.length - 1));\r\n        setPaths(paths.filter((element, index) => index < paths.length - 1));\r\n    }\r\n\r\n    function submitParcel(f) {\r\n        let xmlhttp = new XMLHttpRequest();\r\n\r\n        xmlhttp.onreadystatechange = function() {\r\n            if (xmlhttp.readyState === 4) {\r\n                if (xmlhttp.status === 200) {\r\n                    alert(\"Parcela registada com sucesso.\");\r\n                    navigate(\"/map\");\r\n                } else if(xmlhttp.status === 400) {\r\n                    alert(\"Todos os campos obrigatórios devem ser preenchidos.\");\r\n                } else if(xmlhttp.status === 403 || xmlhttp.status === 404) {\r\n                    alert(\"Não tem permissões para efetuar esta operação.\");\r\n                    localStorage.removeItem(\"token\");\r\n                    navigate(\"/\");\r\n                } else if(xmlhttp.status === 409) {\r\n                    alert(\"Já possui uma parcela com o mesmo nome.\")\r\n                }\r\n                else {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n            }\r\n        }\r\n\r\n        f.append('token', localStorage.getItem('token'));\r\n        f.append('owner', localStorage.getItem('token'));\r\n        f.append('name', document.getElementById(\"formOwnerName\").value);\r\n        f.append('distrito', document.getElementById(\"formDistritoDropdown\").value);\r\n        f.append('concelho', document.getElementById(\"formConcelhoDropdown\").value);\r\n        f.append('freguesia', document.getElementById(\"formFreguesiaDropdown\").value);\r\n        f.append('photo', file);\r\n        f.append('coordinates', JSON.stringify(paths));\r\n        f.append('area', area.toString());\r\n        f.append('perimeter', perimeter.toString());\r\n        f.append('document', documentState);\r\n        f.append('usage', document.getElementById(\"formParcelUsage\").value);\r\n        f.append('oldUsage', document.getElementById(\"formParcelOldUsage\").value);\r\n        f.append('cover', document.getElementById(\"formParcelCover\").value);\r\n\r\n        for (var pair of f.entries()) {\r\n            console.log(pair[0]+ ', ' + pair[1]);\r\n        }\r\n\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/register\", true);\r\n        xmlhttp.send(f);\r\n    }\r\n\r\n\r\n    return (<>\r\n        <TopBar />\r\n        <CheckIfLoggedOut />\r\n        <div className=\"mapDiv_Map\">\r\n            <CSVConverter/><LoadScript\r\n            googleMapsApiKey=\"AIzaSyAzmUVpLtuvY1vhrHL_-rcDyk_krHMdSjQ\"\r\n        >\r\n\r\n            <GoogleMap\r\n                mapContainerStyle={containerStyle}\r\n                center={center}\r\n                zoom={10}\r\n                tilt={0}\r\n                onClick={ev => {\r\n                    addMarker(ev.latLng.lat(), ev.latLng.lng())\r\n                }}\r\n            >\r\n                <Polygon\r\n                    paths={paths}\r\n                    options={options}\r\n                />\r\n                {markerList}\r\n                <></>\r\n            </GoogleMap>\r\n        </LoadScript>\r\n\r\n            <div className=\"wrapper\">\r\n                <div id=\"sideBar\">\r\n                    <div id=\"parcelInfo\">\r\n                        <div id=\"parcelArea\">\r\n                            <div className=\"MapInfo_Map\">Área</div>\r\n                            <div className=\"MapInfo_Map\">{area}m²</div>\r\n                        </div>\r\n                        <br/>\r\n                        <div id=\"parcelPerimeter\">\r\n                            <div className=\"MapInfo_Map\">Perímetro</div>\r\n                            <div className=\"MapInfo_Map\">{perimeter}m</div>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"parcelAddPoint\">\r\n                        <div id=\"addLat\">\r\n                            <div className=\"MapInfo_Map\">Latitude</div>\r\n                            <input className=\"latlng_input\" type=\"number\" id=\"input_lat\" placeholder=\"Ex: 38.661142\"/>\r\n                        </div>\r\n                        <br/>\r\n                        <div id=\"addLng\">\r\n                            <div className=\"MapInfo_Map\">Longitude</div>\r\n                            <input className=\"latlng_input\" type=\"number\" id=\"input_lng\" placeholder=\"Ex: -9.203510\"/>\r\n                        </div>\r\n                        <button type=\"button\" id=\"submit_latlng\" className=\"btn btn-success\" onClick={() => addMarker(Number(document.getElementById(\"input_lat\").value), Number(document.getElementById(\"input_lng\").value))}>Adicionar ponto</button>\r\n                    </div>\r\n                    <button type=\"button\" id=\"rollback\" className={paths.length > 0 ? \"btn btn-success\" : \"btn btn-secondary\"} onClick={rollback}>Voltar atrás</button>\r\n                </div>\r\n\r\n\r\n                <div className=\"submit_Map\">\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group className=\"mt-3\" controlId=\"formOwnerName\">\r\n                            <Form.Label> <strong>Nome do Dono</strong> </Form.Label>\r\n                            <Form.Control className=\"map_fields\" required type=\"text\" placeholder=\"Nome do Dono\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mt-3\" controlId=\"formParcelName\">\r\n                            <Form.Label> <strong>Nome da Parcela</strong> </Form.Label>\r\n                            <Form.Control className=\"map_fields\" required type=\"text\" placeholder=\"Nome da parcela\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mt-3\" controlId=\"formDistritoDropdown\">\r\n                            <Form.Label> <strong>Distrito</strong> </Form.Label>\r\n                            <Form.Select defaultValue=\"\" className=\"map_fields\" onChange={(e) => handleSetDistrito(e.target.value)}>\r\n                                <option disabled={true} value=\"\">-</option>\r\n                                {distritoList}\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mt-3\" controlId=\"formConcelhoDropdown\">\r\n                            <Form.Label> <strong>Concelho</strong> </Form.Label>\r\n                            <Form.Select defaultValue=\"\" className=\"map_fields\" onChange={(e) => handleSetConcelho(e.target.value)}>\r\n                                <option disabled={true} value=\"\">-</option>\r\n                                {concelhoOptions}\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mt-3\" controlId=\"formFreguesiaDropdown\">\r\n                            <Form.Label> <strong>Freguesia</strong> </Form.Label>\r\n                            <Form.Select defaultValue=\"\" className=\"map_fields\">\r\n                                <option disabled={true} value=\"\">-</option>\r\n                                {freguesiaOptions}\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mt-3\" controlId=\"formParcelSection\">\r\n                            <Form.Label> <strong>Secção da Parcela</strong> </Form.Label>\r\n                            <Form.Control className=\"map_fields\" required type=\"text\" placeholder=\"Secção da Parcela\" maxLength=\"2\"/>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mt-3\" controlId=\"formParcelArticalNum\">\r\n                            <Form.Label> <strong>Nº de Artigo da Parcela</strong> </Form.Label>\r\n                            <Form.Control className=\"map_fields\" required type=\"number\" placeholder=\"Nº de Artigo\" maxLength=\"3\"/>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mt-3\" controlId=\"formParcelCover\">\r\n                            <Form.Label> <strong>Cobertura do solo</strong> </Form.Label>\r\n                            <Form.Control className=\"map_fields\" required type=\"text\" placeholder=\"Cobertura do solo\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mt-3\" controlId=\"formParcelUsage\">\r\n                            <Form.Label> <strong>Utilização do solo</strong> </Form.Label>\r\n                            <Form.Select className=\"map_fields\">\r\n                                <option value=\"Recreacional\">Recreacional</option>\r\n                                <option value=\"Transporte\">Transporte</option>\r\n                                <option value=\"Agricultural\">Agricultural</option>\r\n                                <option value=\"Residencial\">Residencial</option>\r\n                                <option value=\"Comercial\">Comercial</option>\r\n                                <option value=\"Pasto\">Pasto</option>\r\n                                <option value=\"Floresta\">Floresta</option>\r\n                                <option value=\"Privado\">Privado</option>\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mt-3\" controlId=\"formParcelOldUsage\">\r\n                            <Form.Label> <strong>Utilização prévia do solo</strong> </Form.Label>\r\n                            <Form.Select className=\"map_fields\">\r\n                                <option value=\"Recreacional\">Recreacional</option>\r\n                                <option value=\"Transporte\">Transporte</option>\r\n                                <option value=\"Agricultural\">Agricultural</option>\r\n                                <option value=\"Residencial\">Residencial</option>\r\n                                <option value=\"Comercial\">Comercial</option>\r\n                                <option value=\"Pasto\">Pasto</option>\r\n                                <option value=\"Floresta\">Floresta</option>\r\n                                <option value=\"Privado\">Privado</option>\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group className=\"position-relative mt-3\" controlId=\"formParcelPhoto\">\r\n                            <Form.Label> <strong>Foto</strong> </Form.Label>\r\n                            <Form.Control\r\n                                className=\"map_fields\"\r\n                                type=\"file\"\r\n                                required\r\n                                name=\"file\"\r\n                                accept = \".png\"\r\n                                onChange={(e) => setFile(e.target.files[0])}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"position-relative mt-3\" controlId=\"formParcelPdf\">\r\n                            <Form.Label> <strong>PDF</strong> </Form.Label>\r\n                            <Form.Control\r\n                                className=\"map_fields\"\r\n                                type=\"file\"\r\n                                required\r\n                                name=\"file\"\r\n                                accept = \".pdf\"\r\n                                onChange={(e) => {setDocument(e.target.files[0]); console.log(e.target.files[0])}}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Check\r\n                            className=\"position-relative mt-3\"\r\n                            type=\"switch\"\r\n                            id=\"custom-switch\"\r\n                            label=\"Importar ficheiro Geojson\"\r\n                            onChange={ () => setUseGeoFile(!useGeoFile)}\r\n                        />\r\n\r\n                        {useGeoFile ? <Form.Group className=\"position-relative mt-3\" controlId=\"formParcelPdf\">\r\n                            <Form.Label> <strong>Ficheiro Geojson</strong> </Form.Label>\r\n                            <Form.Control\r\n                                className=\"map_fields\"\r\n                                type=\"file\"\r\n                                required\r\n                                name=\"file\"\r\n                                accept = \".geojson\"\r\n                                onChange={(e) => {if(e.target.files[0]){loadGeojson(e.target.files[0])}}}\r\n                            />\r\n                        </Form.Group>:<></>}\r\n\r\n                        <Button className=\"mt-3 mb-3\" variant=\"success\" type=\"submit\">\r\n                            Submeter\r\n                        </Button>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(MapAdmin)","import \"./ProposedParcelsEntity.css\"\r\n\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport {useEffect, useState} from 'react'\r\nimport React, { Component }  from 'react';\r\nimport {Button, ButtonGroup, Card, Col, Modal, Row, Spinner} from \"react-bootstrap\";\r\nimport {GoogleMap, LoadScript} from \"@react-google-maps/api\";\r\nimport ParcelEditModal from \"../util/ParcelEditModal/ParcelEditModal\";\r\nimport ParcelDetailsModal from \"../util/ParcelDetailsModal/ParcelDetailsModal\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst center = {\r\n    lat: 38.660677,\r\n    lng: -9.205971\r\n};\r\n\r\nconst modalContainerStyle = {\r\n    width: '72vw',\r\n    height: '45vh'\r\n};\r\n\r\nconst ProposedParcelsEntity = () => {\r\n    const [requested, setRequested] = useState(false);\r\n    const [obj, setObj] = useState({});\r\n    const navigate = useNavigate();\r\n    const [show, setShow] = useState(false);\r\n    const handleShow = (obj) => {\r\n        console.log(\"show\")\r\n        setObj(obj);\r\n        setShow(true);\r\n    }\r\n    const handleClose = () => setShow(false);\r\n\r\n    const [parcelList, setPList] = useState([]);\r\n\r\n    let xmlhttp = new XMLHttpRequest();\r\n    let arr = [];\r\n\r\n\r\n    function addManager(parcel) {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState === 4) {\r\n                if (xmlhttp.status === 200) {\r\n                    alert(\"Parcel accepted successfully\");\r\n                    window.location.reload();\r\n                }\r\n            }\r\n        }\r\n        let myObj = {\r\n            token: localStorage.getItem('token'),\r\n        };\r\n        let myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/acceptrequest/\"+parcel.owner+\"_\"+parcel.name); //TODO:alterar link\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n    function removeManager(parcel) {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState === 4) {\r\n                if (xmlhttp.status === 200) {\r\n                    alert(\"Parcel rejected successfully\");\r\n                    window.location.reload();\r\n                }\r\n            }\r\n        }\r\n        let myObj = {\r\n            token: localStorage.getItem('token'),\r\n        };\r\n        let myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/rejectrequest/\"+parcel.owner+\"_\"+parcel.name); //TODO:alterar link\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n    useEffect(() => {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState == 4) {\r\n                console.log(\"yau\");\r\n                if (xmlhttp.status == 200) {\r\n                    const obj = JSON.parse(xmlhttp.responseText);\r\n                    for(let i = 0; i<obj.length; i++){\r\n                        arr.push(<Card className=\"parcel-card_ProposedParcelsEntity\" style={{ width: '15rem',cursor: \"pointer\"}}>\r\n                            <Card.Img className=\"parcel_picture\" variant=\"top\" src={obj[i].photoURL} />\r\n                            <Card.Body>\r\n                                <Card.Title>{obj[i].name} </Card.Title>\r\n                                <Card.Text>\r\n                                    <label className={\"w-100 text-truncate\"}>Área: {obj[i].area}m²</label><br/>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].freguesia}>Freguesia: {obj[i].freguesia}</label><br/>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].concelho}>Concelho: {obj[i].concelho}</label><br/>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].distrito}>Distrito: {obj[i].distrito}</label><br/>\r\n                                </Card.Text>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Button id=\"show-parcel-details_ProposedParcelsEntity\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => handleShow(obj[i])}>Detalhes</Button>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Button id=\"report-parcel_ProposedParcelsEntity\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => navigate(\"/make-report?id=\" + obj[i].owner + \"_\" + obj[i].name)}>Reportar</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Button id=\"confirm-parcel_ProposedParcelsEntity\" onClick={() => addManager(obj[i])} className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\">Aceitar</Button>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Button id=\"reject-parcel_ProposedParcelsEntity\" onClick={() => removeManager(obj[i])} className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\">Rejeitar</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>);\r\n                    }\r\n                    setPList(arr);\r\n                }\r\n                setRequested(false);\r\n            }\r\n        }\r\n\r\n        var myObj = {token:localStorage.getItem('token')};\r\n        var myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/getrequested\");\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n        setRequested(true);\r\n    }, [])\r\n\r\n    return(\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <TopBar />\r\n\r\n            <LoadScript googleMapsApiKey=\"AIzaSyAzmUVpLtuvY1vhrHL_-rcDyk_krHMdSjQ\">\r\n                <ParcelDetailsModal obj={obj} show={show} setShow={setShow}/>\r\n            </LoadScript>\r\n\r\n\r\n            <div className=\"proposedParcelsEntityBody\">\r\n                <div className=\"container_ProposedParcelsEntity\">\r\n                    {requested? <Spinner id=\"spinner_ConfirmationPage\" variant=\"success\"  animation=\"border\" role=\"status\">\r\n                        <span className=\"visually-hidden\">Carregando...</span>\r\n                    </Spinner> : parcelList}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProposedParcelsEntity","import \"./ParcelsEntity.css\"\r\n\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport {Badge, Button, ButtonGroup, Card, Col, Dropdown, Modal, Row, Spinner} from \"react-bootstrap\";\r\nimport {useEffect, useState} from 'react'\r\nimport React from 'react';\r\nimport {GoogleMap, LoadScript, Polygon} from \"@react-google-maps/api\";\r\nimport ParcelDetailsModal from \"../util/ParcelDetailsModal/ParcelDetailsModal\";\r\nimport ParcelEditModal from \"../util/ParcelEditModal/ParcelEditModal\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\n\r\nconst containerStyle = {\r\n    width: '75vw',\r\n    height: '93.5vh'\r\n};\r\n\r\nconst center = {\r\n    lat: 38.660677,\r\n    lng: -9.205971\r\n};\r\n\r\nconst options = {\r\n    fillColor: \"Khaki\",\r\n    fillOpacity: 0.3,\r\n    strokeColor: \"DarkOrange\",\r\n    strokeOpacity: 1,\r\n    strokeWeight: 2,\r\n    clickable: false,\r\n    draggable: false,\r\n    editable: false,\r\n    geodesic: false,\r\n    zIndex: 1\r\n}\r\n\r\n\r\nconst ParcelsEntity = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const [requested, setRequested] = useState(false);\r\n    const [obj, setObj] = useState({});\r\n\r\n    const [paths, setPaths] = useState([]);\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleShow = (obj) => {\r\n        console.log(\"show\")\r\n        setObj(obj);\r\n        setShow(true);\r\n    }\r\n\r\n    const handleClose = () => setShow(false);\r\n\r\n    const [parcelList, setPList] = useState([]);\r\n\r\n    let xmlhttp = new XMLHttpRequest();\r\n\r\n    let arr = [];\r\n    let pathsArr = [];\r\n\r\n    function removeManager(parcelName, owner){\r\n        let xmlhttp = new XMLHttpRequest();\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState === 4) {\r\n                if (xmlhttp.status === 200) {\r\n                    navigate(\"/parcels-entity\");\r\n                }\r\n                else if(xmlhttp.status === 403) {\r\n                    localStorage.removeItem('token');\r\n                    navigate('/');\r\n                }\r\n                else if(xmlhttp.status === 404) {\r\n                    alert(\"Utilizador ou parcela não existe.\");\r\n                }\r\n                else {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n            }\r\n        }\r\n        let myObj = {token:localStorage.getItem('token')};\r\n        let myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/removemanager/\" + owner + \"_\" + parcelName);\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState === 4) {\r\n                if (xmlhttp.status === 200) {\r\n                    const obj = JSON.parse(xmlhttp.responseText);\r\n                    for(let i = 0; i<obj.length; i++){\r\n                        arr.push(<Card className=\"parcel-card_ParcelsEntity\" style={{ width: '15rem',cursor: \"pointer\"}}>\r\n                            <Card.Img className=\"parcel_picture\" variant=\"top\" src={obj[i].photoURL} />\r\n                            <Card.Body>\r\n                                <Card.Title>{obj[i].name} </Card.Title>\r\n                                <Card.Text>\r\n                                    <label className={\"w-100 text-truncate\"}>Área: {obj[i].area}m²</label><br/>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].freguesia}>Freguesia: {obj[i].freguesia}</label><br/>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].concelho}>Concelho: {obj[i].concelho}</label><br/>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].distrito}>Distrito: {obj[i].distrito}</label><br/>\r\n                                </Card.Text>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Button id=\"show-parcel-details_ParcelsEntity\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => handleShow(obj[i])}>Detalhes</Button>\r\n                                    </Col>\r\n                                    </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Button id=\"remove-parcel_ParcelsEntity\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => removeManager(obj[i].name, obj[i].owner)}>Remover</Button>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Button id=\"report-parcel_ProposedParcelsEntity\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => navigate(\"/make-report?id=\" + obj[i].owner + \"_\" + obj[i].name)}>Reportar</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>);\r\n\r\n                        pathsArr.push(\r\n                            <Polygon\r\n                                paths={JSON.parse(obj[i].coordinates)}\r\n                                options={options}\r\n                            />\r\n                        );\r\n                    }\r\n                    setPList(arr);\r\n                    setPaths(pathsArr);\r\n                }\r\n                else if(xmlhttp.status === 403) {\r\n                    localStorage.removeItem('token');\r\n                    navigate('/');\r\n                }\r\n                else if(xmlhttp.status === 404) {\r\n                    alert(\"Utilizador não existe.\");\r\n                }\r\n                else {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n                setRequested(false);\r\n            }\r\n        }\r\n\r\n        let myObj = {token:localStorage.getItem('token')};\r\n        let myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/managed\");\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n        setRequested(true);\r\n    }, [])\r\n\r\n\r\n    return(\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <TopBar />\r\n\r\n            <LoadScript googleMapsApiKey=\"AIzaSyAzmUVpLtuvY1vhrHL_-rcDyk_krHMdSjQ\">\r\n\r\n                <ParcelDetailsModal obj={obj} show={show} setShow={setShow}/>\r\n\r\n                <div id=\"ParcelsEntityBody\">\r\n\r\n                    <GoogleMap\r\n                        mapContainerStyle={containerStyle}\r\n                        center={center}\r\n                        zoom={10}\r\n                        tilt={0}\r\n                    >\r\n                        {paths}\r\n                    </GoogleMap>\r\n\r\n                    <div className=\"body_ParcelsEntity\">\r\n                        <div className=\"container_ParcelsEntity\">\r\n                            {requested? <Spinner id=\"spinner_ConfirmationPage\" variant=\"success\" animation=\"border\" role=\"status\">\r\n                                <span className=\"visually-hidden\">Carregando...</span>\r\n                            </Spinner> : parcelList}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </LoadScript>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ParcelsEntity","import \"./ApproveParcels.css\"\r\n\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport {useEffect, useState} from 'react'\r\nimport React, { Component }  from 'react';\r\nimport {Button, ButtonGroup, Card, Col, Container, Dropdown, Modal, Row, Spinner} from \"react-bootstrap\";\r\nimport {GoogleMap, LoadScript} from \"@react-google-maps/api\";\r\nimport ParcelDetailsModal from \"../util/ParcelDetailsModal/ParcelDetailsModal\";\r\nimport ParcelEditModal from \"../util/ParcelEditModal/ParcelEditModal\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\n\r\nconst ApproveParcels = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const [requested, setRequested] = useState(false);\r\n    const [obj, setObj] = useState({});\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [editShow, setEditShow] = useState(false);\r\n\r\n    const handleShow = (obj) => {\r\n        console.log(\"show\")\r\n        setObj(obj)\r\n        setShow(true);\r\n        setEditShow(false);\r\n    }\r\n\r\n    const handleEditShow = (obj) => {\r\n        console.log(\"showedit\")\r\n        setObj(obj)\r\n        setShow(false);\r\n        setEditShow(true);\r\n    }\r\n\r\n    const [parcelList, setPList] = useState([]);\r\n\r\n    let xmlhttp = new XMLHttpRequest();\r\n    let arr = [];\r\n\r\n    function approveParcel(parcel) {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState === 4) {\r\n                if (xmlhttp.status === 200) {\r\n                    alert(\"Parcela aprovada com sucesso.\");\r\n                    window.location.reload();\r\n                }\r\n                else if(xmlhttp.status === 403){\r\n                    localStorage.removeItem('token');\r\n                    navigate('/');\r\n                }\r\n                else if(xmlhttp.status === 404){\r\n                    alert(\"Utilizador ou parcela não existe.\");\r\n                }\r\n                else if(xmlhttp.status === 409){\r\n                    alert(\"A parcela já tem um gerente.\");\r\n                }\r\n                else {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n            }\r\n        }\r\n        let myObj = {\r\n            token: localStorage.getItem('token'),\r\n        };\r\n        let myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/approve/\"+parcel.owner+\"_\"+parcel.name); //TODO:alterar link\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n    function rejectParcel(parcel) {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState == 4) {\r\n                if (xmlhttp.status == 200) {\r\n                    alert(\"Parcel approved successfully\");\r\n                    window.location.reload();\r\n                }\r\n                else if(xmlhttp.status === 403){\r\n                    localStorage.removeItem('token');\r\n                    navigate('/');\r\n                }\r\n                else if(xmlhttp.status === 404){\r\n                    alert(\"Utilizador ou parcela não existe.\");\r\n                }\r\n                else if(xmlhttp.status === 409){\r\n                    alert(\"A parcela já tem um gerente.\");\r\n                }\r\n                else {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n            }\r\n        }\r\n        let myObj = {\r\n            token: localStorage.getItem('token'),\r\n        };\r\n        let myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/reject/\"+parcel.owner+\"_\"+parcel.name); //TODO:alterar link\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n    useEffect(() => {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState == 4) {\r\n                if (xmlhttp.status == 200) {\r\n                    const obj = JSON.parse(xmlhttp.responseText);\r\n                    for(let i = 0; i<obj.length; i++){\r\n                        arr.push(<Card className=\"parcel-card_ApproveParcels\" style={{ width: '15rem',cursor: \"pointer\"}}>\r\n                            <Card.Img className=\"parcel_picture\" variant=\"top\" src={obj[i].photoURL} />\r\n                            <Card.Body>\r\n                                <Card.Title>{obj[i].name} </Card.Title>\r\n                                <Card.Text>\r\n                                    <label className={\"w-100 text-truncate\"}>Área: {obj[i].area}m²</label>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].freguesia}>Freguesia: {obj[i].freguesia}</label>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].concelho}>Concelho: {obj[i].concelho}</label>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].distrito}>Distrito: {obj[i].distrito}</label>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Button id=\"show-parcel-details_ApproveParcels\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => handleShow(obj[i])}>Detalhes</Button>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Button id=\"edit-parcel_ApproveParcels\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => handleEditShow(obj[i])}>Editar</Button>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Button id=\"confirm-parcel_ApproveParcels\" onClick={() => approveParcel(obj[i])} className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\">Aprovar</Button>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Button id=\"reject-parcel_ApproveParcels\" onClick={() => rejectParcel(obj[i])} className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\">Rejeitar</Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card.Text>\r\n\r\n                            </Card.Body>\r\n                        </Card>);\r\n                    }\r\n                    setPList(arr);\r\n                }\r\n                else if(xmlhttp.status === 403){\r\n                    localStorage.removeItem('token');\r\n                    navigate('/');\r\n                }\r\n                else if(xmlhttp.status === 404){\r\n                    alert(\"Utilizador não existe.\");\r\n                }\r\n                else {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n                setRequested(false);\r\n            }\r\n        }\r\n\r\n        var myObj = {token:localStorage.getItem('token')};\r\n        var myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/pendingbyregion\");\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n        setRequested(true);\r\n    }, [])\r\n\r\n    return(\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <TopBar />\r\n\r\n            <LoadScript googleMapsApiKey=\"AIzaSyAzmUVpLtuvY1vhrHL_-rcDyk_krHMdSjQ\">\r\n\r\n                <ParcelDetailsModal obj={obj} show={show} setShow={setShow}/>\r\n\r\n                <ParcelEditModal obj={obj} show={editShow} setShow={setEditShow}/>\r\n\r\n            </LoadScript>\r\n\r\n            <div className=\"approveParcelsBody\">\r\n                <div className=\"container_ApproveParcels\">\r\n                    {requested? <Spinner id=\"spinner_ConfirmationPage\" variant=\"success\" animation=\"border\" role=\"status\">\r\n                        <span className=\"visually-hidden\">Carregando...</span>\r\n                    </Spinner> : parcelList}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ApproveParcels","import \"./ApproveParcelsAdmin.css\"\r\n\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport {useEffect, useState} from 'react'\r\nimport React from 'react';\r\nimport {Button, Card, Col, Dropdown, Form, Row, Spinner} from \"react-bootstrap\";\r\nimport {LoadScript} from \"@react-google-maps/api\";\r\nimport ParcelDetailsModal from \"../util/ParcelDetailsModal/ParcelDetailsModal\";\r\nimport ParcelEditModal from \"../util/ParcelEditModal/ParcelEditModal\";\r\nimport CSVConverter from \"../util/CSVConverter\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\n\r\nconst ApproveParcelsAdmin = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const [requested, setRequested] = useState(false);\r\n    const [obj, setObj] = useState({});\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [editShow, setEditShow] = useState(false);\r\n\r\n    const objCSV = JSON.parse(localStorage.getItem('csv'));\r\n    const distritos = Object.keys(objCSV);\r\n    const distritoList = [];\r\n    for(let i = 0; i<distritos.length; i++) {\r\n        distritoList.push(<option>{distritos[i]}</option>)\r\n    }\r\n\r\n    const [distrito, setDistrito] = useState(\"\");\r\n    const [concelhoOptions, setConcelhoOptions] = useState([]);\r\n    const [freguesiaOptions, setFreguesiaOptions] = useState([]);\r\n\r\n    function handleSetDistrito(distrito){\r\n        setDistrito(distrito);\r\n        let listC = Object.keys(objCSV[distrito]);\r\n\r\n        let list = [];\r\n        for(let i = 0; i<listC.length; i++){\r\n            list.push(<option>{listC[i]}</option>);\r\n        }\r\n        setConcelhoOptions(list);\r\n        setFreguesiaOptions([]);\r\n    }\r\n\r\n    function handleSetConcelho(concelho){\r\n        let listF = Object.keys(objCSV[distrito][concelho]);\r\n        let list = [];\r\n        for(let i = 0; i<listF.length; i++){\r\n            list.push(<option>{listF[i]}</option>);\r\n        }\r\n        setFreguesiaOptions(list);\r\n    }\r\n\r\n    const handleShow = (obj) => {\r\n        console.log(\"show\")\r\n        setObj(obj)\r\n        setShow(true);\r\n        setEditShow(false);\r\n    }\r\n\r\n    const handleEditShow = (obj) => {\r\n        console.log(\"showedit\")\r\n        setObj(obj)\r\n        setShow(false);\r\n        setEditShow(true);\r\n    }\r\n\r\n    const [parcelList, setPList] = useState([]);\r\n\r\n    let xmlhttp = new XMLHttpRequest();\r\n\r\n    function approveParcel(parcel) {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState === 4) {\r\n                if (xmlhttp.status === 200) {\r\n                    alert(\"Parcel approved successfully\");\r\n                    window.location.reload();\r\n                }\r\n                else if(xmlhttp.status === 403){\r\n                    localStorage.removeItem('token');\r\n                    navigate('/');\r\n                }\r\n                else if(xmlhttp.status === 404){\r\n                    alert(\"Utilizador ou parcela não existe.\");\r\n                }\r\n                else if(xmlhttp.status === 409){\r\n                    alert(\"A parcela já tem um gerente.\");\r\n                }\r\n                else {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n            }\r\n        }\r\n        let myObj = {\r\n            token: localStorage.getItem('token'),\r\n        };\r\n        let myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/approve/\"+parcel.owner+\"_\"+parcel.name); //TODO:alterar link\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n    function rejectParcel(parcel) {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState === 4) {\r\n                if (xmlhttp.status === 200) {\r\n                    alert(\"Parcel approved successfully\");\r\n                    window.location.reload();\r\n                }\r\n                else if(xmlhttp.status === 403){\r\n                    localStorage.removeItem('token');\r\n                    navigate('/');\r\n                }\r\n                else if(xmlhttp.status === 404){\r\n                    alert(\"Utilizador ou parcela não existe.\");\r\n                }\r\n                else if(xmlhttp.status === 409){\r\n                    alert(\"A parcela já tem um gerente.\");\r\n                }\r\n                else {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n            }\r\n        }\r\n        let myObj = {\r\n            token: localStorage.getItem('token'),\r\n        };\r\n        let myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/reject/\"+parcel.owner+\"_\"+parcel.name); //TODO:alterar link\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n    function getParcels(){\r\n        setRequested(true);\r\n        let myObj = {token:localStorage.getItem('token')};\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObj),\r\n        };\r\n\r\n        let distritoValue = document.getElementById(\"dropdown-distrito_ApproveParcelsAdmin\").value;\r\n        let concelhoValue = document.getElementById(\"dropdown-concelho_ApproveParcelsAdmin\").value;\r\n        let freguesiaValue = document.getElementById(\"dropdown-freg_ApproveParcelsAdmin\").value;\r\n\r\n        fetch(\"https://moonlit-oven-349523.appspot.com/rest/parcel/pendingbyregion/\"+distritoValue+\"/\"+concelhoValue+\"/\"+freguesiaValue, options)\r\n            .then((r) => {\r\n                if(r.ok){\r\n                    r.text().then(t => {\r\n                        let arr = JSON.parse(t);\r\n                        let auxArr = [];\r\n\r\n                        for(let i = 0; i<arr.length; i++){\r\n                            console.log()\r\n                            auxArr.push(<Card className=\"parcel-card_ApproveParcelsAdmin\" style={{ width: '15rem',cursor: \"pointer\"}}>\r\n                                <Card.Img className=\"parcel_picture_ApproveParcelsAdmin\" variant=\"top\" src={arr[i].photoURL} />\r\n                                <Card.Body>\r\n                                    <Card.Title>{arr[i].name} </Card.Title>\r\n                                    <Card.Text>\r\n                                        <label className={\"w-100 text-truncate\"}>Área: {arr[i].area}m²</label>\r\n                                        <label className={\"w-100 text-truncate\"} title={arr[i].freguesia}>Freguesia: {arr[i].freguesia}</label>\r\n                                        <label className={\"w-100 text-truncate\"} title={arr[i].concelho}>Concelho: {arr[i].concelho}</label>\r\n                                        <label className={\"w-100 text-truncate\"} title={arr[i].distrito}>Distrito: {arr[i].distrito}</label>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <Button id=\"show-parcel-details_ApproveParcelsAdmin\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => handleShow(arr[i])}>Detalhes</Button>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Button id=\"edit-parcel_ApproveParcelsAdmin\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => handleEditShow(arr[i])}>Editar</Button>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Button id=\"confirm-parcel_ApproveParcelsAdmin\" onClick={() => approveParcel(arr[i])} className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\">Aprovar</Button>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Button id=\"reject-parcel_ApproveParcelsAdmin\" onClick={() => rejectParcel(arr[i])} className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\">Rejeitar</Button>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Card.Text>\r\n\r\n                                </Card.Body>\r\n                            </Card>);\r\n                        }\r\n                        setPList(auxArr);\r\n                        setRequested(false);\r\n                    });\r\n                }\r\n                else if(r.status === 403) {\r\n                    localStorage.removeItem('token');\r\n                    navigate('/');\r\n                }\r\n                else if(xmlhttp.status === 404){\r\n                    alert(\"Utilizador não existe.\");\r\n                }\r\n                else {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n            }).catch( () => setRequested(false));\r\n\r\n    }\r\n\r\n    return(\r\n        <><CSVConverter/>\r\n            <CheckIfLoggedOut />\r\n            <TopBar />\r\n\r\n            <div className=\"buttons_ApproveParcelsAdmin\">\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group className=\"mt-3\" controlId=\"dropdown-distrito_ApproveParcelsAdmin\">\r\n                            <Form.Select defaultValue=\"-\" className=\"map_fields\" onChange={(e) => handleSetDistrito(e.target.value)}>\r\n                                <option disabled={true} value=\"-\">Distrito</option>\r\n                                {distritoList}\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                        <Form.Group className=\"mt-3\" controlId=\"dropdown-concelho_ApproveParcelsAdmin\">\r\n                            <Form.Select defaultValue=\"-\" className=\"map_fields\" onChange={(e) => handleSetConcelho(e.target.value)}>\r\n                                <option disabled={true} value=\"-\">Concelho</option>\r\n                                {concelhoOptions}\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                        <Form.Group className=\"mt-3\" controlId=\"dropdown-freg_ApproveParcelsAdmin\">\r\n                            <Form.Select defaultValue=\"-\" className=\"map_fields\">\r\n                                <option value=\"-\">Freguesia</option>\r\n                                {freguesiaOptions}\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                        <Button onClick={getParcels} id=\"search_ApproveParcelsAdmin\" variant=\"success\">Procurar</Button>\r\n                    </Col>\r\n\r\n                </Row>\r\n            </div>\r\n\r\n            <LoadScript googleMapsApiKey=\"AIzaSyAzmUVpLtuvY1vhrHL_-rcDyk_krHMdSjQ\">\r\n\r\n                <ParcelDetailsModal obj={obj} show={show} setShow={setShow}/>\r\n\r\n                <ParcelEditModal obj={obj} show={editShow} setShow={setEditShow}/>\r\n\r\n            </LoadScript>\r\n\r\n            <div className=\"approveParcelsAdminBody\">\r\n                <div className=\"container_ApproveParcelsAdmin\">\r\n                    {requested? <Spinner id=\"spinner_ConfirmationPage\" animation=\"border\" variant=\"success\" role=\"status\">\r\n                                    <span className=\"visually-hidden\">Carregando...</span>\r\n                                </Spinner> : parcelList}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ApproveParcelsAdmin","import \"./AllParcels.css\"\r\n\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport {useEffect, useState} from 'react'\r\nimport React, { Component }  from 'react';\r\nimport {Button, ButtonGroup, Card, Col, Container, Dropdown, Modal, Row, Spinner} from \"react-bootstrap\";\r\nimport {GoogleMap, LoadScript, Polygon} from \"@react-google-maps/api\";\r\nimport ParcelDetailsModal from \"../util/ParcelDetailsModal/ParcelDetailsModal\";\r\nimport ParcelEditModal from \"../util/ParcelEditModal/ParcelEditModal\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst containerStyle = {\r\n    width: '75vw',\r\n    height: '93.5vh'\r\n};\r\n\r\nconst center = {\r\n    lat: 38.660677,\r\n    lng: -9.205971\r\n};\r\n\r\nconst options = {\r\n    fillColor: \"Khaki\",\r\n    fillOpacity: 0.3,\r\n    strokeColor: \"DarkOrange\",\r\n    strokeOpacity: 1,\r\n    strokeWeight: 2,\r\n    clickable: false,\r\n    draggable: false,\r\n    editable: false,\r\n    geodesic: false,\r\n    zIndex: 1\r\n}\r\n\r\nconst AllParcels = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const [requested, setRequested] = useState(false);\r\n    const [obj, setObj] = useState({});\r\n\r\n    const [paths, setPaths] = useState([]);\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [editShow, setEditShow] = useState(false);\r\n\r\n    const handleShow = (obj) => {\r\n        console.log(\"show\")\r\n        setObj(obj)\r\n        setShow(true);\r\n        setEditShow(false);\r\n    }\r\n\r\n    const handleEditShow = (obj) => {\r\n        console.log(\"showedit\")\r\n        setObj(obj)\r\n        setShow(false);\r\n        setEditShow(true);\r\n    }\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleEditClose = () => setEditShow(false);\r\n\r\n    const [parcelList, setPList] = useState([]);\r\n\r\n    let xmlhttp = new XMLHttpRequest();\r\n    let arr = [];\r\n\r\n    useEffect(() => {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState === 4) {\r\n                if (xmlhttp.status === 200) {\r\n                    const obj = JSON.parse(xmlhttp.responseText);\r\n                    let pathsArr = [];\r\n                    for(let i = 0; i<obj.length; i++){\r\n\r\n\r\n                        arr.push(<Card className=\"parcel-card_AllParcels\" style={{ width: '15rem',cursor: \"pointer\"}}>\r\n                            <Card.Img className=\"parcel_picture_AllParcels\" variant=\"top\" src={obj[i].photoURL} />\r\n                            <Card.Body>\r\n                                <Card.Title>{obj[i].name} </Card.Title>\r\n                                <Card.Text>\r\n                                    <label className={\"w-100 text-truncate\"}>Área: {obj[i].area}m²</label>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].freguesia}>Freguesia: {obj[i].freguesia}</label>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].concelho}>Concelho: {obj[i].concelho}</label>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].distrito}>Distrito: {obj[i].distrito}</label>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Button id=\"show-parcel-details_AllParcels\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => handleShow(obj[i])}>Detalhes</Button>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Button id=\"edit-parcel_AllParcels\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => handleEditShow(obj[i])}>Editar</Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card.Text>\r\n\r\n                            </Card.Body>\r\n                        </Card>);\r\n                        pathsArr.push(\r\n                            <Polygon\r\n                                paths={JSON.parse(obj[i].coordinates)}\r\n                                options={options}\r\n                            />\r\n                        );\r\n                    }\r\n                    setPList(arr);\r\n                    setPaths(pathsArr);\r\n                }\r\n                else if(xmlhttp.status === 403){\r\n                    localStorage.removeItem('token');\r\n                    navigate('/');\r\n                }\r\n                else if(xmlhttp.status === 404){\r\n                    alert(\"Utilizador não existe.\");\r\n                }\r\n                else {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n                setRequested(false);\r\n            }\r\n        }\r\n\r\n        var myObj = {token:localStorage.getItem('token')};\r\n        var myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/approvedbyregion\");\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n        setRequested(true);\r\n    }, [])\r\n\r\n    return(<>\r\n        <CheckIfLoggedOut />\r\n        <TopBar />\r\n\r\n            <LoadScript googleMapsApiKey=\"AIzaSyAzmUVpLtuvY1vhrHL_-rcDyk_krHMdSjQ\">\r\n\r\n                <ParcelDetailsModal obj={obj} show={show} setShow={setShow}/>\r\n\r\n                <ParcelEditModal obj={obj} show={editShow} setShow={setEditShow}/>\r\n\r\n                <div id=\"allParcelsBody\">\r\n\r\n                    <GoogleMap\r\n                        mapContainerStyle={containerStyle}\r\n                        center={center}\r\n                        zoom={10}\r\n                        tilt={0}\r\n                    >\r\n                        {paths}\r\n                    </GoogleMap>\r\n\r\n                    <div className=\"body_AllParcels\">\r\n                        <div className=\"container_AllParcels\">\r\n                            {requested? <Spinner id=\"spinner_ConfirmationPage\" variant=\"success\" animation=\"border\" role=\"status\">\r\n                                <span className=\"visually-hidden\">Carregando...</span>\r\n                            </Spinner> : parcelList}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </LoadScript>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AllParcels","import \"./AllParcelsAdmin.css\"\r\n\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport {useEffect, useState} from 'react'\r\nimport React from 'react';\r\nimport {Button, Card, Col, Dropdown, Form, Row, Spinner} from \"react-bootstrap\";\r\nimport ParcelDetailsModal from \"../util/ParcelDetailsModal/ParcelDetailsModal\";\r\nimport ParcelEditModal from \"../util/ParcelEditModal/ParcelEditModal\";\r\nimport {GoogleMap, LoadScript, Polygon} from \"@react-google-maps/api\";\r\nimport CSVConverter from \"../util/CSVConverter\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst containerStyle = {\r\n    width: '75vw',\r\n    height: '100%'\r\n};\r\n\r\nconst center = {\r\n    lat: 38.660677,\r\n    lng: -9.205971\r\n};\r\n\r\nconst optionsPoly = {\r\n    fillColor: \"Khaki\",\r\n    fillOpacity: 0.2,\r\n    strokeColor: \"DarkOrange\",\r\n    strokeOpacity: 1,\r\n    strokeWeight: 2,\r\n    clickable: false,\r\n    draggable: false,\r\n    editable: false,\r\n    geodesic: false,\r\n    zIndex: 1\r\n}\r\n\r\nconst AllParcelsAdmin = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const [requested, setRequested] = useState(false);\r\n    const [obj, setObj] = useState({});\r\n\r\n    const [paths, setPaths] = useState([]);\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [editShow, setEditShow] = useState(false);\r\n\r\n    const objCSV = JSON.parse(localStorage.getItem('csv'));\r\n    const distritos = Object.keys(objCSV);\r\n    const distritoList = [];\r\n    for(let i = 0; i<distritos.length; i++) {\r\n        distritoList.push(<option>{distritos[i]}</option>)\r\n    }\r\n\r\n    const [distrito, setDistrito] = useState(\"\");\r\n    const [concelhoOptions, setConcelhoOptions] = useState([]);\r\n    const [freguesiaOptions, setFreguesiaOptions] = useState([]);\r\n\r\n    function handleSetDistrito(distrito){\r\n        setDistrito(distrito);\r\n        let listC = Object.keys(objCSV[distrito]);\r\n\r\n        let list = [];\r\n        for(let i = 0; i<listC.length; i++){\r\n            list.push(<option>{listC[i]}</option>);\r\n        }\r\n        setConcelhoOptions(list);\r\n        setFreguesiaOptions([]);\r\n    }\r\n\r\n    function handleSetConcelho(concelho){\r\n        let listF = Object.keys(objCSV[distrito][concelho]);\r\n        let list = [];\r\n        for(let i = 0; i<listF.length; i++){\r\n            list.push(<option>{listF[i]}</option>);\r\n        }\r\n        setFreguesiaOptions(list);\r\n    }\r\n\r\n\r\n    const handleShow = (obj) => {\r\n        console.log(\"show\")\r\n        setObj(obj)\r\n        setShow(true);\r\n        setEditShow(false);\r\n    }\r\n\r\n    const handleEditShow = (obj) => {\r\n        console.log(\"showedit\")\r\n        setObj(obj)\r\n        setShow(false);\r\n        setEditShow(true);\r\n    }\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleEditClose = () => setEditShow(false);\r\n\r\n    const [parcelList, setPList] = useState([]);\r\n\r\n    function getParcels(){\r\n        setRequested(true);\r\n        let myObj = {token:localStorage.getItem('token')};\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObj),\r\n        };\r\n\r\n        let distritoValue = document.getElementById(\"dropdown-distrito_AllParcelsAdmin\").value;\r\n        let concelhoValue = document.getElementById(\"dropdown-concelho_AllParcelsAdmin\").value;\r\n        let freguesiaValue = document.getElementById(\"dropdown-freg_AllParcelsAdmin\").value;\r\n\r\n        fetch(\"https://moonlit-oven-349523.appspot.com/rest/parcel/approvedbyregion/\"+distritoValue+\"/\"+concelhoValue+\"/\"+freguesiaValue, options)\r\n            .then((r) => {\r\n                if(r.ok){\r\n                    r.text().then(t => {\r\n                        let arr = JSON.parse(t);\r\n                        let auxArr = [];\r\n                        let pathsArr = [];\r\n                        for(let i = 0; i<arr.length; i++){\r\n                            auxArr.push(<Card className=\"parcel-card_AllParcelsAdmin\" style={{ width: '15rem',cursor: \"pointer\"}}>\r\n                                <Card.Img className=\"parcel_picture_AllParcelsAdmin\" variant=\"top\" src={arr[i].photoURL} />\r\n                                <Card.Body>\r\n                                    <Card.Title>{arr[i].name} </Card.Title>\r\n                                    <Card.Text>\r\n                                        <label className={\"w-100 text-truncate\"}>Área: {arr[i].area}m²</label>\r\n                                        <label className={\"w-100 text-truncate\"} title={arr[i].freguesia}>Freguesia: {arr[i].freguesia}</label>\r\n                                        <label className={\"w-100 text-truncate\"} title={arr[i].concelho}>Concelho: {arr[i].concelho}</label>\r\n                                        <label className={\"w-100 text-truncate\"} title={arr[i].distrito}>Distrito: {arr[i].distrito}</label>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <Button id=\"show-parcel-details_AllParcels\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => handleShow(arr[i])}>Detalhes</Button>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Button id=\"edit-parcel_AllParcels\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => handleEditShow(arr[i])}>Editar</Button>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Card.Text>\r\n\r\n                                </Card.Body>\r\n                            </Card>);\r\n                            pathsArr.push(\r\n                                <Polygon\r\n                                    paths={JSON.parse(arr[i].coordinates)}\r\n                                    options={optionsPoly}\r\n                                />\r\n                            );\r\n                        }\r\n                        setPaths(pathsArr);\r\n                        setPList(auxArr);\r\n                        setRequested(false);\r\n                    });\r\n                }\r\n                else if(r.status === 403){\r\n                    localStorage.removeItem('token');\r\n                    navigate('/');\r\n                }\r\n                else if(r.status === 404){\r\n                    alert(\"Utilizador não existe.\");\r\n                }\r\n                else {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n            }).catch(() => setRequested(false));\r\n\r\n    }\r\n\r\n    return(<>\r\n            <CSVConverter/>\r\n        <CheckIfLoggedOut />\r\n        <TopBar />\r\n\r\n            <div className=\"buttons_AllParcelsAdmin\">\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group className=\"mt-3\" controlId=\"dropdown-distrito_AllParcelsAdmin\">\r\n                            <Form.Select defaultValue=\"-\" className=\"map_fields\" onChange={(e) => handleSetDistrito(e.target.value)}>\r\n                                <option disabled={true} value=\"-\">Distrito</option>\r\n                                {distritoList}\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                        <Form.Group className=\"mt-3\" controlId=\"dropdown-concelho_AllParcelsAdmin\">\r\n                            <Form.Select defaultValue=\"-\" className=\"map_fields\" onChange={(e) => handleSetConcelho(e.target.value)}>\r\n                                <option disabled={true} value=\"-\">Concelho</option>\r\n                                {concelhoOptions}\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                        <Form.Group className=\"mt-3\" controlId=\"dropdown-freg_AllParcelsAdmin\">\r\n                            <Form.Select defaultValue=\"-\" className=\"map_fields\">\r\n                                <option value=\"-\">Freguesia</option>\r\n                                {freguesiaOptions}\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                        <Button onClick={getParcels} id=\"search_AllParcelsAdmin\" variant=\"success\">Procurar</Button>\r\n                    </Col>\r\n\r\n                </Row>\r\n            </div>\r\n\r\n\r\n            <LoadScript googleMapsApiKey=\"AIzaSyAzmUVpLtuvY1vhrHL_-rcDyk_krHMdSjQ\">\r\n\r\n                <ParcelDetailsModal obj={obj} show={show} setShow={setShow}/>\r\n\r\n                <ParcelEditModal obj={obj} show={editShow} setShow={setEditShow}/>\r\n\r\n                <div id=\"allParcelsAdminBody\">\r\n\r\n                    <GoogleMap\r\n                        mapContainerStyle={containerStyle}\r\n                        center={center}\r\n                        zoom={10}\r\n                        tilt={0}\r\n                    >\r\n                        {paths}\r\n                    </GoogleMap>\r\n\r\n                    <div className=\"body_AllParcelsAdmin\">\r\n                        <div className=\"container_AllParcelsAdmin\">\r\n                            {requested? <Spinner id=\"spinner_ConfirmationPage\" variant=\"success\" animation=\"border\" role=\"status\">\r\n                                <span className=\"visually-hidden\">Carregando...</span>\r\n                            </Spinner> : parcelList}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </LoadScript>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default AllParcelsAdmin","import './Statistics.css'\r\nimport React, { useState } from 'react';\r\nimport {Pie} from \"react-chartjs-2\";\r\nimport {useEffect} from \"react\";\r\nimport {Spinner} from \"react-bootstrap\";\r\n\r\n\r\nconst PieChartStatistics = (props) => {\r\n\r\n    const [labelList, setLabelList] = useState([]);\r\n    const [dataList, setDataList] = useState([]);\r\n    const [request, setRequest] = useState(false);\r\n\r\n    let dataOptions = {\r\n        labels: labelList,\r\n        datasets: [\r\n            {\r\n                label: 'Percentagem por quantidade de parcelas',\r\n                backgroundColor: [\r\n                    'rgba(0, 0, 0, 0.2)',\r\n                    'rgba(51, 51, 255, 0.2)',\r\n                    'rgba(75, 192, 192, 0.2)',\r\n                    'rgba(102, 204, 0, 0.2)',\r\n                    'rgba(255, 206, 86, 0.2)',\r\n                    'rgba(255, 128, 0, 0.2)',\r\n                    'rgba(255, 99, 132, 0.2)',\r\n                    'rgba(204, 153, 255, 0.2)'\r\n                ],\r\n                borderColor: [\r\n                    'rgba(0, 0, 0, 1)',\r\n                    'rgba(51, 51, 255, 1)',\r\n                    'rgba(75, 192, 192, 1)',\r\n                    'rgba(102, 204, 0, 1)',\r\n                    'rgba(255, 206, 86, 1)',\r\n                    'rgba(255, 128, 0, 1)',\r\n                    'rgba(255, 99, 132, 1)',\r\n                    'rgba(204, 153, 255, 1)'\r\n                ],\r\n                borderWidth: 2,\r\n                data: dataList,\r\n            },\r\n        ],\r\n    };\r\n\r\n    useEffect(() => {\r\n        setRequest(true);\r\n        let myObj = {token:localStorage.getItem('token')};\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObj),\r\n        };\r\n\r\n        fetch(props.url, options)\r\n            .then((r) =>{\r\n                if(r.ok){\r\n                    r.text().then(t => {\r\n                        let text = JSON.parse(t);\r\n                        let array = Array.from(text, ([name, value]) => ({ name, value }));\r\n                        let auxLabelList = [];\r\n                        let auxDataList = [];\r\n                        for(let i = 0; i<array.length; i++){\r\n                            auxLabelList.push(array[i].name);\r\n                            auxDataList.push(array[i].value);\r\n                        }\r\n                        setLabelList(auxLabelList);\r\n                        setDataList(auxDataList);\r\n                    })\r\n                }\r\n                setRequest(false);\r\n            }).catch(() =>setRequest(false));\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {request?<Spinner id=\"spinner_ConfirmationPage\" animation=\"border\" role=\"status\">\r\n                <span className=\"visually-hidden\">Carregando...</span>\r\n            </Spinner>: <Pie className=\"util-solo-byNumber_Stats\" data={dataOptions} options={{ responsive: true }} />}\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default PieChartStatistics;","import './Statistics.css'\r\nimport React, { useState } from 'react';\r\nimport {useEffect} from \"react\";\r\nimport {Spinner} from \"react-bootstrap\";\r\n\r\n\r\nconst NumberStatistics = (props) => {\r\n\r\n    const [result, setResult] = useState(0);\r\n    const [request, setRequest] = useState(false);\r\n\r\n    let label = props.label;\r\n\r\n    useEffect(() => {\r\n        setRequest(true);\r\n        let myObj = {token:localStorage.getItem('token')};\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObj),\r\n        };\r\n\r\n        fetch(props.url, options)\r\n            .then((r) =>{\r\n                if(r.ok){\r\n                    r.text().then(t => {\r\n                        setResult(t);\r\n                    })\r\n                }\r\n                setRequest(false);\r\n            }).catch(() =>setRequest(false));\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {request?<Spinner id=\"spinner_ConfirmationPage\" animation=\"border\" role=\"status\">\r\n                <span className=\"visually-hidden\">Carregando...</span>\r\n            </Spinner>: <h5 className=\"stats-title statistics_result\"> {result + \" \" +label} </h5>}\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default NumberStatistics;","import './Statistics.css'\r\nimport React, { useState } from 'react';\r\nimport Chart from 'chart.js/auto';\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport {Pie} from \"react-chartjs-2\";\r\nimport PieChartStatistics from \"../util/Statistics/PieChartStatistics\";\r\nimport NumberStatistics from \"../util/Statistics/NumberStatistics\";\r\n\r\n\r\nconst Statistics = () => {\r\n\r\n    const [utilSoloByNumber] = useState({\r\n        labels: ['Privado', 'Comercial', 'Pasto', 'Floresta', 'Agrícola', 'Residencial', 'Transporte', 'Recreativo'],\r\n        datasets: [\r\n            {\r\n                label: 'Percentagem por quantidade de parcelas',\r\n                backgroundColor: [\r\n                    'rgba(0, 0, 0, 0.2)',\r\n                    'rgba(51, 51, 255, 0.2)',\r\n                    'rgba(75, 192, 192, 0.2)',\r\n                    'rgba(102, 204, 0, 0.2)',\r\n                    'rgba(255, 206, 86, 0.2)',\r\n                    'rgba(255, 128, 0, 0.2)',\r\n                    'rgba(255, 99, 132, 0.2)',\r\n                    'rgba(204, 153, 255, 0.2)'\r\n                ],\r\n                borderColor: [\r\n                    'rgba(0, 0, 0, 1)',\r\n                    'rgba(51, 51, 255, 1)',\r\n                    'rgba(75, 192, 192, 1)',\r\n                    'rgba(102, 204, 0, 1)',\r\n                    'rgba(255, 206, 86, 1)',\r\n                    'rgba(255, 128, 0, 1)',\r\n                    'rgba(255, 99, 132, 1)',\r\n                    'rgba(204, 153, 255, 1)'\r\n                ],\r\n                borderWidth: 2,\r\n                data: [4, 12, 10, 5, 1, 3, 1, 1],\r\n            },\r\n        ],\r\n    });\r\n\r\n\r\n    const [utilSoloByArea] = useState({\r\n        labels: ['Privado', 'Comercial', 'Pasto', 'Floresta', 'Agrícola', 'Residencial', 'Transporte', 'Recreativo'],\r\n        datasets: [\r\n            {\r\n                label: 'Percentagem por área de parcelas',\r\n                backgroundColor: [\r\n                    'rgba(0, 0, 0, 0.2)',\r\n                    'rgba(51, 51, 255, 0.2)',\r\n                    'rgba(75, 192, 192, 0.2)',\r\n                    'rgba(102, 204, 0, 0.2)',\r\n                    'rgba(255, 206, 86, 0.2)',\r\n                    'rgba(255, 128, 0, 0.2)',\r\n                    'rgba(255, 99, 132, 0.2)',\r\n                    'rgba(204, 153, 255, 0.2)'\r\n                ],\r\n                borderColor: [\r\n                    'rgba(0, 0, 0, 1)',\r\n                    'rgba(51, 51, 255, 1)',\r\n                    'rgba(75, 192, 192, 1)',\r\n                    'rgba(102, 204, 0, 1)',\r\n                    'rgba(255, 206, 86, 1)',\r\n                    'rgba(255, 128, 0, 1)',\r\n                    'rgba(255, 99, 132, 1)',\r\n                    'rgba(204, 153, 255, 1)'\r\n                ],\r\n                borderWidth: 2,\r\n                data: [200, 50, 150, 50, 300, 40, 200, 10],\r\n            },\r\n        ],\r\n    });\r\n\r\n\r\n    return (\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <TopBar />\r\n\r\n            <div className=\"statistics-background\">\r\n                <Row>\r\n                    <Col className=\"stats-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-title\"> Área total das parcelas </h4>\r\n                        <h6 className=\"stats-title\"> 562m² </h6>\r\n                    </Col>\r\n\r\n                    <Col className=\"stats-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-title\"> Média da área das parcelas </h4>\r\n                        <h6 className=\"stats-title\"> 804m² </h6>\r\n                    </Col>\r\n\r\n                    <Col className=\"stats-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-title\"> Perímetro total das parcelas </h4>\r\n                        <h6 className=\"stats-title\"> 1800m </h6>\r\n                    </Col>\r\n\r\n                    <Col className=\"stats-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-title\"> Média do perímetro das parcelas </h4>\r\n                        <h6 className=\"stats-title\"> 804m </h6>\r\n                    </Col>\r\n\r\n                    <Col className=\"stats-entity-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-entity-title\"> Número de parcelas que registei </h4>\r\n                        <h6 className=\"stats-entity-title\"> 11 </h6>\r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n                <Row>\r\n\r\n                    <p></p>\r\n                    <p className=\"stats-paragraph\" ></p>\r\n                    <Col className=\"stats-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-title\"> Número de parcelas por tipo de utilização do solo </h4>\r\n                        <Pie className=\"util-solo-byNumber_Stats\" data={utilSoloByNumber} options={{ responsive: true }} />\r\n                    </Col>\r\n\r\n                    <Col className=\"stats-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-title\"> Área de parcelas por tipo de utilização do solo </h4>\r\n                        <Pie className=\"util-solo-byArea_Stats\" data={utilSoloByArea} options={{ responsive: true }} />\r\n                    </Col>\r\n\r\n                </Row>\r\n                <PieChartStatistics url=\"asd\"></PieChartStatistics>\r\n                <NumberStatistics url=\"asd\" type=\"area\"></NumberStatistics>\r\n            </div>\r\n\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default Statistics;","import './StatisticsEntity.css'\r\nimport React, { useState } from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport Chart from 'chart.js/auto';\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport {Col, Form, Row} from \"react-bootstrap\";\r\n\r\n\r\nconst StatisticsEntity = () => {\r\n\r\n    const [utilSoloByNumber] = useState({\r\n        labels: ['Privado', 'Comercial', 'Pasto', 'Floresta', 'Agrícola', 'Residencial', 'Transporte', 'Recreativo'],\r\n        datasets: [\r\n            {\r\n                label: 'Percentagem por quantidade de parcelas',\r\n                backgroundColor: [\r\n                    'rgba(0, 0, 0, 0.2)',\r\n                    'rgba(51, 51, 255, 0.2)',\r\n                    'rgba(75, 192, 192, 0.2)',\r\n                    'rgba(102, 204, 0, 0.2)',\r\n                    'rgba(255, 206, 86, 0.2)',\r\n                    'rgba(255, 128, 0, 0.2)',\r\n                    'rgba(255, 99, 132, 0.2)',\r\n                    'rgba(204, 153, 255, 0.2)'\r\n                ],\r\n                borderColor: [\r\n                    'rgba(0, 0, 0, 1)',\r\n                    'rgba(51, 51, 255, 1)',\r\n                    'rgba(75, 192, 192, 1)',\r\n                    'rgba(102, 204, 0, 1)',\r\n                    'rgba(255, 206, 86, 1)',\r\n                    'rgba(255, 128, 0, 1)',\r\n                    'rgba(255, 99, 132, 1)',\r\n                    'rgba(204, 153, 255, 1)'\r\n                ],\r\n                borderWidth: 2,\r\n                data: [4, 12, 10, 5, 1, 3, 1, 1],\r\n            },\r\n        ],\r\n    });\r\n\r\n\r\n    const [utilSoloByArea] = useState({\r\n        labels: ['Privado', 'Comercial', 'Pasto', 'Floresta', 'Agrícola', 'Residencial', 'Transporte', 'Recreativo'],\r\n        datasets: [\r\n            {\r\n                label: 'Percentagem por área de parcelas',\r\n                backgroundColor: [\r\n                    'rgba(0, 0, 0, 0.2)',\r\n                    'rgba(51, 51, 255, 0.2)',\r\n                    'rgba(75, 192, 192, 0.2)',\r\n                    'rgba(102, 204, 0, 0.2)',\r\n                    'rgba(255, 206, 86, 0.2)',\r\n                    'rgba(255, 128, 0, 0.2)',\r\n                    'rgba(255, 99, 132, 0.2)',\r\n                    'rgba(204, 153, 255, 0.2)'\r\n                ],\r\n                borderColor: [\r\n                    'rgba(0, 0, 0, 1)',\r\n                    'rgba(51, 51, 255, 1)',\r\n                    'rgba(75, 192, 192, 1)',\r\n                    'rgba(102, 204, 0, 1)',\r\n                    'rgba(255, 206, 86, 1)',\r\n                    'rgba(255, 128, 0, 1)',\r\n                    'rgba(255, 99, 132, 1)',\r\n                    'rgba(204, 153, 255, 1)'\r\n                ],\r\n                borderWidth: 2,\r\n                data: [200, 50, 150, 50, 300, 40, 200, 10],\r\n            },\r\n        ],\r\n    });\r\n\r\n\r\n    return (\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <TopBar />\r\n\r\n            <div className=\"statistics-entity-background\">\r\n                <Row>\r\n                    <Col className=\"stats-entity-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-entity-title\"> Área total das parcelas </h4>\r\n                        <h6 className=\"stats-entity-title\"> 562m² </h6>\r\n                    </Col>\r\n\r\n                    <Col className=\"stats-entity-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-entity-title\"> Média da área das parcelas </h4>\r\n                        <h6 className=\"stats-entity-title\"> 804m² </h6>\r\n                    </Col>\r\n\r\n                    <Col className=\"stats-entity-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-entity-title\"> Perímetro total das parcelas </h4>\r\n                        <h6 className=\"stats-entity-title\"> 1800m </h6>\r\n                    </Col>\r\n\r\n                    <Col className=\"stats-entity-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-entity-title\"> Média do perímetro das parcelas </h4>\r\n                        <h6 className=\"stats-entity-title\"> 804m </h6>\r\n                    </Col>\r\n\r\n                    <Col className=\"stats-entity-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-entity-title\"> Número de parcelas que registei </h4>\r\n                        <h6 className=\"stats-entity-title\"> 11 </h6>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n\r\n                    <p></p>\r\n                    <p className=\"stats-entity-paragraph\" ></p>\r\n                    <Col className=\"stats-entity-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-entity-title\"> Número de parcelas por tipo de utilização do solo </h4>\r\n                        <Pie className=\"util-solo-byNumber_StatsEntity\" data={utilSoloByNumber} options={{ responsive: true }} />\r\n                    </Col>\r\n\r\n                    <Col className=\"stats-entity-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-entity-title\"> Área de parcelas por tipo de utilização do solo </h4>\r\n                        <Pie className=\"util-solo-byArea_StatsEntity\" data={utilSoloByArea} options={{ responsive: true }} />\r\n                    </Col>\r\n\r\n                </Row>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default StatisticsEntity;","import './StatisticsAdmin.css'\r\nimport React, { useState } from 'react';\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport {Col, Dropdown, Row, Table} from \"react-bootstrap\";\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\n\r\nconst StatisticsAdmin = () => {\r\n\r\n\r\n    const [utilSoloByArea] = useState({\r\n        labels: ['Privado', 'Comercial', 'Pasto', 'Floresta', 'Agrícola', 'Residencial', 'Transporte', 'Recreativo'],\r\n        datasets: [\r\n            {\r\n                label: 'Percentagem por área de parcelas',\r\n                backgroundColor: [\r\n                    'rgba(0, 0, 0, 0.2)',\r\n                    'rgba(51, 51, 255, 0.2)',\r\n                    'rgba(75, 192, 192, 0.2)',\r\n                    'rgba(102, 204, 0, 0.2)',\r\n                    'rgba(255, 206, 86, 0.2)',\r\n                    'rgba(255, 128, 0, 0.2)',\r\n                    'rgba(255, 99, 132, 0.2)',\r\n                    'rgba(204, 153, 255, 0.2)'\r\n                ],\r\n                borderColor: [\r\n                    'rgba(0, 0, 0, 1)',\r\n                    'rgba(51, 51, 255, 1)',\r\n                    'rgba(75, 192, 192, 1)',\r\n                    'rgba(102, 204, 0, 1)',\r\n                    'rgba(255, 206, 86, 1)',\r\n                    'rgba(255, 128, 0, 1)',\r\n                    'rgba(255, 99, 132, 1)',\r\n                    'rgba(204, 153, 255, 1)'\r\n                ],\r\n                borderWidth: 2,\r\n                data: [200, 50, 150, 50, 300, 40, 200, 10],\r\n            },\r\n        ],\r\n    });\r\n\r\n\r\n    return (\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <TopBar />\r\n\r\n            <div className=\"statistics-admin-background\">\r\n                <Row>\r\n                    <Col className=\"stats-admin-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-admin-title\"> Área total das parcelas registadas </h4>\r\n                        <h5 className=\"stats-admin-title statistics_result\"> 36562m² </h5>\r\n                    </Col>\r\n\r\n                    <Col className=\"stats-admin-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-admin-title\"> Média da área das parcelas registadas </h4>\r\n                        <h5 className=\"stats-admin-title statistics_result\"> 1204m² </h5>\r\n                    </Col>\r\n\r\n                    <Col className=\"stats-admin-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-admin-title\"> Perímetro total das parcelas registadas </h4>\r\n                        <h5 className=\"stats-admin-title statistics_result\"> 25963m </h5>\r\n                    </Col>\r\n\r\n                    <Col className=\"stats-admin-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-admin-title\"> Média do perímetro das parcelas registadas </h4>\r\n                        <h5 className=\"stats-admin-title statistics_result\"> 1204m² </h5>\r\n                    </Col>\r\n\r\n                    <Col className=\"stats-admin-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-admin-title\"> Número de parcelas registadas </h4>\r\n                        <h5 className=\"stats-admin-title statistics_result\"> 804 </h5>\r\n                    </Col>\r\n                    <p></p>\r\n                </Row>\r\n\r\n                <Row>\r\n\r\n                    <p className=\"stats-admin-paragraph\"></p>\r\n                    <Col className=\"stats-admin-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-admin-title\"> Área total das parcelas no distrito de: </h4>\r\n                        <Dropdown>\r\n                            <Dropdown.Toggle variant=\"outline-secondary\" id=\"dropdown-basic\">\r\n                                Distrito\r\n                            </Dropdown.Toggle>\r\n\r\n                            <Dropdown.Menu>\r\n                                <Dropdown.Item>Distrito1</Dropdown.Item>\r\n                                <Dropdown.Item>Distrito2</Dropdown.Item>\r\n                                <Dropdown.Item>Distrito3</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n\r\n                        <h5 className=\"stats-admin-title statistics_result\"> 16204m² </h5>\r\n                    </Col>\r\n\r\n                    <Col className=\"stats-admin-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-admin-title\"> Área total das parcelas no concelho de: </h4>\r\n                        <Dropdown>\r\n                            <Dropdown.Toggle variant=\"outline-secondary\" id=\"dropdown-basic\">\r\n                                Concelho\r\n                            </Dropdown.Toggle>\r\n\r\n                            <Dropdown.Menu>\r\n                                <Dropdown.Item>Concelho1</Dropdown.Item>\r\n                                <Dropdown.Item>Concelho2</Dropdown.Item>\r\n                                <Dropdown.Item>Concelho3</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n\r\n                        <h5 className=\"stats-admin-title statistics_result\"> 1204m² </h5>\r\n                    </Col>\r\n\r\n                    <Col className=\"stats-admin-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-admin-title\"> Área total das parcelas na freguesia de: </h4>\r\n                        <Dropdown>\r\n                            <Dropdown.Toggle variant=\"outline-secondary\" id=\"dropdown-basic\">\r\n                                Freguesia\r\n                            </Dropdown.Toggle>\r\n\r\n                            <Dropdown.Menu>\r\n                                <Dropdown.Item>Freguesia1</Dropdown.Item>\r\n                                <Dropdown.Item>Freguesia2</Dropdown.Item>\r\n                                <Dropdown.Item>Freguesia3</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n\r\n                        <h5 className=\"stats-admin-title statistics_result\"> 204m² </h5>\r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n                <Row>\r\n\r\n                    <Col className=\"stats-admin-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-admin-title\"> Perímetro total das parcelas no distrito de: </h4>\r\n                        <Dropdown>\r\n                            <Dropdown.Toggle variant=\"outline-secondary\" id=\"dropdown-basic\">\r\n                                Distrito\r\n                            </Dropdown.Toggle>\r\n\r\n                            <Dropdown.Menu>\r\n                                <Dropdown.Item>Distrito1</Dropdown.Item>\r\n                                <Dropdown.Item>Distrito2</Dropdown.Item>\r\n                                <Dropdown.Item>Distrito3</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n\r\n                        <h5 className=\"stats-admin-title statistics_result\"> 16204m </h5>\r\n                    </Col>\r\n\r\n                    <Col className=\"stats-admin-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-admin-title\"> Perímetro total das parcelas no concelho de: </h4>\r\n                        <Dropdown>\r\n                            <Dropdown.Toggle variant=\"outline-secondary\" id=\"dropdown-basic\">\r\n                                Concelho\r\n                            </Dropdown.Toggle>\r\n\r\n                            <Dropdown.Menu>\r\n                                <Dropdown.Item>Concelho1</Dropdown.Item>\r\n                                <Dropdown.Item>Concelho2</Dropdown.Item>\r\n                                <Dropdown.Item>Concelho3</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n\r\n                        <h5 className=\"stats-admin-title statistics_result\"> 1204m </h5>\r\n                    </Col>\r\n\r\n                    <Col className=\"stats-admin-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-admin-title\"> Perímetro total das parcelas na freguesia de: </h4>\r\n                        <Dropdown>\r\n                            <Dropdown.Toggle variant=\"outline-secondary\" id=\"dropdown-basic\">\r\n                                Freguesia\r\n                            </Dropdown.Toggle>\r\n\r\n                            <Dropdown.Menu>\r\n                                <Dropdown.Item>Freguesia1</Dropdown.Item>\r\n                                <Dropdown.Item>Freguesia2</Dropdown.Item>\r\n                                <Dropdown.Item>Freguesia3</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n\r\n                        <h5 className=\"stats-admin-title statistics_result\"> 204m </h5>\r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n\r\n                <Row>\r\n\r\n                    <p></p>\r\n                    <p className=\"stats-admin-paragraph\" ></p>\r\n                    <Col className=\"stats-admin-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-admin-title\"> Área das parcelas por tipo de utilização do solo no distrito de:</h4>\r\n\r\n                        <Dropdown>\r\n                            <Dropdown.Toggle variant=\"outline-secondary\" id=\"dropdown-basic\">\r\n                                Distrito\r\n                            </Dropdown.Toggle>\r\n\r\n                            <Dropdown.Menu>\r\n                                <Dropdown.Item>Distrito1</Dropdown.Item>\r\n                                <Dropdown.Item>Distrito2</Dropdown.Item>\r\n                                <Dropdown.Item>Distrito3</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n\r\n                        <Pie className=\"util-solo-byArea_StatsAdmin\" data={utilSoloByArea} options={{ responsive: true }} />\r\n                    </Col>\r\n\r\n                    <Col className=\"stats-admin-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-admin-title\"> Área das parcelas por tipo de utilização do solo no concelho de:</h4>\r\n\r\n                        <Dropdown>\r\n                            <Dropdown.Toggle variant=\"outline-secondary\" id=\"dropdown-basic\">\r\n                                Concelho\r\n                            </Dropdown.Toggle>\r\n\r\n                            <Dropdown.Menu>\r\n                                <Dropdown.Item>Concelho1</Dropdown.Item>\r\n                                <Dropdown.Item>Concelho2</Dropdown.Item>\r\n                                <Dropdown.Item>Concelho3</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n\r\n                        <Pie className=\"util-solo-byArea_StatsAdmin\" data={utilSoloByArea} options={{ responsive: true }} />\r\n                    </Col>\r\n\r\n                    <Col className=\"stats-admin-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-admin-title\"> Área das parcelas por tipo de utilização do solo na freguesia de:</h4>\r\n\r\n                        <Dropdown>\r\n                            <Dropdown.Toggle variant=\"outline-secondary\" id=\"dropdown-basic\">\r\n                                Freguesia\r\n                            </Dropdown.Toggle>\r\n\r\n                            <Dropdown.Menu>\r\n                                <Dropdown.Item>Freguesia1</Dropdown.Item>\r\n                                <Dropdown.Item>Freguesia2</Dropdown.Item>\r\n                                <Dropdown.Item>Freguesia3</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n\r\n                        <Pie className=\"util-solo-byArea_StatsAdmin\" data={utilSoloByArea} options={{ responsive: true }} />\r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n                <p></p>\r\n                <p className=\"stats-admin-paragraph\"></p>\r\n                <h2 className=\"rankings-title_StatsAdmin\"> Ranking de distritos com mais parcelas registadas </h2>\r\n\r\n                <Row className=\"rankings-container_StatsAdmin\">\r\n                    <Col>\r\n                        <Table id=\"mostParcelsNrDist_StatsAdmin\" striped bordered hover>\r\n                            <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Distrito</th>\r\n                                <th>Número de parcelas</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            <tr>\r\n                                <td>1</td>\r\n                                <td>Beja</td>\r\n                                <td>3524</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>2</td>\r\n                                <td>Évora</td>\r\n                                <td>3283</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>3</td>\r\n                                <td>Faro</td>\r\n                                <td>2987</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>4</td>\r\n                                <td>Viseu</td>\r\n                                <td>2745</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>5</td>\r\n                                <td>Vila Real</td>\r\n                                <td>2693</td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                        <Table id=\"mostParcelsAreaDist_StatsAdmin\" striped bordered hover>\r\n                            <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Distrito</th>\r\n                                <th>Área total de parcelas (m²)</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            <tr>\r\n                                <td>1</td>\r\n                                <td>Évora</td>\r\n                                <td>9524</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>2</td>\r\n                                <td>Beja</td>\r\n                                <td>9283</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>3</td>\r\n                                <td>Viseu</td>\r\n                                <td>8987</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>4</td>\r\n                                <td>Faro</td>\r\n                                <td>7745</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>5</td>\r\n                                <td>Vila Real</td>\r\n                                <td>5693</td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n\r\n                <p></p>\r\n                <h2 className=\"rankings-title_StatsAdmin\"> Ranking de concelhos com mais parcelas registadas </h2>\r\n\r\n                <Row className=\"rankings-container_StatsAdmin\">\r\n                    <Col>\r\n                        <Table id=\"mostParcelsNrConc_StatsAdmin\" striped bordered hover>\r\n                            <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Concelho</th>\r\n                                <th>Número de parcelas</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            <tr>\r\n                                <td>1</td>\r\n                                <td>Sintra</td>\r\n                                <td>1198</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>2</td>\r\n                                <td>Vila Nova de Gaia</td>\r\n                                <td>1025</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>3</td>\r\n                                <td>Vila Franca de Xira</td>\r\n                                <td>2987</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>4</td>\r\n                                <td>Viseu</td>\r\n                                <td>1941</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>5</td>\r\n                                <td>Barcelos</td>\r\n                                <td>1852</td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                        <Table id=\"mostParcelsAreaDist_StatsAdmin\" striped bordered hover>\r\n                            <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Distrito</th>\r\n                                <th>Área total de parcelas (m²)</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            <tr>\r\n                                <td>1</td>\r\n                                <td>Vila Nova de Gaia</td>\r\n                                <td>9524</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>2</td>\r\n                                <td>Viseu</td>\r\n                                <td>9283</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>3</td>\r\n                                <td>Sintra</td>\r\n                                <td>8987</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>4</td>\r\n                                <td>Vila Franca de Xira</td>\r\n                                <td>7745</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>5</td>\r\n                                <td>Barcelos</td>\r\n                                <td>5693</td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n\r\n                <p></p>\r\n                <h2 className=\"rankings-title_StatsAdmin\"> Ranking de concelhos no distrito de: </h2>\r\n\r\n                <Row className=\"rankings-container_StatsAdmin\">\r\n                    <Col>\r\n\r\n                        <Dropdown>\r\n                            <Dropdown.Toggle variant=\"outline-secondary\" id=\"dropdown-rankings_StatsAdmin\">\r\n                                Distrito\r\n                            </Dropdown.Toggle>\r\n\r\n                            <Dropdown.Menu>\r\n                                <Dropdown.Item>Distrito1</Dropdown.Item>\r\n                                <Dropdown.Item>Distrito2</Dropdown.Item>\r\n                                <Dropdown.Item>Distrito3</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n\r\n                        <Table id=\"rankingConcNum_StatsAdmin\" striped bordered hover>\r\n                            <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Concelho</th>\r\n                                <th>Número de parcelas</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            <tr>\r\n                                <td>1</td>\r\n                                <td>Sintra</td>\r\n                                <td>1198</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>2</td>\r\n                                <td>Vila Nova de Gaia</td>\r\n                                <td>1025</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>3</td>\r\n                                <td>Vila Franca de Xira</td>\r\n                                <td>2987</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>4</td>\r\n                                <td>Viseu</td>\r\n                                <td>1941</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>5</td>\r\n                                <td>Barcelos</td>\r\n                                <td>1852</td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n\r\n                    <Col>\r\n\r\n                        <Dropdown>\r\n                            <Dropdown.Toggle variant=\"outline-secondary\" id=\"dropdown-rankings_StatsAdmin\">\r\n                                Distrito\r\n                            </Dropdown.Toggle>\r\n\r\n                            <Dropdown.Menu>\r\n                                <Dropdown.Item>Distrito1</Dropdown.Item>\r\n                                <Dropdown.Item>Distrito2</Dropdown.Item>\r\n                                <Dropdown.Item>Distrito3</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n\r\n                        <Table id=\"rankingConcArea_StatsAdmin\" striped bordered hover>\r\n                            <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Distrito</th>\r\n                                <th>Área total de parcelas (m²)</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            <tr>\r\n                                <td>1</td>\r\n                                <td>Vila Nova de Gaia</td>\r\n                                <td>9524</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>2</td>\r\n                                <td>Viseu</td>\r\n                                <td>9283</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>3</td>\r\n                                <td>Sintra</td>\r\n                                <td>8987</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>4</td>\r\n                                <td>Vila Franca de Xira</td>\r\n                                <td>7745</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>5</td>\r\n                                <td>Barcelos</td>\r\n                                <td>5693</td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n\r\n                <p></p>\r\n                <h2 className=\"rankings-title_StatsAdmin\"> Ranking de freguesias no concelho de: </h2>\r\n\r\n                <Row className=\"rankings-container_StatsAdmin\">\r\n                    <Col>\r\n\r\n                        <Dropdown>\r\n                            <Dropdown.Toggle variant=\"outline-secondary\" id=\"dropdown-rankings_StatsAdmin\">\r\n                                Concelho\r\n                            </Dropdown.Toggle>\r\n\r\n                            <Dropdown.Menu>\r\n                                <Dropdown.Item>Concelho1</Dropdown.Item>\r\n                                <Dropdown.Item>Concelho2</Dropdown.Item>\r\n                                <Dropdown.Item>Concelho3</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n\r\n                        <Table id=\"rankingFregNum_StatsAdmin\" striped bordered hover>\r\n                            <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Freguesia</th>\r\n                                <th>Número de parcelas</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            <tr>\r\n                                <td>1</td>\r\n                                <td>Sintra</td>\r\n                                <td>1198</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>2</td>\r\n                                <td>Vila Nova de Gaia</td>\r\n                                <td>1025</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>3</td>\r\n                                <td>Vila Franca de Xira</td>\r\n                                <td>2987</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>4</td>\r\n                                <td>Viseu</td>\r\n                                <td>1941</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>5</td>\r\n                                <td>Barcelos</td>\r\n                                <td>1852</td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n\r\n                    <Col>\r\n\r\n                        <Dropdown>\r\n                            <Dropdown.Toggle variant=\"outline-secondary\" id=\"dropdown-rankings_StatsAdmin\">\r\n                                Concelho\r\n                            </Dropdown.Toggle>\r\n\r\n                            <Dropdown.Menu>\r\n                                <Dropdown.Item>Concelho1</Dropdown.Item>\r\n                                <Dropdown.Item>Concelho2</Dropdown.Item>\r\n                                <Dropdown.Item>Concelho3</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n\r\n                        <Table id=\"rankingFregArea_StatsAdmin\" striped bordered hover>\r\n                            <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Freguesia</th>\r\n                                <th>Área total de parcelas (m²)</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            <tr>\r\n                                <td>1</td>\r\n                                <td>Vila Nova de Gaia</td>\r\n                                <td>9524</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>2</td>\r\n                                <td>Viseu</td>\r\n                                <td>9283</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>3</td>\r\n                                <td>Sintra</td>\r\n                                <td>8987</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>4</td>\r\n                                <td>Vila Franca de Xira</td>\r\n                                <td>7745</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>5</td>\r\n                                <td>Barcelos</td>\r\n                                <td>5693</td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default StatisticsAdmin;","import \"./ConfirmationPage.css\"\r\n\r\nimport React, {useEffect} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport Image from \"../logo.png\";\r\nimport {Spinner} from \"react-bootstrap\";\r\nimport {useLocation} from \"react-router-dom\";\r\nimport {useState} from \"react\";\r\n\r\n\r\n\r\nconst ConfirmationPage = () => {\r\n    const [confirmed, setConfirmed] = useState(false);\r\n    const search = useLocation().search;\r\n    const name = new URLSearchParams(search).get('id');\r\n    console.log(name);\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://moonlit-oven-349523.appspot.com/rest/register/confirm/\" + name).then(r => setConfirmed(true)).catch( () =>alert(\"yau\"));\r\n    }, [])\r\n\r\n    function body(){\r\n        if(confirmed){\r\n            return(\r\n                <div className=\"bg-img_ConfirmationPage\">\r\n                    <div className=\"report-body_ConfirmationPage\">\r\n                        <br/>\r\n                        <h4 className=\"title_ConfirmationPage\"><b>O seu e-mail foi confirmado com sucesso, pode voltar à pagina inicial.</b></h4>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(<>\r\n                <div className=\"bg-img_ConfirmationPage\">\r\n                    <div className=\"report-body_ConfirmationPage\">\r\n                        <br/>\r\n                        <h4 className=\"title_ConfirmationPage\"><b>A confirmar o seu e-mail, por favor aguarde...</b></h4>\r\n                        <span>\r\n                            <Spinner id=\"spinner_ConfirmationPage\" animation=\"border\" role=\"status\">\r\n                                <span className=\"visually-hidden\">Carregando...</span>\r\n                            </Spinner>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n            </>)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div className=\"home_top\">\r\n\r\n                <div>\r\n                    <Link to=\"/\"><img src={Image} alt=\"E-Floresta Logo\" className=\"home_logo\" /></Link>\r\n                </div>\r\n            </div>\r\n            {body()}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ConfirmationPage","import './Rankings.css'\r\nimport React, { useState } from 'react';\r\nimport Chart from 'chart.js/auto';\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport {Row, Table} from \"react-bootstrap\";\r\n\r\n\r\nconst Rankings = () => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <TopBar />\r\n\r\n            <div className=\"rankings-background\">\r\n\r\n                <p></p>\r\n                <h2 className=\"rankings-title\"> Ranking de utilizadores com mais pontos de confiança </h2>\r\n\r\n                <Row className=\"rankings-container\">\r\n                    <Table id=\"userTrust_Rankings\" striped bordered hover>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Username</th>\r\n                                <th>Pontos de confiança</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>1</td>\r\n                                <td>tigernixon</td>\r\n                                <td>98%</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>2</td>\r\n                                <td>garrettwinters</td>\r\n                                <td>96%</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>3</td>\r\n                                <td>ashtoncox</td>\r\n                                <td>93%</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>4</td>\r\n                                <td>cedrickelly</td>\r\n                                <td>90%</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>5</td>\r\n                                <td>airisatou</td>\r\n                                <td>89%</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n                </Row>\r\n\r\n                <p></p>\r\n                <h2 className=\"rankings-title\"> Ranking de utilizadores com maior área de parcelas </h2>\r\n\r\n                <Row className=\"rankings-container\">\r\n                    <Table id=\"biggerArea_Rankings\" striped bordered hover>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Username</th>\r\n                                <th>Área total das parcelas (m²)</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>1</td>\r\n                                <td>matilda</td>\r\n                                <td>3524</td>\r\n                            </tr>\r\n                                <tr>\r\n                                <td>2</td>\r\n                                <td>cleide</td>\r\n                                <td>3283</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>3</td>\r\n                                <td>cristiano</td>\r\n                                <td>2987</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>4</td>\r\n                                <td>josemiro</td>\r\n                                <td>2745</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>5</td>\r\n                                <td>palmira</td>\r\n                                <td>2693</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n                </Row>\r\n\r\n                <p></p>\r\n                <h2 className=\"rankings-title\"> Ranking de utilizadores com mais parcelas registadas</h2>\r\n\r\n                <Row className=\"rankings-container\">\r\n                    <Table id=\"mostParcels_Rankings\" striped bordered hover>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Username</th>\r\n                                <th>Número total de parcelas</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>1</td>\r\n                                <td>carla</td>\r\n                                <td>70</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>2</td>\r\n                                <td>clotilde</td>\r\n                                <td>62</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>3</td>\r\n                                <td>ambrósio</td>\r\n                                <td>57</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>4</td>\r\n                                <td>gisela</td>\r\n                                <td>51</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>5</td>\r\n                                <td>jurandir</td>\r\n                                <td>45</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n                </Row>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default Rankings;","import \"./RecoverPassword.css\"\r\nimport React, {useEffect} from 'react';\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport Image from \"../logo.png\";\r\nimport {Button, Form, Spinner} from \"react-bootstrap\";\r\nimport {useLocation} from \"react-router-dom\";\r\nimport {useState} from \"react\";\r\n\r\n\r\n\r\nconst RecoverPassword = () => {\r\n    const navigate = useNavigate();\r\n    const search = useLocation().search;\r\n    const name = new URLSearchParams(search).get('id');\r\n    console.log(name);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    /*useEffect(() => {\r\n        fetch(\"https://moonlit-oven-349523.appspot.com/rest/register/confirm/\" + name).then(r => setConfirmed(true)).catch( () =>alert(\"yau\"));\r\n    }, [])*/\r\n\r\n    function showPassword() {\r\n        var x = document.getElementById(\"session-password\");\r\n        if (x.type === \"password\") {\r\n            x.type = \"text\";\r\n        } else {\r\n            x.type = \"password\";\r\n        }\r\n\r\n        var y = document.getElementById(\"session-confirmation\");\r\n        if (y.type === \"password\") {\r\n            y.type = \"text\";\r\n        } else {\r\n            y.type = \"password\";\r\n        }\r\n    }\r\n\r\n    function recoverPassword(){\r\n        let myObj = {newPassword:document.getElementById(\"session-password\").value,\r\n                        confirmation:document.getElementById(\"session-confirmation\").value};\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObj),\r\n        };\r\n\r\n        fetch(\"https://moonlit-oven-349523.appspot.com/rest/login/recoverpassword/\"+name, options)\r\n            .then((r) => {\r\n                if(r.ok){\r\n                    navigate(\"/create-and-login\");\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n            <div className=\"home_top\">\r\n                <div>\r\n                    <Link to=\"/\"><img src={Image} alt=\"E-Floresta Logo\" className=\"home_logo\" /></Link>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"bg-img_RecoverPassword\">\r\n                <div className=\"report-body_RecoverPassword\">\r\n\r\n                    <br/>\r\n                    <h3 className=\"title_RecoverPassword\"><b>Defina a sua nova palavra-passe</b></h3>\r\n                    <br/>\r\n\r\n                    <Form onSubmit={submitHandler}>\r\n\r\n                        <Form.Group className=\"changePassword_RecoverPassword\" >\r\n                            <Form.Label>Escreva a sua nova palavra-passe:</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Nova palavra-passe\" id=\"new-password_RecoverPassword\"/>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"changePassword_RecoverPassword\" >\r\n                            <Form.Label>Confirme a sua nova palavra-passe:</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Nova palavra-Passe\" id=\"confirmation_RecoverPassword\"/>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"checkbox_RecoverPassword\" controlId=\"loginShowPassCheckbox\" >\r\n                            <Form.Check id=\"checkmark-RecoverPassword\" type=\"checkbox\" label=\"Mostrar Palavra-Passe\" onClick={showPassword}/>\r\n                        </Form.Group>\r\n\r\n                        <Button id=\"confirm-button_RecoverPassword\" type=\"submit\" variant=\"success\" onClick={recoverPassword}>\r\n                            Alterar palavra-passe\r\n                        </Button>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RecoverPassword","import './RecoverRequest.css'\r\n\r\nimport React from 'react';\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport Image from \"../logo.png\";\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport {useState} from \"react\";\r\n\r\n\r\n\r\nconst RecoverPassword = () => {\r\n    const [sent, setSent] = useState(false);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    function recoverPassword(){\r\n        fetch(\"https://moonlit-oven-349523.appspot.com/rest/login/forgotpassword/?email=\"+document.getElementById(\"session-email\").value)\r\n            .then((r) => {\r\n                if(r.ok){\r\n                    setSent(true);\r\n                }\r\n            }).catch(console.log);\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n            <div className=\"home_top\">\r\n                <div>\r\n                    <Link to=\"/\"><img src={Image} alt=\"E-Floresta Logo\" className=\"home_logo\" /></Link>\r\n                </div>\r\n            </div>\r\n            {sent?<div>Pedido enviado com sucesso!</div>:\r\n\r\n                <div className=\"bg-img_RecoverRequest\">\r\n                    <div className=\"body_RecoverRequest\">\r\n                        <br/>\r\n                        <h2 className=\"title_RecoverRequest\"><b>Esqueceu a sua palavra-passe?</b></h2>\r\n                        <p className=\"description_RecoverRequest\">Insira o seu e-mail para receber um link de recuperação da sua palavra-passe.</p>\r\n                        <input id=\"email_RecoverRequest\" type=\"email\" placeholder=\"Email\" maxLength=\"64\"/>\r\n                        <Button id=\"button_RecoverRequest\" type=\"submit\" variant=\"success\" onClick={recoverPassword}>\r\n                            Enviar pedido de recuperação\r\n                        </Button>\r\n                    </div>\r\n                    <Form onSubmit={submitHandler}></Form>\r\n                </div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RecoverPassword","import './FindUser.css'\r\nimport TopBar from '../TopBar/TopBar.js'\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport {useRef, useState} from 'react'\r\nimport React from 'react'\r\nimport {Button, Dropdown, Form, Modal} from \"react-bootstrap\";\r\nimport {getAreaOfPolygon, getCenterOfBounds, getDistance, getPathLength, orderByDistance} from \"geolib\";\r\nimport {GoogleMap, Polygon} from \"@react-google-maps/api\";\r\nimport ProfileImage from \"../ChangeProfile/profile_picture.png\";\r\nimport CSVConverter from \"../util/CSVConverter\";\r\n\r\n\r\nconst FindUser = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const [obj, setObj] = useState({});\r\n    const [show, setShow] = useState(false);\r\n    const didMount = useRef(false);\r\n    const csvObj = JSON.parse(localStorage.getItem('csv'));\r\n\r\n\r\n    function findUser(){\r\n        let myObj = {token:localStorage.getItem('token')};\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObj),\r\n        };\r\n        fetch(\"https://moonlit-oven-349523.appspot.com/rest/info/profileinfo/\"+document.getElementById(\"username_finduser\").value, options)\r\n            .then((r) => {\r\n                if(r.ok){\r\n                    r.text().then(t => setObj(JSON.parse(t)))\r\n                }\r\n                else if(r.status === 403) {\r\n                    localStorage.removeItem('token');\r\n                    navigate('/');\r\n                }\r\n                else if(r.status === 404) {\r\n                    alert(\"O utilizador não existe.\");\r\n                }\r\n                else {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n            }).catch(r=>(console.log));\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (didMount.current) setShow(true);\r\n        else didMount.current = true;\r\n    }, [obj]);\r\n\r\n    return(\r\n        <>\r\n            <CSVConverter/>\r\n            <CheckIfLoggedOut />\r\n            <TopBar />\r\n\r\n            <div className=\"bg-img_FindUser\">\r\n                <div className=\"body_FindUser\">\r\n                    <br/>\r\n                    <h2 className=\"title_FindUser\"><b>Encontre um utilizador</b></h2>\r\n                    <p className=\"description_FindUser\">Verifique ou altere a informação de um utilizador</p>\r\n                    <input id=\"username_finduser\" type=\"text\" placeholder=\"Username do utilizador\" maxLength=\"64\"/>\r\n                    <Button onClick={findUser} id=\"button_FindUser\" type=\"button\" className=\"btn btn-success\">Procurar</Button>\r\n                </div>\r\n                <FindUserModal obj={obj} show={show} setShow={setShow} csvObj={csvObj}/>\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nconst FindUserModal = (props) => {\r\n    const handleClose = () => {props.setShow(false);clearStates()};\r\n    const [changeRole, setChangeRole] = useState(false);\r\n    const [changeState, setChangeState] = useState(false);\r\n    let changeInfo = false;\r\n    const [newRole, setNewRole] = useState(\"\");\r\n\r\n    const [distritoOptions, setDistritoOptions] = useState([]);\r\n    const [concelhoOptions, setConcelhoOptions] = useState([]);\r\n    const [freguesiaOptions, setFreguesiaOptions] = useState([]);\r\n    const [distritoValue, setDistritoValue] = useState(\"\");\r\n    const [concelhoValue, setConcelhoValue] = useState(\"\");\r\n    const [freguesiaValue, setFreguesiaValue] = useState(\"\");\r\n\r\n\r\n\r\n\r\n    function handleShow(){\r\n        const distritoList = [];\r\n        const distritos = Object.keys(props.csvObj);\r\n        for(let i = 0; i<distritos.length; i++) {\r\n            distritoList.push(<option>{distritos[i]}</option>)\r\n        }\r\n        setDistritoOptions(distritoList);\r\n        setNewRole(props.obj.role);\r\n    }\r\n\r\n    function clearStates(){\r\n        setChangeState(false);\r\n        setChangeRole(false);\r\n        changeInfo = false;\r\n        setNewRole(props.obj.role);\r\n        setDistritoOptions([]);\r\n        setConcelhoOptions([]);\r\n        setFreguesiaOptions([]);\r\n    }\r\n\r\n    function handleSetDistrito(distrito){\r\n        setDistritoValue(distrito);\r\n        let listC = Object.keys(props.csvObj[distrito]);\r\n\r\n        let list = [];\r\n        for(let i = 0; i<listC.length; i++){\r\n            list.push(<option>{listC[i]}</option>);\r\n        }\r\n        setConcelhoOptions(list);\r\n        setFreguesiaOptions([]);\r\n    }\r\n\r\n    function handleSetConcelho(concelho){\r\n        setConcelhoValue(concelho);\r\n        let listF = Object.keys(props.csvObj[distritoValue][concelho]);\r\n\r\n        let list = [];\r\n        for(let i = 0; i<listF.length; i++){\r\n            list.push(<option>{listF[i]}</option>);\r\n        }\r\n        setFreguesiaOptions(list);\r\n    }\r\n\r\n    function sendRequest(){\r\n        let arr = [];\r\n        if(changeInfo){\r\n            arr.push(sendInfo());\r\n        }\r\n        if(changeState){\r\n            arr.push(sendState());\r\n        }\r\n        if(changeRole){\r\n            arr.push(sendRole());\r\n        }\r\n\r\n        Promise.all(arr).then((r) => {alert(\"Success\"); handleClose(); console.log(r)}).catch((reason) => console.log(reason));\r\n    }\r\n\r\n    async function sendInfo(){\r\n        let myObj = {name:document.getElementById(\"change-complete-name\").value,\r\n                        phone:document.getElementById(\"change-phone\").value,\r\n                        nif:document.getElementById(\"change-nif\").value,\r\n                        token:localStorage.getItem('token')};\r\n\r\n        const options = {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObj),\r\n        };\r\n\r\n        return fetch(\"https://moonlit-oven-349523.appspot.com/rest/modify/info/\" + props.obj.username, options);\r\n    }\r\n\r\n    async function sendState(){\r\n        let myObj = {token:localStorage.getItem('token'),\r\n            newState:document.getElementById(\"state_select\").value};\r\n\r\n        const options = {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObj),\r\n        };\r\n\r\n        return fetch(\"https://moonlit-oven-349523.appspot.com/rest/modify/state/\" + props.obj.username, options);\r\n    }\r\n\r\n    async function sendRole(){\r\n        console.log(concelhoValue);\r\n        let myObj = {token:localStorage.getItem('token'),\r\n            newRole:document.getElementById(\"role_select\").value,\r\n            distrito:distritoValue,\r\n            concelho:concelhoValue,\r\n            freguesia:freguesiaValue};\r\n\r\n        const options = {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObj),\r\n        };\r\n\r\n        return fetch(\"https://moonlit-oven-349523.appspot.com/rest/modify/role/\" + props.obj.username, options);\r\n    }\r\n\r\n\r\n    return <>\r\n        <Modal\r\n            show={props.show}\r\n            onHide={handleClose}\r\n            backdrop=\"static\"\r\n            dialogClassName=\"modal-xl\"\r\n            keyboard={false}\r\n            onShow={handleShow}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title> {props.obj.username} </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"profileInfo_finduser\">\r\n                    <div id=\"email_finduser\">\r\n                        <p className=\"label\"> E-mail: {props.obj.email} </p>\r\n                    </div>\r\n                    <div id=\"name_finduser\">\r\n                        <label className=\"label\"> Nome Completo: </label>\r\n                        <input onChange={() => changeInfo = true} className=\"input-modal_FindUser\" id=\"change-complete-name\" type=\"text\" defaultValue={props.obj.name}/>\r\n                    </div>\r\n                    <div id=\"phone_finduser\">\r\n                        <label className=\"label\"> Telemóvel/Telefone: </label>\r\n                        <input onChange={() => changeInfo = true} className=\"input-modal_FindUser\" id=\"change-phone\" type=\"number\" defaultValue={props.obj.phone} maxLength=\"9\"/>\r\n                    </div>\r\n                    <div id=\"nif_finduser\">\r\n                        <label className=\"label\" htmlFor=\"change-nif\">NIF:</label>\r\n                        <input onChange={() => changeInfo = true}className=\"input-modal_FindUser\" id=\"change-nif\" type=\"number\" defaultValue={props.obj.nif} maxLength=\"9\"/>\r\n                    </div>\r\n                    <div id=\"grade_finduser\">\r\n                        <p className=\"label\"> Nível do utilizador: {props.obj.grade} </p>\r\n                    </div>\r\n                    <div id=\"type_finduser\">\r\n                        <p className=\"label\"> Tipo de utilizador: {props.obj.type} </p>\r\n                    </div>\r\n                    <div id=\"state_finduser\">\r\n                        <p className=\"label\"> Estado do utilizador: {props.obj.state} </p>\r\n                    </div>\r\n                    <div id=\"distrito_finduser\">\r\n                        <p className=\"label\"> Distrito: {props.obj.distrito} </p>\r\n                    </div>\r\n                    <div id=\"concelho_finduser\">\r\n                        <p className=\"label\">Concelho: {props.obj.concelho} </p>\r\n                    </div>\r\n                    <div id=\"freguesia_finduser\">\r\n                        <p className=\"label\"> Freguesia: {props.obj.freguesia} </p>\r\n                    </div>\r\n                    <Form.Check\r\n                        className=\"position-relative mt-3\"\r\n                        type=\"switch\"\r\n                        id=\"custom-switch\"\r\n                        label=\"Atualizar role do user\"\r\n                        onChange={ () => setChangeRole(!changeRole)}\r\n                    />\r\n\r\n                    {changeRole?<Form.Group className=\"mt-3\" controlId=\"role_dropdown_finduser\">\r\n                        <Form.Label> <strong>Role</strong> </Form.Label>\r\n                        <Form.Select onChange={(ce) => setNewRole(ce.target.value)} id=\"role_select\" className=\"map_fields\" defaultValue={props.obj.role}>\r\n                            {localStorage.getItem('role') === 'A1'?<option value=\"A1\">Administrador de Sistema</option>:<></>}\r\n                            <option value=\"A2\">Moderador</option>\r\n                            <option value=\"B1\">Técnico Camara Municipal</option>\r\n                            <option value=\"B2\">Técnico Junta de Freguesia</option>\r\n                            <option value=\"C\">Entidade</option>\r\n                            <option value=\"D\">Utilizador</option>\r\n                        </Form.Select>\r\n                    </Form.Group>:<></>}\r\n\r\n\r\n                    {((String(newRole).includes(\"B\") || newRole === \"C\") && changeRole)?<>\r\n                        <Form.Group className=\"mt-3\" controlId=\"distrito_dropdown_finduser\">\r\n                            <Form.Label> <strong>Distrito</strong> </Form.Label>\r\n                            <Form.Select onChange={(e) => handleSetDistrito(e.target.value)} id=\"role_select\" className=\"map_fields\" defaultValue=\"\">\r\n                                <option disabled={true} value=\"\">-</option>\r\n                                {distritoOptions}\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mt-3\" controlId=\"concelho_dropdown_finduser\">\r\n                            <Form.Label> <strong>Concelho</strong> </Form.Label>\r\n                            <Form.Select onChange={(e) => handleSetConcelho(e.target.value)} id=\"role_select\" className=\"map_fields\" defaultValue=\"\">\r\n                                <option disabled={true} value=\"\">-</option>\r\n                                {concelhoOptions}\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n                    </>:<></>}\r\n\r\n                    {(newRole === \"B2\") && changeRole?<>\r\n                        <Form.Group className=\"mt-3\" controlId=\"freguesia_dropdown_finduser\">\r\n                            <Form.Label> <strong>Freguesia</strong> </Form.Label>\r\n                            <Form.Select onChange={(e) =>setFreguesiaValue(e.target.value)} id=\"role_select\" className=\"map_fields\" defaultValue=\"\">\r\n                                <option disabled={true} value=\"\">-</option>\r\n                                {freguesiaOptions}\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n                    </>:<></>}\r\n\r\n                    <Form.Check\r\n                        className=\"position-relative mt-3\"\r\n                        type=\"switch\"\r\n                        id=\"custom-switch\"\r\n                        label=\"Atualizar estado do user\"\r\n                        onChange={ () => setChangeState(!changeState)}\r\n                    />\r\n\r\n                    {changeState?<Form.Group className=\"mt-3\" controlId=\"state_dropdown_finduser\">\r\n                        <Form.Label> <strong>Estado</strong> </Form.Label>\r\n                        <Form.Select id=\"state_select\" className=\"map_fields\" defaultValue={props.obj.state}>\r\n                            <option value=\"ACTIVE\">Ativo</option>\r\n                            <option value=\"INACTIVE\">Inativo</option>\r\n                        </Form.Select>\r\n                    </Form.Group>:<></>}\r\n\r\n                    <div className=\"btn-group\" id=\"confirmAndCancel_ChangeProfile\">\r\n                        <div id=\"confirmChanges_ChangeProfile\">\r\n                            <Button onClick={sendRequest} className=\"confirm-modal_FindUser\" type=\"button\" variant=\"success\" size=\"sm\">\r\n                                Confirmar Alterações\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal.Body>\r\n        </Modal>\r\n    </>\r\n}\r\n\r\nexport default FindUser","import \"./ReportsTechnician.css\"\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport React, {useEffect, useState} from 'react'\r\nimport {Button, Card, Col, Row, Spinner} from \"react-bootstrap\";\r\nimport {Polygon} from \"@react-google-maps/api\";\r\n\r\n\r\nconst ReportsTechnician = () => {\r\n\r\n    const [requested, setRequested] = useState(false);\r\n    const [reportList, setReportList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"yau?\");\r\n        let myObj = {token:localStorage.getItem('token')};\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObj),\r\n        };\r\n\r\n        fetch(\"https://moonlit-oven-349523.appspot.com/rest/parcel/getreportsAll\", options)\r\n            .then((r) => {\r\n                if(r.ok){\r\n                    r.text().then(t => {\r\n                        let arr = JSON.parse(t);\r\n                        let auxArr = [];\r\n                        for(let i = 0; i<arr.length; i++){\r\n                            auxArr.push(\r\n                                <Row>\r\n                                    <Card border=\"dark\" style={{ width: '85%', cursor: 'pointer'}}>\r\n                                    <Card.Header><b>Autor: {arr[i].sender}</b></Card.Header>\r\n                                    <Card.Header>Prioridade: {arr[i].priority}</Card.Header>\r\n                                    <Card.Body>\r\n                                        <Card.Title>Tópico: {arr[i].topic}</Card.Title>\r\n                                        <p></p>\r\n                                        <Card.Text>\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    <h6> Nome da Parcela: {arr[i].parcelName}</h6>\r\n                                                    <h6> Distrito: {arr[i].distrito}</h6>\r\n                                                    <h6> Concelho: {arr[i].concelho}</h6>\r\n                                                    <h6> Freguesia: {arr[i].freguesia}</h6>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <h6>{arr[i].message}</h6>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Card.Text>\r\n                                    </Card.Body>\r\n                                    <Card.Footer>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <Button onClick={() => reviewReport(arr[i].reportID, \"POSITIVE\")} id=\"confirm-report_ReportsTechnician\">Confirmar</Button>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Button onClick={() => reviewReport(arr[i].reportID, \"NEUTRAL\")} id=\"ignore-report_ReportsTechnician\">Ignorar</Button>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Button onClick={() => reviewReport(arr[i].reportID, \"NEGATIVE\")} id=\"decline-report_ReportsTechnician\">Rejeitar</Button>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Card.Footer>\r\n                                </Card>\r\n                            </Row>)\r\n                        }\r\n                        setReportList(auxArr);\r\n                    })\r\n                }\r\n            }).catch(console.log);\r\n    }, [])\r\n\r\n    function reviewReport(reportID, opinion){\r\n        let myObj = {token:localStorage.getItem('token'),\r\n                        opinion:opinion};\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObj),\r\n        };\r\n\r\n        fetch(\"https://moonlit-oven-349523.appspot.com/rest/parcel/review/\"+reportID, options)\r\n            .then((r) => {\r\n                if(r.ok){\r\n                    alert(\"Success\");\r\n                    window.location.reload();\r\n                }\r\n            }).catch(()=>(console.log));\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <TopBar />\r\n\r\n            <div className=\"ReportsTechnicianBody\">\r\n                {requested? <Spinner id=\"spinner_ConfirmationPage\" variant=\"success\" animation=\"border\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Carregando...</span>\r\n                </Spinner> : reportList}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReportsTechnician","import \"./MakeReport.css\"\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport React from 'react'\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport {Link, useLocation, useNavigate} from \"react-router-dom\";\r\n\r\nconst MakeReport = () => {\r\n    const search = useLocation().search;\r\n    const name = new URLSearchParams(search).get('id');\r\n    const navigate = useNavigate();\r\n    function sendReport(){\r\n        let myObj = {token:localStorage.getItem('token'),\r\n                        topic:document.getElementById(\"topic_MakeReport\").value,\r\n                        text:document.getElementById(\"msg_MakeReport\").value};\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObj),\r\n        };\r\n\r\n        fetch(\"https://moonlit-oven-349523.appspot.com/rest/parcel/report/\"+name, options)\r\n            .then((r) => {\r\n                if(r.ok){\r\n                    alert(\"success!\");\r\n                    navigate(\"/\");\r\n                }\r\n                else if(r.status === 400) {\r\n                    alert(\"Todos os campos devem ser preenchidos.\");\r\n                }\r\n                else if(r.status === 403){\r\n                    localStorage.removeItem('token');\r\n                    navigate('/');\r\n                }\r\n                else if(r.status === 404){\r\n                    alert(\"Utilizador ou parcela não existe.\");\r\n                }\r\n                else {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n            }).catch(console.log);\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n    }\r\n    return(\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <TopBar />\r\n\r\n            <div className=\"bg-img_MakeReport\">\r\n                <div className=\"report-body_MakeReport\">\r\n\r\n                    <br/>\r\n                    <h2 className=\"title_MakeReport\"><b>Reporte uma parcela</b></h2>\r\n                    <p className=\"description_MakeReport\">Acha que algo está errado? Conte-nos o problema. <br/>\r\n                        A sua contribuição ajuda-nos a melhorar o funcionamento do site!</p>\r\n\r\n                    <Form onSubmit={submitHandler} >\r\n\r\n                        <Form.Group controlId=\"makereport_topic\" className=\"report-parcel-form\" >\r\n                            <Form.Label>Tópico do problema (descrição breve):</Form.Label>\r\n                            <Form.Control required type=\"text\" placeholder=\"Tópico\" id=\"topic_MakeReport\" maxLength=\"64\"/>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"makereport_text\" className=\"report-parcel-form\" >\r\n                            <Form.Label>Descreva o problema:</Form.Label>\r\n                            <Form.Control required as=\"textarea\" rows={4} placeholder=\"Mensagem\" id=\"msg_MakeReport\" maxLength=\"512\"/>\r\n                        </Form.Group>\r\n\r\n                        <Button id=\"submit_MakeReport\" variant=\"success\" type=\"submit\" onClick={sendReport}>\r\n                            Submeter\r\n                        </Button>\r\n\r\n                        <Link to=\"/homepage\">\r\n                            <Button variant=\"secondary\" id=\"cancel_MakeReport\">\r\n                                Cancelar\r\n                            </Button>\r\n                        </Link>\r\n\r\n                    </Form>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MakeReport","import './UploadCSV.css'\r\nimport TopBar from '../TopBar/TopBar.js'\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport React from 'react'\r\nimport {Button, Form} from \"react-bootstrap\";\r\n\r\nconst UploadCSV = () => {\r\n    return(\r\n        <>\r\n\r\n            <CheckIfLoggedOut />\r\n            <TopBar />\r\n\r\n            <div className=\"bg-img_UploadCSV\">\r\n                <div className=\"body_UploadCSV\">\r\n                    <br/>\r\n                    <h2 className=\"title_UploadCSV\"><b>Carregar um ficheiro CSV</b></h2>\r\n                    <br/>\r\n                    <Form>\r\n                        <Form.Group className=\"file-input_UploadCSV\">\r\n                            <Form.Label>Introduza aqui o seu ficheiro CSV (deverá ser do tipo .txt):</Form.Label>\r\n                            <Form.Control type=\"file\" accept = \".txt\" size=\"lg\" />\r\n                        </Form.Group>\r\n                        <Button id=\"button_UploadCSV\" type=\"button\" className=\"btn btn-success\">Carregar ficheiro</Button>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default UploadCSV","import './Error404.css'\r\nimport React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport Image from \"../logo.png\";\r\nimport Image1 from \"./icon.png\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\n\r\nconst Error404 = () => {\r\n\r\n    return(\r\n        <>\r\n          {localStorage.getItem('token') === null?\r\n          <div className=\"home_top\">\r\n            <div>\r\n                <Link to=\"/\"><img src={Image} alt=\"E-Floresta Logo\" className=\"home_logo\" /></Link>\r\n            </div>\r\n          </div>\r\n          :\r\n          <>\r\n              <CheckIfLoggedOut />\r\n              <TopBar />\r\n          </>\r\n          }\r\n\r\n          <div className=\"bg-img_Error404\">\r\n            <div className=\"body_Error404\">\r\n                <br/>\r\n                <img src={Image1} alt=\"E-Floresta Ícone\" className=\"icon_Error404\" />\r\n                <br/>\r\n                <h1 className=\"title_Error404\"><b>Esta página não foi encontrada</b></h1>\r\n                <h3 className=\"description_Error404\">Ups! Algo deu errado... A página que procura não existe.</h3>\r\n                <br/>\r\n\r\n                {localStorage.getItem('token') === null ?\r\n                    <Link to=\"/\">\r\n                        <Button type=\"button\" id=\"button_Error404\" className=\"btn btn-success\"> Voltar à página inicial </Button>\r\n                    </Link>\r\n                    :\r\n                    <Link to=\"/homepage\">\r\n                        <Button type=\"button\" id=\"button_Error404\" className=\"btn btn-success\"> Voltar à página inicial </Button>\r\n                    </Link>\r\n                }\r\n            </div>\r\n          </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Error404","import Image from './logo.png'\r\n\r\nimport './App.css'\r\nimport CreateAndLogin from './CreateAndLogin/CreateAndLogin'\r\nimport Profile from './Profile/Profile'\r\nimport LoggedHomepage from \"./LoggedHomepage/LoggedHomepage\"\r\nimport ChangeProfile from \"./ChangeProfile/ChangeProfile\"\r\nimport AboutUs from \"./AboutUs/AboutUs\"\r\nimport RegisterParcel from './RegisterParcel/RegisterParcel'\r\nimport CheckIfLoggedIn from './util/CheckIfLoggedIn'\r\nimport ChangePassword from \"./ChangePassword/ChangePassword\";\r\nimport MyParcels from \"./MyParcels/MyParcels\";\r\nimport MapAdmin from \"./MapAdmin/MapAdmin\";\r\nimport ProposedParcelsEntity from \"./ProposedParcelsEntity/ProposedParcelsEntity\";\r\nimport ParcelsEntity from \"./ParcelsEntity/ParcelsEntity\";\r\nimport ApproveParcels from \"./ApproveParcels/ApproveParcels\";\r\nimport ApproveParcelsAdmin from \"./ApproveParcelsAdmin/ApproveParcelsAdmin\";\r\nimport AllParcels from \"./AllParcels/AllParcels\";\r\nimport AllParcelsAdmin from \"./AllParcelsAdmin/AllParcelsAdmin\";\r\nimport Statistics from \"./Statistics/Statistics\";\r\nimport StatisticsEntity from \"./StatisticsEntity/StatisticsEntity\";\r\nimport StatisticsAdmin from \"./StatisticsAdmin/StatisticsAdmin\";\r\nimport ConfirmationPage from \"./ConfirmationPage/ConfirmationPage\";\r\nimport Rankings from \"./Rankings/Rankings\";\r\nimport RecoverPassword from \"./RecoverPassword/RecoverPassword\";\r\nimport RecoverRequest from \"./RecoverPassword/RecoverRequest\";\r\nimport FindUser from \"./FindUser/FindUser\";\r\nimport ReportsTechnician from \"./ReportsTechnician/ReportsTechnician\";\r\nimport MakeReport from \"./MakeReport/MakeReport\";\r\nimport UploadCSV from \"./UploadCSV/UploadCSV\";\r\nimport Error404 from \"./ErrorsPages/Error404\";\r\n\r\n\r\nimport Front_img from \"./front_img.jpg\";\r\nimport React, { Component }  from 'react';\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes, Route, Link\r\n} from \"react-router-dom\"\r\n\r\n\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n      <Router>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home />} />\r\n          <Route path=\"/create-and-login\" element={<CreateAndLogin />} />\r\n          <Route path=\"/map\" element={<RegisterParcel />} />\r\n          <Route path=\"/map-admin\" element={<MapAdmin />} />\r\n          <Route path=\"/profile\" element={<Profile />} />\r\n          <Route path=\"/homepage\" element={<LoggedHomepage />} />\r\n          <Route path=\"/change-profile\" element={<ChangeProfile />} />\r\n          <Route path=\"/change-password\" element={<ChangePassword />} />\r\n          <Route path=\"/about-us\" element={<AboutUs />} />\r\n          <Route path=\"/my-parcels\" element={<MyParcels />} />\r\n          <Route path=\"/proposed-parcels-entity\" element={<ProposedParcelsEntity />} />\r\n          <Route path=\"/parcels-entity\" element={<ParcelsEntity />} />\r\n          <Route path=\"/approve-parcels\" element={<ApproveParcels />} />\r\n          <Route path=\"/approve-parcels-admin\" element={<ApproveParcelsAdmin />} />\r\n          <Route path=\"/all-parcels\" element={<AllParcels />} />\r\n          <Route path=\"/all-parcels-admin\" element={<AllParcelsAdmin />} />\r\n          <Route path=\"/statistics\" element={<Statistics />} />\r\n          <Route path=\"/statistics-entity\" element={<StatisticsEntity />} />\r\n          <Route path=\"/statistics-admin\" element={<StatisticsAdmin />} />\r\n          <Route path=\"/confirmation\" element={<ConfirmationPage />} />\r\n          <Route path=\"/recover\" element={<RecoverPassword />} />\r\n          <Route path=\"/recover-request\" element={<RecoverRequest />} />\r\n          <Route path=\"/rankings\" element={<Rankings />} />\r\n          <Route path=\"/find-user\" element={<FindUser />} />\r\n          <Route path=\"/reports-technician\" element={<ReportsTechnician />} />\r\n          <Route path=\"/make-report\" element={<MakeReport />} />\r\n          <Route path=\"/upload-csv\" element={<UploadCSV />} />\r\n          <Route path=\"/error404\" element={<Error404 />} />\r\n        </Routes>\r\n      </Router>\r\n  )\r\n}\r\n\r\nconst Home = () => {\r\n  return (\r\n      <>\r\n        <CheckIfLoggedIn />\r\n\r\n        <div className=\"home_top\">\r\n\r\n          <div>\r\n            <Link to=\"/\"><img src={Image} alt=\"E-Floresta Logo\" className=\"home_logo\" /></Link>\r\n          </div>\r\n\r\n          <div className=\"home_button\">\r\n            <Link to=\"/create-and-login\">\r\n              <Button id=\"topButton_Home\" type=\"button\">Login | Criar Conta</Button>\r\n            </Link>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"home_body\">\r\n\r\n            <div className=\"hero-image_Home\">\r\n                <div className=\"hero-text_Home\">\r\n                    <h1><b>E-Floresta</b></h1>\r\n                    <p>Registe as suas parcelas de forma rápida e fácil</p>\r\n                    <Link to=\"/create-and-login\">\r\n                        <Button id=\"button-hero_Home\" variant=\"dark\">Comece já</Button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"text_Home\">\r\n                <div>\r\n                    <h1>\r\n                        O que é o projeto E-Floresta?\r\n                    </h1>\r\n\r\n                    O interior de Portugal está a viver um processo de desertificação populacional provocado pelo movimento\r\n                    dos mais jovens para o litoral e pelo envelhecimento da população com graves consequências económicas,\r\n                    sociais e ambientais. Em particular, a gestão da floresta torna-se incomportável, dando origem a perdas\r\n                    económicas e ambientais resultantes dos incêndios florestais. Assim, a autarquia de Mação pretende\r\n                    reordenar o seu território liderando uma iniciativa que promove a gestão integrada dos terrenos florestais\r\n                    para ganhar escala e reduzir custos. <p> Esta plataforma web permite registar a adesão voluntária dos proprietários\r\n                    a esta iniciativa comunitária e, posteriormente, seguir a sua gestão em termos de custos e proveitos. </p>\r\n                </div>\r\n                <div>\r\n                    <img src={Front_img}/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n      </>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\n\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom/client'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.createRoot(document.getElementById('root')).render(<App />)","module.exports = __webpack_public_path__ + \"static/media/logo.e6484752.png\";","module.exports = __webpack_public_path__ + \"static/media/profile_picture.9acfe78b.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.e6484752.png\";","module.exports = __webpack_public_path__ + \"static/media/icon.0d293af7.png\";","module.exports = __webpack_public_path__ + \"static/media/front_img.b7ac53e9.jpg\";"],"sourceRoot":""}