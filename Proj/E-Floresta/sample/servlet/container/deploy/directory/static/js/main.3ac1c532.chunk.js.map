{"version":3,"sources":["ErrorsPages/icon.png","front_img.jpg","util/CheckIfLoggedOut.js","util/CSVConverter.js","CreateAndLogin/CreateAndLogin.js","TopBar/TopBar.js","util/CheckIfActive.js","Profile/Profile.js","LoggedHomepage/LoggedHomepage.js","ChangeProfile/ChangeProfile.js","AboutUs/AboutUs.js","Map/Map.js","RegisterParcel/RegisterParcel.js","util/CheckIfLoggedIn.js","ChangePassword/ChangePassword.js","util/ParcelDetailsModal/ParcelDetailsModal.js","util/ParcelEditModal/ParcelEditModal.js","util/ParcelNearbyModal/ParcelNearbyModal.js","MyParcels/MyParcels.js","ProposedParcelsEntity/ProposedParcelsEntity.js","ParcelsEntity/ParcelsEntity.js","ApproveParcels/ApproveParcels.js","ApproveParcelsAdmin/ApproveParcelsAdmin.js","AllParcels/AllParcels.js","AllParcelsAdmin/AllParcelsAdmin.js","util/Statistics/PieChartStatistics.js","util/Statistics/NumberStatistics.js","Statistics/Statistics.js","StatisticsEntity/StatisticsEntity.js","StatisticsTechnician/StatisticsTechnician.js","util/Statistics/PieChartLocationStatistics.js","util/Statistics/NumberLocationStatistics.js","util/Statistics/RankingListStatistics.js","StatisticsAdmin/StatisticsAdmin.js","ConfirmationPage/ConfirmationPage.js","Rankings/Rankings.js","RecoverPassword/RecoverPassword.js","RecoverPassword/RecoverRequest.js","FindUser/FindUser.js","ReportsTechnician/ReportsTechnician.js","MakeReport/MakeReport.js","FAQ/FAQ.js","FAQUnlogged/FAQUnlogged.js","WaitForVerif/WaitForVerif.js","ErrorsPages/Error404.js","App.js","index.js","logo.png","ChangeProfile/profile_picture.png","CreateAndLogin/logo.png","Profile/profile_picture.png","TopBar/logo.png"],"names":["module","exports","__webpack_require__","p","CheckIfLoggedOut","navigate","useNavigate","React","useEffect","token","localStorage","getItem","role","state","console","log","react_default","a","createElement","Fragment","expirationTime","CSVConverter","checkCSV","xmlhttp","XMLHttpRequest","Date","now","parseInt","onreadystatechange","readyState","status","json","csv","lines","split","obj","i","length","currentline","distrito","hasOwnProperty","concelho","freguesia","dicofre","JSON","stringify","csvJSON","responseText","setItem","toString","removeItem","alert","myObj","myJson","open","setRequestHeader","send","CreateAndLogin","_useState","useState","_useState2","Object","slicedToArray","type","setType","parse","distritos","keys","distritoList","push","_useState3","_useState4","concelhoOptions","setConcelhoOptions","submitHandler","e","preventDefault","util_CSVConverter","className","react_router_dom","to","src","Image","alt","Form","onSubmit","Group","Control","placeholder","id","maxLength","controlId","Check","label","onClick","x","document","getElementById","Button","atob","password","value","href","required","Text","Select","onChange","event","target","defaultValue","listC","list","handleSetDistrito","disabled","confirmation","email","name","phone","nif","TopBar","LogoImage","ButtonGroup","size","includes","Dropdown","Toggle","Menu","Item","CheckIfActive","Profile","username","setUsername","setEmail","_useState5","_useState6","setName","_useState7","_useState8","setPhone","_useState9","_useState10","setNif","_useState11","_useState12","_useState13","_useState14","setState","_useState15","_useState16","grade","setGrade","util_CheckIfLoggedOut","util_CheckIfActive","src_TopBar_TopBar","ProfileImage","Badge","bg","userGrade","LoggedHomepage","variant","parcelsButton","ChangeProfile","htmlFor","AboutUs","Row","Col","Card","style","width","Body","Title","window","google","containerStyle","height","center","lat","lng","options","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeWeight","clickable","draggable","editable","geodesic","zIndex","memo","request","setRequest","search","useLocation","queryCoords","URLSearchParams","get","useGeoFile","setUseGeoFile","file","setFile","documentState","setDocument","markerList","setMarker","paths","setPaths","area","setArea","perimeter","setPerimeter","_useState17","_useState18","setDistrito","_useState19","_useState20","_useState21","_useState22","freguesiaOptions","setFreguesiaOptions","addMarker","concat","esm","key","position","icon","path","maps","SymbolPath","CIRCLE","scale","getPathLength","getDistance","Math","round","getAreaOfPolygon","googleMapsApiKey","mapContainerStyle","zoom","tilt","ev","latLng","onLoad","queryCoordsObj","arr2","importQuery","Number","filter","element","index","f","url","append","_step","_iterator","_createForOfIteratorHelper","entries","s","n","done","pair","err","submitParcel","FormData","Label","listF","handleSetConcelho","accept","files","reader","FileReader","readAsText","onload","evt","result","coordinates","coordinateList","arr1","loadGeojson","Spinner","animation","RegisterParcel","src_Map_Map","CheckIfLoggedIn","ChangePassword","oldPassword","newPassword","modalContainerStyle","ParcelDetailsModal","props","setObj","centerLoc","setCenterLoc","setZoom","Modal","onShow","owner","show","onHide","setShow","backdrop","dialogClassName","keyboard","Header","closeButton","latitude","longitude","centerPoint","getCenterOfBounds","arr","orderByDistance","mostDistant","dist","pow","undefined","manager","section","article","cover","usage","oldUsage","description","documentURL","photoURL","auxArr","geometry","mapCoordinates","filename","text","setAttribute","encodeURIComponent","display","body","appendChild","click","removeChild","download","optionsSecondary","ParcelEditModal","managerValue","setmanagerValue","setmanagerRequestValue","changedInfo","setChangedInfo","info","setInfo","showSelects","setShowSelects","_useState23","_useState24","managerList","setManager","didMount","useRef","current","_sendNewInfo","asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","sendInfo","sendDocument","sendPhoto","sendCoordinates","Promise","all","then","location","reload","catch","stop","apply","this","arguments","_sendInfo","_callee2","_context2","method","headers","Content-Type","abrupt","fetch","_x","_sendDocument","_callee3","formData","_context3","_x2","_sendPhoto","_callee4","photo","_context4","_x3","_sendCoordinates","_callee5","_context5","myObjManager","r","ok","managersObj","managerRequest","removeManager","removeRequest","isApproved","managerName","sendManagerRequest","for","as","rows","deleteParcel","nearbyOptions","nearbyHoverOptions","ParcelNearbyModal","mapRef","setMapRef","nearbyParcels","setNearbyParcels","infoWindow","setInfoWindow","parcelName","t","_loop","ref","polygon","onMouseOver","setOptions","onMouseOut","onCloseClick","addInfoWindow","m","onCenterChanged","getCenter","MyParcels","requested","setRequested","editShow","setEditShow","nearbyShow","setNearbyShow","parcelList","setPList","pathsArr","verified","cursor","Img","pill","title","handleShow","handleEditShow","handleNearbyShow","util_ParcelDetailsModal_ParcelDetailsModal","util_ParcelEditModal_ParcelEditModal","util_ParcelNearbyModal_ParcelNearbyModal","ProposedParcelsEntity","parcel","addManager","ParcelsEntity","ApproveParcels","approveParcel","rejectParcel","ApproveParcelsAdmin","objCSV","distritoValue","concelhoValue","freguesiaValue","AllParcels","optionsPoly","AllParcelsAdmin","PieChartStatistics","labelList","setLabelList","dataList","setDataList","dataOptions","labels","datasets","backgroundColor","borderColor","borderWidth","data","auxLabelList","auxDataList","react_chartjs_2_dist","responsive","NumberStatistics","setResult","Statistics","Statistics_NumberStatistics","Statistics_PieChartStatistics","StatisticsEntity","StatisticsTechnician","PieChartLocationStatistics","setConcelho","setFreguesia","labelListDistrito","setLabelListDistrito","dataListDistrito","setDataListDistrito","requestDistrito","setRequestDistrito","dataOptionsDistrito","labelListConcelho","setLabelListConcelho","dataListConcelho","setDataListConcelho","requestConcelho","setRequestConcelho","dataOptionsConcelho","labelListFreguesia","setLabelListFreguesia","_useState25","_useState26","dataListFreguesia","setDataListFreguesia","_useState27","_useState28","requestFreguesia","setRequestFreguesia","dataOptionsFreguesia","handlesetFreguesia","NumberLocationStatistics","distritoResult","setDistritoResult","concelhoResult","setConcelhoResult","freguesiaResult","setFreguesiaResult","RankingListStatistics","labelA","labelB","auxResult","Table","striped","bordered","hover","StatisticsAdmin","Statistics_NumberLocationStatistics","Statistics_PieChartLocationStatistics","Statistics_RankingListStatistics","ConfirmationPage","confirmed","setConfirmed","Rankings","RecoverPassword","y","sent","setSent","FindUserModal","handleClose","setChangeState","setChangeRole","changeInfo","setNewRole","setDistritoOptions","changeRole","changeState","newRole","distritoOptions","setDistritoValue","setConcelhoValue","setFreguesiaValue","FindUser_regeneratorRuntime","_sendState","newState","_sendRole","csvObj","ce","String","sendState","sendRole","reason","FindUser","FindUser_FindUserModal","ReportsTechnician","reportList","setReportList","reviewReport","reportID","opinion","border","sender","priority","topic","message","Footer","MakeReport","FAQ","Accordion","eventKey","FAQUnlogged","WaitForVerif","Error404","Image1","Home","util_CheckIfLoggedIn","Front_img","App","react_router","App_Home","src_CreateAndLogin_CreateAndLogin","src_RegisterParcel_RegisterParcel","src_Profile_Profile","src_LoggedHomepage_LoggedHomepage","src_ChangeProfile_ChangeProfile","src_ChangePassword_ChangePassword","src_AboutUs_AboutUs","src_MyParcels_MyParcels","src_ProposedParcelsEntity_ProposedParcelsEntity","src_ParcelsEntity_ParcelsEntity","src_ApproveParcels_ApproveParcels","src_ApproveParcelsAdmin_ApproveParcelsAdmin","src_AllParcels_AllParcels","src_AllParcelsAdmin_AllParcelsAdmin","src_Statistics_Statistics","src_StatisticsEntity_StatisticsEntity","src_StatisticsTechnician_StatisticsTechnician","src_StatisticsAdmin_StatisticsAdmin","src_ConfirmationPage_ConfirmationPage","src_RecoverPassword_RecoverPassword","RecoverPassword_RecoverRequest","src_Rankings_Rankings","src_FindUser_FindUser","src_ReportsTechnician_ReportsTechnician","src_MakeReport_MakeReport","src_FAQ_FAQ","src_FAQUnlogged_FAQUnlogged","src_WaitForVerif_WaitForVerif","exact","src_ErrorsPages_Error404","ReactDOM","createRoot","render","src_App_0"],"mappings":"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","file":"static/js/main.3ac1c532.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.0d293af7.png\";","module.exports = __webpack_public_path__ + \"static/media/front_img.aefd083a.jpg\";","import React, {Component, useEffect} from 'react';\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {getAreaOfPolygon, getDistance, getPathLength} from \"geolib\";\r\n\r\nconst CheckIfLoggedOut = () => {\r\n    const navigate = useNavigate();\r\n\r\n\r\n    React.useEffect(() => {\r\n        let token = localStorage.getItem('token');\r\n        let role = localStorage.getItem('role');\r\n        let state = localStorage.getItem('state');\r\n        if(token == null || role == null || state == null) {\r\n            console.log(\"logout\")\r\n            //O utilizador nao tem um token valido, logo nao tem acesso as pags que precisam de login para lhes aceder\r\n            navigate('/');}\r\n    }, []);\r\n\r\n    return(\r\n        <></>\r\n    )\r\n}\r\n\r\nexport default CheckIfLoggedOut","import React, {Component, useEffect} from 'react';\r\nimport {useNavigate} from \"react-router-dom\";\r\n//import csv from \"./teste.csv\";\r\n\r\nconst expirationTime = 1000*60*60*24*7;\r\n\r\nconst CSVConverter = () => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    function checkCSV() {\r\n\r\n        let xmlhttp = new XMLHttpRequest();\r\n        console.log(Date.now());\r\n        console.log(parseInt(localStorage.getItem('csvTime')));\r\n\r\n        if(localStorage.getItem(\"csv\") === null || localStorage.getItem(\"csvTime\") === null || (Date.now() > parseInt(localStorage.getItem('csvTime')))){\r\n            xmlhttp.onreadystatechange = function () {\r\n                if (xmlhttp.readyState === 4) {\r\n                    if (xmlhttp.status === 200) {\r\n                        let csv = xmlhttp.responseText;\r\n                        let json = csvJSON(csv);\r\n                        localStorage.setItem('csv', json);\r\n                        localStorage.setItem('csvTime', (Date.now() + expirationTime).toString());\r\n                    } else if (xmlhttp.status === 403) {\r\n                        localStorage.removeItem('token');\r\n                        navigate('/');\r\n                    } else {\r\n                        alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                    }\r\n                }\r\n            }\r\n\r\n            var myObj = { token: localStorage.getItem('token') };\r\n            var myJson = JSON.stringify(myObj);\r\n\r\n            xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/getCSV\", false);\r\n            xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n            xmlhttp.send(myJson);\r\n        }\r\n    }\r\n\r\n     function  csvJSON(csv){\r\n\r\n        let lines=csv.split(\"\\n\");\r\n        let obj = {};\r\n\r\n\r\n        for(let i=1;i<lines.length-1;i++){\r\n            let currentline=lines[i].split(\";\");\r\n\r\n            let distrito = currentline[1];\r\n            if(!obj.hasOwnProperty(distrito)){\r\n                obj[distrito] = {};\r\n            }\r\n\r\n            let concelho = currentline[2];\r\n            if(!obj[distrito].hasOwnProperty(concelho)){\r\n                obj[distrito][concelho] = {};\r\n            }\r\n\r\n            let freguesia = currentline[3];\r\n            obj[distrito][concelho][freguesia] ={\r\n                dicofre:freguesia = currentline[4]\r\n            }\r\n        }\r\n\r\n        return JSON.stringify(obj);\r\n    }\r\n\r\n    useEffect(() =>\r\n    {\r\n        checkCSV();\r\n    }, [])\r\n\r\n    return(\r\n        <></>\r\n    )\r\n}\r\n\r\n\r\nexport default CSVConverter","import Image from './logo.png'\r\nimport './CreateAndLogin.css'\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport CheckIfLoggedIn from \"../util/CheckIfLoggedOut\";\r\nimport {Button, Form, InputGroup} from \"react-bootstrap\";\r\nimport React, {Component, useState} from 'react';\r\nimport CSVConverter from \"../util/CSVConverter\";\r\n\r\n\r\nconst CreateAndLogin = () => {\r\n  const navigate = useNavigate()\r\n  const [type, setType] = useState(\"personal\");\r\n  let xmlhttp = new XMLHttpRequest();\r\n  let token;\r\n\r\n  const obj = JSON.parse(localStorage.getItem('csv'));\r\n  const distritos = Object.keys(obj);\r\n  const distritoList = [];\r\n  for(let i = 0; i<distritos.length; i++) {\r\n    distritoList.push(<option>{distritos[i]}</option>)\r\n  }\r\n\r\n  const [concelhoOptions, setConcelhoOptions] = useState([]);\r\n\r\n  function handleSetDistrito(distrito){\r\n    let listC = Object.keys(obj[distrito]);\r\n\r\n    let list = [];\r\n    for(let i = 0; i<listC.length; i++){\r\n      list.push(<option>{listC[i]}</option>);\r\n    }\r\n    setConcelhoOptions(list);\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n  }\r\n\r\n\r\n  function login() {\r\n\r\n    xmlhttp.onreadystatechange = function () {\r\n      if (xmlhttp.readyState === 4) {\r\n        if (xmlhttp.status === 200) {\r\n          token = xmlhttp.responseText;\r\n          let obj = JSON.parse(atob(token.split(\".\")[1]));\r\n          console.log(obj);\r\n          alert(\"Login efetuado com sucesso.\");\r\n\r\n          localStorage.setItem('token', token);\r\n          localStorage.setItem('role', obj[\"role\"]);\r\n          localStorage.setItem('state', obj[\"state\"]);\r\n          navigate('/homepage');\r\n        } else if(xmlhttp.status === 403) {\r\n          alert(\"O username ou a password introduzidas estão erradas.\");\r\n        }\r\n        else if(xmlhttp.status === 404) {\r\n          alert(\"O username introduzido não existe.\");\r\n        }\r\n        else if(xmlhttp.status === 500) {\r\n          alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n        }\r\n        else {\r\n          alert(\"Não foi possível efetuar o login.\");\r\n        }\r\n        console.log(xmlhttp.status);\r\n      }\r\n    }\r\n\r\n    let myObj = { password: document.getElementById(\"session-password\").value };\r\n    let myJson = JSON.stringify(myObj);\r\n\r\n    xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/login/\" + document.getElementById(\"session-username\").value, true);\r\n    xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n    xmlhttp.send(myJson);\r\n  }\r\n\r\n  function showPassword() {\r\n    var x = document.getElementById(\"session-password\");\r\n    if (x.type === \"password\") {\r\n      x.type = \"text\";\r\n    } else {\r\n      x.type = \"password\";\r\n    }\r\n  }\r\n\r\n  function register() {\r\n    xmlhttp.onreadystatechange = function() {\r\n      if(xmlhttp.readyState === 4) {\r\n        if(xmlhttp.status === 200){\r\n          token = xmlhttp.responseText;\r\n          let obj = JSON.parse(atob(token.split(\".\")[1]));\r\n          console.log(obj);\r\n          alert(\"Registo efetuado com sucesso.\");\r\n          localStorage.setItem('token', token);\r\n          localStorage.setItem('role', obj[\"role\"]);\r\n          localStorage.setItem('state', 'INACTIVE');\r\n          navigate('/homepage');\r\n        } else if(xmlhttp.status === 400) {\r\n          alert(\"Todos os campos obrigatórios devem ser preenchidos corretamente.\");\r\n        } else if(xmlhttp.status === 409) {\r\n          alert(\"Utilizador ou e-mail já registado.\");\r\n        } else if(xmlhttp.status === 500) {\r\n          alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n        } else {\r\n          alert(\"Não foi possível registar o utilizador.\");\r\n        }\r\n      }\r\n    }\r\n\r\n    let myObj;\r\n\r\n    if(type === 'personal'){\r\n      myObj = { password:document.getElementById(\"create-acc-pass\").value,\r\n                confirmation:document.getElementById(\"create-acc-conf-pass\").value,\r\n                email:document.getElementById(\"create-acc-email\").value,\r\n                name:document.getElementById(\"create-acc-name\").value,\r\n                phone:document.getElementById(\"create-acc-phone\").value,\r\n                nif:document.getElementById(\"create-acc-nif\").value};\r\n    }\r\n    else{\r\n      myObj = { password:document.getElementById(\"create-acc-pass\").value,\r\n        confirmation:document.getElementById(\"create-acc-conf-pass\").value,\r\n        email:document.getElementById(\"create-acc-email\").value,\r\n        name:document.getElementById(\"create-acc-name\").value,\r\n        phone:document.getElementById(\"create-acc-phone\").value,\r\n        nif:document.getElementById(\"create-acc-nif\").value,\r\n        distrito:document.getElementById(\"create_form_distrito\").value,\r\n        concelho:document.getElementById(\"create_form_concelho\").value};\r\n    }\r\n\r\n    let myJson = JSON.stringify(myObj);\r\n\r\n    xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/register/\"+ type +\"/\" + document.getElementById(\"create-acc-user\").value, true);\r\n    xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n    xmlhttp.send(myJson);\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <CSVConverter/>\r\n      <div className=\"cl_top\">\r\n\r\n        <div>\r\n          <Link to=\"/\"><img src={Image} alt=\"E-Floresta Logo\" className=\"cl_logo\" /></Link>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div className=\"bg-img\">\r\n\r\n        <div className=\"session-body\">\r\n\r\n          <div className=\"initiate-session\">\r\n\r\n            <h2 className=\"align-content\"><b>Iniciar Sessão</b></h2>\r\n\r\n            <Form onSubmit={submitHandler}>\r\n              <Form.Group className=\"session-form\" >\r\n                <Form.Control type=\"text\" placeholder=\"Nome de utilizador\" id=\"session-username\" maxLength=\"64\"/>\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"session-form\" >\r\n                <Form.Control type=\"password\" placeholder=\"Palavra-Passe\" id=\"session-password\" maxLength=\"64\"/>\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"checkbox-container\" controlId=\"loginShowPassCheckbox\" >\r\n                <Form.Check id=\"checkmark-login\" type=\"checkbox\" label=\"Mostrar Palavra-Passe\" onClick={showPassword}/>\r\n              </Form.Group>\r\n\r\n              <Button id=\"session-button\" type=\"submit\" onClick={login}>\r\n                Entrar\r\n              </Button>\r\n            </Form>\r\n\r\n            <p></p>\r\n            <span className=\"forgot-pass_Login\">Esqueceu a sua palavra-passe? <a  href=\"/recover-request\">Clique aqui.</a></span>\r\n\r\n          </div>\r\n\r\n          <div className=\"division\"> </div>\r\n\r\n          <div className=\"create-account\">\r\n\r\n            <h2 className=\"align-content\"><b>Registe-se</b></h2>\r\n            <p className=\"align-content\">Ainda não tem conta? Registe-se agora!</p>\r\n\r\n            <Form onSubmit={submitHandler}>\r\n              <Form.Group className=\"create-form\" >\r\n                <Form.Control required type=\"text\" placeholder=\"Nome de utilizador\" id=\"create-acc-user\" maxLength=\"64\"/>\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"create-form\" >\r\n                <Form.Control required type=\"email\" placeholder=\"E-mail\" id=\"create-acc-email\" maxLength=\"64\"/>\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"create-form\" >\r\n                <Form.Control required type=\"text\" placeholder=\"Nome Completo\" id=\"create-acc-name\" maxLength=\"64\"/>\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"create-form-special-outside\" >\r\n                <Form.Control className=\"create-form-special-inside\"  required type=\"password\" placeholder=\"Palavra-Passe\" id=\"create-acc-pass\" maxLength=\"64\"/>\r\n                <Form.Text className=\"text-muted\">\r\n                  Deve conter no mínimo 6 caracteres.\r\n                </Form.Text>\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"create-form\" >\r\n                <Form.Control required type=\"password\" placeholder=\"Confirmar Palavra-Passe\" id=\"create-acc-conf-pass\" maxLength=\"64\"/>\r\n              </Form.Group>\r\n\r\n              <p className=\"green-text\"><b>Campos opcionais:</b></p>\r\n\r\n              <Form.Group className=\"create-form\" >\r\n                <Form.Control placeholder=\"Telemóvel/Telefone\" maxLength=\"9\" id=\"create-acc-phone\" />\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"create-form\" >\r\n                <Form.Control placeholder=\"NIF\" maxLength=\"9\" id=\"create-acc-nif\" />\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"mt-2\" controlId=\"create_form\">\r\n                <Form.Select onChange={(event) => setType(event.target.value)}  defaultValue={\"personal\"} className=\"map_fields\">\r\n                  <option value=\"personal\">Pessoal</option>\r\n                  <option value=\"entity\">Entidade</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n\r\n              {type === 'entity'?<><Form.Group className=\"mt-3\" controlId=\"create_form_distrito\">\r\n                                  <Form.Select defaultValue='' onChange={(event) => handleSetDistrito(event.target.value)} className=\"map_fields\">\r\n                                    <option disabled={true} value=''>Distrito</option>\r\n                                    {distritoList}\r\n                                  </Form.Select>\r\n                                </Form.Group>\r\n                              <Form.Group className=\"mt-3\" controlId=\"create_form_concelho\">\r\n                                <Form.Select className=\"map_fields\">\r\n                                  {concelhoOptions}\r\n                                </Form.Select>\r\n                              </Form.Group></>:<></>}\r\n              <br/>\r\n              <Button id=\"create-acc-button\" type=\"submit\" onClick={register}>\r\n                Registar\r\n              </Button>\r\n\r\n            </Form>\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CreateAndLogin","import LogoImage from './logo.png'\r\nimport './TopBar.css'\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport {Button, ButtonGroup, Dropdown} from \"react-bootstrap\";\r\nimport React from 'react';\r\n\r\nconst TopBar = () => {\r\n    const navigate = useNavigate();\r\n    const role = localStorage.getItem('role') != null?localStorage.getItem('role'):'MISSING';\r\n    return (\r\n        <div className=\"topBar_top\">\r\n\r\n            <div>\r\n                <Link to=\"/homepage\"><img src={LogoImage} alt=\"E-Floresta Logo\" className=\"topBar_logo\"/></Link>\r\n            </div>\r\n\r\n            <ButtonGroup className=\"buttons_TopBar\" size=\"lg\">\r\n                <Link to=\"/homepage\">\r\n                    <Button id=\"option1\">Página Inicial</Button>\r\n                </Link>\r\n\r\n                {role.includes(\"A\")?\r\n                    <Dropdown>\r\n                        <Dropdown.Toggle className=\"dropdown_TopBar\">\r\n                            Parcelas\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu className=\"dropdown-parcels-content_TopBar\">\r\n                            <Dropdown.Item onClick={() => navigate(\"/map\")}><b>Registar Parcela</b></Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => navigate(\"/all-parcels-admin\")}><b>Visualizar Parcelas</b></Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => navigate(\"/approve-parcels-admin\")}><b>Aprovar Parcelas</b></Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                 : <></>}\r\n\r\n                {role.includes(\"B\")?\r\n                    <Dropdown>\r\n                        <Dropdown.Toggle className=\"dropdown_TopBar\">\r\n                            Parcelas\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu className=\"dropdown-parcels-content_TopBar\">\r\n                            <Dropdown.Item onClick={() => navigate(\"/map\")}><b>Registar Parcela</b></Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => navigate(\"/all-parcels\")}><b>Visualizar Parcelas</b></Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => navigate(\"/approve-parcels\")}><b>Aprovar Parcelas</b></Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    : <></>}\r\n\r\n                {role === 'D' ? <Link to=\"/map\">\r\n                    <Button id=\"option2\">Registar Parcela</Button>\r\n                </Link> : <></>}\r\n\r\n\r\n                {role === 'D' ? <Link to=\"/my-parcels\">\r\n                    <Button id=\"option3\">Minhas Parcelas</Button>\r\n                </Link> : <></>}\r\n\r\n                {role === 'C' ? <Link to=\"/parcels-entity\">\r\n                    <Button id=\"option5\">Minhas Parcelas</Button>\r\n                </Link> : <></>}\r\n\r\n\r\n                {role === 'C' ? <Link to=\"/proposed-parcels-entity\">\r\n                    <Button id=\"option6\">Parcelas Pendentes</Button>\r\n                </Link> : <></>}\r\n\r\n\r\n                {role.includes('A') || role.includes('B') ? <Link to=\"/reports-technician\">\r\n                    <Button id=\"option13\">Denúncias</Button>\r\n                </Link> : <></>}\r\n\r\n\r\n                {role.includes('A') ? <Link to=\"/find-user\">\r\n                    <Button id=\"option19\">Encontrar Utilizador</Button>\r\n                </Link> : <></>}\r\n\r\n\r\n                {role.includes('D') ? <Link to=\"/statistics\">\r\n                    <Button id=\"option9\">Estatísticas</Button>\r\n                </Link> : <></>}\r\n\r\n                {role === 'C' ? <Link to=\"/statistics-entity\">\r\n                    <Button id=\"option11\">Estatísticas</Button>\r\n                </Link> : <></>}\r\n\r\n                {role.includes('B') ? <Link to=\"/statistics-technician\">\r\n                    <Button id=\"option14\">Estatísticas</Button>\r\n                </Link> : <></>}\r\n\r\n                {role.includes('A') ? <Link to=\"/statistics-admin\">\r\n                    <Button id=\"option12\">Estatísticas</Button>\r\n                </Link> : <></>}\r\n\r\n\r\n                <Link to=\"/rankings\">\r\n                    <Button id=\"option10\">Rankings</Button>\r\n                </Link>\r\n\r\n                <Link to=\"/faq\">\r\n                    <Button id=\"option20\">FAQ</Button>\r\n                </Link>\r\n\r\n                <Link to=\"/about-us\">\r\n                    <Button id=\"option4\">Sobre Nós</Button>\r\n                </Link>\r\n            </ButtonGroup>\r\n\r\n\r\n            <Dropdown className=\"my-account-dropdown_TopBar\">\r\n                <Dropdown.Toggle className=\"dropdown_TopBar\">\r\n                    A Minha Conta\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu className=\"dropdown-content_TopBar\">\r\n                    <Dropdown.Item onClick={() => navigate(\"/profile\")}>Perfil</Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => {localStorage.removeItem('token'); localStorage.removeItem('role'); localStorage.removeItem('state'); navigate(\"/\")}}><b>Encerrar sessão</b></Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopBar","import React, { Component }  from 'react';\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {getAreaOfPolygon, getDistance, getPathLength} from \"geolib\";\r\n\r\nconst CheckIfActive = () => {\r\n    const navigate = useNavigate();\r\n\r\n    React.useEffect(() => {\r\n        let state = localStorage.getItem('state');\r\n        if(state == null){\r\n            console.log(\"state null\")\r\n            localStorage.removeItem('token');\r\n            navigate('/');\r\n        }\r\n        if(state !== 'ACTIVE') {\r\n            console.log(\"nactive\");\r\n            //O utilizador nao tem uma conta ativa\r\n            localStorage.removeItem('token');\r\n            localStorage.removeItem('state');\r\n            navigate('/wait-for-verif');\r\n        }\r\n    }, []);\r\n\r\n    return(\r\n        <></>\r\n    )\r\n}\r\n\r\nexport default CheckIfActive","import  './Profile.css'\r\nimport ProfileImage from './profile_picture.png'\r\nimport TopBar from '../TopBar/TopBar.js'\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport { useState } from 'react'\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport React, {useEffect} from 'react'\r\nimport {Badge} from \"react-bootstrap\";\r\nimport CheckIfActive from \"../util/CheckIfActive\";\r\n\r\nconst Profile = () => {\r\n    const navigate = useNavigate();\r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [nif, setNif] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    const [state, setState] = useState(\"\");\r\n    const [grade, setGrade] = useState(\"\");\r\n\r\n\r\n    let xmlhttp = new XMLHttpRequest();\r\n\r\n    //Permite correr a funcao quando a pagina e carregada\r\n    useEffect(() => {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState === 4) {\r\n                if (xmlhttp.status === 200) {\r\n                    const obj = JSON.parse(xmlhttp.responseText);\r\n                    setUsername(obj.username);\r\n                    setEmail(obj.email)\r\n                    setName(obj.name);\r\n                    setPhone(obj.phone);\r\n                    setNif(obj.nif);\r\n                    setType(obj.type);\r\n                    setState(obj.state);\r\n                    setGrade(obj.grade);\r\n                } else if(xmlhttp.status === 403 ||xmlhttp.status === 404) {\r\n                    alert(\"Não tem permissões para efetuar esta operação.\");\r\n                    localStorage.removeItem(\"token\");\r\n                    navigate(\"/\");\r\n                }\r\n                else if(xmlhttp.status === 500) {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n                else {\r\n                    alert(\"Não foi possível obter informação.\");\r\n                }\r\n            }\r\n        }\r\n\r\n        var myObj = {token:localStorage.getItem('token')};\r\n        var myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/info/profileinfo\");\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }, [])\r\n\r\n\r\n    function userGrade(grade) {\r\n        if(grade === 1) {\r\n            return(\r\n                <Badge className=\"badge_Profile\" bg=\"danger\">1</Badge>\r\n            )\r\n        }\r\n        else if(grade === 2) {\r\n            return(\r\n                <Badge className=\"badge_Profile\" id=\"badge-2_Profile\" bg=\"warning\">2</Badge>\r\n            )\r\n        }\r\n        else if(grade === 3){\r\n            return(\r\n                <Badge className=\"badge_Profile\" bg=\"info\">3</Badge>\r\n            )\r\n        }\r\n        else if(grade === 4){\r\n            return(\r\n                <Badge className=\"badge_Profile\" bg=\"primary\">4</Badge>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <Badge className=\"badge_Profile\" bg=\"success\">5</Badge>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <CheckIfActive />\r\n            <TopBar />\r\n\r\n            <div className=\"bg-img_Profile\">\r\n                <div className=\"profile_info\">\r\n                    <img src={ProfileImage} alt=\"Profile picture\" className=\"profile_pic\"/>\r\n                    <p></p>\r\n                    <div id=\"username\">\r\n                        <p className=\"label_Profile\"><b>Username: </b> {username}</p>\r\n                    </div>\r\n                    <div id=\"email\">\r\n                        <p className=\"label_Profile\"><b>E-mail: </b> {email}</p>\r\n                    </div>\r\n                    <div id=\"name\">\r\n                        <p className=\"label_Profile\"><b>Nome Completo: </b> {name}</p>\r\n                    </div>\r\n                    <div id=\"phone\">\r\n                        <p className=\"label_Profile\"><b>Telemóvel/Telefone: </b> {phone===\"\"? \"Indefinido\":phone}</p>\r\n                    </div>\r\n                    <div id=\"nif\">\r\n                        <p className=\"label_Profile\"><b>NIF: </b> {nif===\"\"? \"Indefinido\":nif}</p>\r\n                    </div>\r\n                    <div id=\"grade\">\r\n                        <p className=\"label_Profile\"><b>Nota: </b> {userGrade(grade)}</p>\r\n                    </div>\r\n                    <div id=\"state\">\r\n                        <p className=\"label_Profile\"><b>Estado: </b> {state}</p>\r\n                    </div>\r\n                    <div id=\"type\">\r\n                        <p className=\"label_Profile\"><b>Tipo de utilizador: </b> {type}</p>\r\n                    </div>\r\n\r\n                    <div className=\"btn-group\" id=\"change-profile-info\">\r\n                        <div id=\"changeProfileInfo_Profile\">\r\n                            <Link to=\"/change-profile\">\r\n                                <button type=\"button\" id=\"changeProfileButton_Profile\" className=\"btn btn-secondary btn-sm\">Editar Perfil</button>\r\n                            </Link>\r\n                        </div>\r\n\r\n                        <div id=\"changePassword_Profile\">\r\n                            <button onClick={ () => navigate(\"/change-password\")} type=\"button\" id=\"changePasswordButton_Profile\"\r\n                                    className=\"btn btn-warning btn-sm\">Alterar Palavra-Passe</button>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Profile","import  './LoggedHomepage.css'\r\nimport TopBar from '../TopBar/TopBar.js'\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport {Button, Carousel, Modal} from \"react-bootstrap\";\r\nimport {GoogleMap, LoadScript, Polygon} from \"@react-google-maps/api\";\r\nimport React, { Component }  from 'react';\r\nimport CSVConverter from \"../util/CSVConverter\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport CheckIfActive from \"../util/CheckIfActive\";\r\n\r\nconst LoggedHomepage = () => {\r\n    const navigate = useNavigate();\r\n    let role = localStorage.getItem('role');\r\n    console.log(role);\r\n\r\n    function registerButton(){\r\n        if(role === 'D'){\r\n            navigate(\"/map\");\r\n        }\r\n        else if(role.includes(\"A\") || role.includes(\"B\")){\r\n            navigate(\"/map-admin\");\r\n        }\r\n    }\r\n\r\n    function parcelsButton(){\r\n        switch (role) {\r\n            case 'D':\r\n                navigate(\"/my-parcels\");\r\n                break;\r\n            case 'C':\r\n                navigate(\"/parcels-entity\");\r\n                break;\r\n            case 'B':\r\n                navigate(\"/all-parcels\");\r\n                break;\r\n            case 'A':\r\n                navigate(\"/all-parcels-admin\");\r\n                break;\r\n        }\r\n    }\r\n\r\n    function statisticsButton(){\r\n        if(role === 'D'){\r\n            navigate(\"/statistics\");\r\n        }\r\n        else if(role === \"C\"){\r\n            navigate(\"/statistics-entity\");\r\n        }\r\n        else if(role.includes(\"B\")){\r\n            navigate(\"/statistics-technician\");\r\n        }\r\n        else if(role.includes(\"A\")){\r\n            navigate(\"/statistics-admin\");\r\n        }\r\n    }\r\n\r\n    function faqButton(){\r\n        navigate(\"/faq\");\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <CheckIfActive />\r\n            <TopBar />\r\n\r\n            <CSVConverter/>\r\n\r\n            <div className=\"lgh_body\">\r\n\r\n                <div className=\"hero-register_LoggedHome\">\r\n                    <div className=\"hero-register-text_LoggedHome\">\r\n                        <h1><b>Registe as suas parcelas</b></h1>\r\n                        No nosso site é possível registar as suas parcelas de forma rápida e fácil. <br/>\r\n                        Clique na aba \"Registar Parcelas\". Clique no mapa para desenhar o seu terreno e marcar <br/>\r\n                        os seus limites e registe as informações respetivas ao mesmo do lado direito, preenchendo <br/>\r\n                        e selecionando os campos exigidos. Por fim, clique em Submeter. <br/>\r\n                        <p></p>\r\n                            <Button onClick={() => registerButton()} variant=\"dark\">Registe já</Button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"hero-myParcels_LoggedHome\">\r\n                    <div className=\"hero-myParcels-text_LoggedHome\">\r\n                        <h1><b>Verifique as suas parcelas</b></h1>\r\n                        O site E-Floresta permite-lhe guardar toda a informação sobre os seus terrenos num único sítio,<br/>\r\n                        para um acesso rápido e fácil. Clique na aba \"Minhas Parcelas\". O mapa do lado esquerdo contém <br/>\r\n                        marcados todos os seus terrenos registados. Do lado direito, existe um cartão para cada uma das <br/>\r\n                        propriedades registadas. Clique em \"Detalhes\" para ver todas as informações sobre uma parcela. <br/>\r\n                        Clique em \"Editar\" para alterar alguma informação sobre a parcela em causa. <br/>\r\n                        <p></p>\r\n                        <Link to=\"/my-parcels\">\r\n                            <Button onClick={() => parcelsButton()} variant=\"dark\">Verifique as suas parcelas</Button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"hero-stats_LoggedHome\">\r\n                    <div className=\"hero-stats-text_LoggedHome\">\r\n                        <h1><b>Estatísticas personalizadas</b></h1>\r\n                        O E-Floresta possui estatísticas personalizadas sobre as suas parcelas registadas para facilitar <br/>\r\n                        ainda mais a organização e o gerenciamento dos seus terrenos. Para lhes aceder, clique na aba \"Estatísticas\". <br/>\r\n                        <p></p>\r\n                        <Link to=\"/statistics\">\r\n                            <Button onClick={() => statisticsButton()} variant=\"dark\">Veja as estatísticas</Button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"hero-faq_LoggedHome\">\r\n                    <div className=\"hero-faq-text_LoggedHome\">\r\n                        <h1><b>Dúvidas sobre o site?</b></h1>\r\n                        O nosso site possui uma área onde reunimos algumas das dúvidas mais comuns relativamente <br/>\r\n                        ao funcionamento do mesmo. Talvez alguma das suas perguntas esteja respondido nessa área. <br/>\r\n                        Para lhe aceder, clique na aba \"FAQ\". <br/>\r\n                        <p></p>\r\n                        <Link to=\"/faq\">\r\n                            <Button onClick={() => faqButton()} variant=\"dark\">Perguntas frequentes</Button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoggedHomepage\r\n","import React, {useEffect} from 'react'\r\nimport  './ChangeProfile.css'\r\nimport TopBar from '../TopBar/TopBar.js'\r\nimport ProfileImage from \"./profile_picture.png\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport {Badge, Button} from \"react-bootstrap\";\r\nimport {useState} from \"react\";\r\nimport CheckIfActive from \"../util/CheckIfActive\";\r\n\r\nconst ChangeProfile = () => {\r\n    const navigate = useNavigate();\r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [nif, setNif] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n\r\n    let xmlhttp = new XMLHttpRequest();\r\n\r\n    useEffect(() => {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState === 4) {\r\n                if (xmlhttp.status === 200) {\r\n                    const obj = JSON.parse(xmlhttp.responseText);\r\n                    setUsername(obj.username);\r\n                    setEmail(obj.email)\r\n                    setName(obj.name);\r\n                    setPhone(obj.phone);\r\n                    setNif(obj.nif);\r\n                    setType(obj.type);\r\n                } else if(xmlhttp.status === 403 || xmlhttp.status === 404) {\r\n                    alert(\"Não tem permissões para efetuar esta operação.\");\r\n                    localStorage.removeItem(\"token\");\r\n                    navigate(\"/\");\r\n                }\r\n                else if (xmlhttp.status === 500){\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n                else {\r\n                    alert(\"Não foi possível obter informação.\");\r\n                }\r\n            }\r\n        }\r\n\r\n        var myObj = {token:localStorage.getItem('token')};\r\n        var myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/info/profileinfo\");\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }, [])\r\n\r\n\r\n    function changeProfile() {\r\n\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState === 4) {\r\n                if (xmlhttp.status === 200) {\r\n                    alert(\"Informação alterada com sucesso.\");\r\n                    navigate(\"/profile\");\r\n                } else if(xmlhttp.status === 403 ||xmlhttp.status === 404) {\r\n                    alert(\"Não tem permissões para efetuar esta operação.\");\r\n                    localStorage.removeItem(\"token\");\r\n                    navigate(\"/\");\r\n                }\r\n                else {\r\n                    console.log(xmlhttp.status);\r\n                    alert(\"Não foi possível obter informação.\");\r\n                }\r\n            }\r\n        }\r\n\r\n        var myObj = {name:document.getElementById(\"change-complete-name\").value,\r\n            phone:document.getElementById(\"change-phone\").value,\r\n            nif:document.getElementById(\"change-nif\").value,\r\n            token:localStorage.getItem('token')\r\n        };\r\n\r\n        var myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"PUT\", \"https://moonlit-oven-349523.appspot.com/rest/modify/info/\"+username);\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <CheckIfActive />\r\n            <TopBar />\r\n\r\n            <div className=\"bg-img_ChangeProfile\">\r\n                <div className=\"profileInfo_ChangeProfile\">\r\n                    <img src={ProfileImage} alt=\"Profile picture\" className=\"profile_pic\"/>\r\n                    <p></p>\r\n                    <div id=\"username_ChangeProfile\">\r\n                        <p className=\"label_ChangeProfile\"><b>Username: </b> {username} </p>\r\n                    </div>\r\n                    <div id=\"email_ChangeProfile\">\r\n                        <p className=\"label_ChangeProfile\"><b>E-mail: </b> {email} </p>\r\n                    </div>\r\n                    <div id=\"name_ChangeProfile\">\r\n                        <label className=\"label_ChangeProfile\"><b>Nome Completo: </b> </label>\r\n                        <input id=\"change-complete-name\" type=\"text\" defaultValue={name} maxLength=\"64\"/>\r\n                    </div>\r\n                    <div id=\"phone_ChangeProfile\">\r\n                        <label className=\"label_ChangeProfile\"><b>Telemóvel/Telefone: </b></label>\r\n                        <input id=\"change-phone\" type=\"number\" defaultValue={phone} maxLength=\"9\"/>\r\n                    </div>\r\n                    <div id=\"nif_ChangeProfile\">\r\n                        <label className=\"label_ChangeProfile\" htmlFor=\"change-nif\"><b>NIF: </b></label>\r\n                        <input id=\"change-nif\" type=\"number\" defaultValue={nif} maxLength=\"9\"/>\r\n                    </div>\r\n                    <div id=\"type_ChangeProfile\">\r\n                        <p className=\"label_ChangeProfile\"> <b>Tipo de utilizador: </b> {type} </p>\r\n                    </div>\r\n\r\n                    <div className=\"btn-group\" id=\"confirmAndCancel_ChangeProfile\">\r\n                        <div id=\"confirmChanges_ChangeProfile\">\r\n                            <Button type=\"button\" className=\"btn btn-success btn-sm\" onClick={changeProfile}>Confirmar\r\n                                Alterações</Button>\r\n                        </div>\r\n\r\n                        <div id=\"cancelChanges_ChangeProfile\">\r\n                            <Link to=\"/profile\">\r\n                                <Button type=\"button\" className=\"btn btn-secondary btn-sm\">Cancelar Alterações </Button>\r\n                            </Link>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default ChangeProfile","import  './AboutUs.css'\r\nimport TopBar from '../TopBar/TopBar.js'\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport React, { Component }  from 'react';\r\nimport {Card, Col, Row} from \"react-bootstrap\";\r\nimport CheckIfActive from \"../util/CheckIfActive\";\r\n\r\nconst AboutUs = () => {\r\n    return(\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <CheckIfActive />\r\n            <TopBar />\r\n\r\n            <div className=\"bg-img_AboutUs\">\r\n                <div className=\"body_AboutUs\">\r\n                    <div className=\"title_AboutUs\">\r\n                        <br/>\r\n                        <h1><b>Equipa Portugal É Floresta!</b></h1>\r\n                    </div>\r\n\r\n                    <div className=\"initial-text_AboutUs\">\r\n                        <p>\r\n                            O interior de Portugal está a viver um processo de desertificação populacional provocado pelo movimento\r\n                            dos mais jovens para o litoral e pelo envelhecimento da população com graves consequências económicas,\r\n                            sociais e ambientais.\r\n                        </p>\r\n                        <p>\r\n                            Em particular, a gestão da floresta torna-se incomportável, dando origem a perdas\r\n                            económicas e ambientais resultantes dos incêndios florestais. Assim, a autarquia de Mação pretende\r\n                            reordenar o seu território liderando uma iniciativa que promove a gestão integrada dos terrenos florestais\r\n                            para ganhar escala e reduzir custos.\r\n                        </p>\r\n                        <p> Com vista a resolver este problema, criamos esta plataforma web: E-Floresta, que permite registar a adesão voluntária\r\n                            dos proprietários a esta iniciativa comunitária e, posteriormente, seguir a sua gestão em termos de custos e proveitos.\r\n                        </p>\r\n                    </div>\r\n\r\n                    <div className=\"title2_AboutUs\">\r\n                        <br/>\r\n                        <h1><b>Membros da Equipa</b></h1>\r\n                        <br/>\r\n                    </div>\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            <Card style={{ width: '21rem' }}>\r\n                                <h3 id=\"card1-name_AboutUs\"><b>Martim Gouveia</b></h3>\r\n                                <Card.Body>\r\n                                    <Card.Title id=\"card-title_AboutUs\">3º Ano de Engenharia Informática</Card.Title>\r\n                                    <p id=\"card-p_AboutUs\">Nova School Of Science & Technology</p>\r\n                                    <Card.Text id=\"card1-text_AboutUs\">Email: ms.gouveia@campus.fct.unl.pt</Card.Text>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card style={{ width: '21rem' }}>\r\n                                <h3 id=\"card2-name_AboutUs\"><b>Raquel Melo</b></h3>\r\n                                <Card.Body>\r\n                                    <Card.Title id=\"card-title_AboutUs\">3º Ano de Engenharia Informática</Card.Title>\r\n                                    <p id=\"card-p_AboutUs\">Nova School Of Science & Technology</p>\r\n                                    <Card.Text id=\"card2-text_AboutUs\">Email: rc.melo@campus.fct.unl.pt</Card.Text>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default AboutUs","import React from 'react'\r\nimport {GoogleMap, LoadScript} from '@react-google-maps/api';\r\nimport {Marker} from '@react-google-maps/api';\r\nimport {useState} from 'react'\r\nimport {Polygon} from '@react-google-maps/api';\r\nimport \"./Map.css\"\r\nimport {Button, Form, Spinner} from \"react-bootstrap\";\r\nimport {getAreaOfPolygon, getDistance, getPathLength} from 'geolib';\r\nimport CSVConverter from \"../util/CSVConverter\";\r\nimport {useLocation, useNavigate} from \"react-router-dom\";\r\n\r\nconst google = window.google;\r\nconst containerStyle = {\r\n    width: '75vw',\r\n    height: 'calc(100vh - 60px)'\r\n};\r\n\r\nconst center = {\r\n    lat: 38.660677,\r\n    lng: -9.205971\r\n};\r\n\r\nconst options = {\r\n    fillColor: \"Khaki\",\r\n    fillOpacity: 0.3,\r\n    strokeColor: \"DarkOrange\",\r\n    strokeOpacity: 1,\r\n    strokeWeight: 2,\r\n    clickable: false,\r\n    draggable: false,\r\n    editable: false,\r\n    geodesic: false,\r\n    zIndex: 1\r\n}\r\n\r\n\r\nconst Map = () => {\r\n    const [request, setRequest] = useState(false);\r\n    const role = localStorage.getItem('role');\r\n    const search = useLocation().search;\r\n    const queryCoords = new URLSearchParams(search).get('coords');\r\n    const navigate = useNavigate();\r\n    const obj = JSON.parse(localStorage.getItem('csv'));\r\n    const distritos = Object.keys(obj);\r\n    const distritoList = [];\r\n    for(let i = 0; i<distritos.length; i++) {\r\n        distritoList.push(<option>{distritos[i]}</option>)\r\n    }\r\n\r\n    const [useGeoFile, setUseGeoFile] = useState(false);\r\n    const [file, setFile] = useState();\r\n    const [documentState, setDocument] = useState();\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData(e.target);\r\n        submitParcel(formData);\r\n    }\r\n\r\n    const [markerList, setMarker] = useState([]);\r\n    const [paths, setPaths] = useState([]);\r\n    const [area, setArea] = useState(0);\r\n    const [perimeter, setPerimeter] = useState(0);\r\n\r\n    const [distrito, setDistrito] = useState(\"\");\r\n    const [concelhoOptions, setConcelhoOptions] = useState([]);\r\n    const [freguesiaOptions, setFreguesiaOptions] = useState([]);\r\n\r\n\r\n    function handleSetDistrito(distrito){\r\n        setDistrito(distrito);\r\n        let listC = Object.keys(obj[distrito]);\r\n\r\n        let list = [];\r\n        for(let i = 0; i<listC.length; i++){\r\n            list.push(<option>{listC[i]}</option>);\r\n        }\r\n        setConcelhoOptions(list);\r\n        setFreguesiaOptions([]);\r\n    }\r\n\r\n    function handleSetConcelho(concelho){\r\n        console.log(obj);\r\n        console.log(distrito);\r\n        console.log(concelho);\r\n        let listF = Object.keys(obj[distrito][concelho]);\r\n\r\n        let list = [];\r\n        for(let i = 0; i<listF.length; i++){\r\n            list.push(<option>{listF[i]}</option>);\r\n        }\r\n        setFreguesiaOptions(list);\r\n    }\r\n\r\n    function loadGeojson(file){\r\n        setMarker([]);\r\n        setPaths([]);\r\n        const google = window.google;\r\n\r\n        let reader = new FileReader();\r\n        reader.readAsText(file, \"UTF-8\");\r\n        reader.onload = function (evt) {\r\n            let obj = JSON.parse(evt.target.result);\r\n            console.log(evt.target.result);\r\n            if(obj.type !== \"Polygon\"){\r\n                alert(\"Formato inválido\");\r\n                return null;\r\n            }\r\n            if(obj.coordinates.length > 1){\r\n                alert(\"Formato inválido\");\r\n                return null;\r\n            }\r\n\r\n            let coordinateList = obj.coordinates[0];\r\n\r\n\r\n            let arr1 = [];\r\n            let arr2 = [];\r\n            for(let i = 0; i<coordinateList.length-1; i++){\r\n                arr1.push(<Marker key={markerList.length} id={markerList.length}\r\n                                                    position={{\r\n                                                        lat: coordinateList[i][0],\r\n                                                        lng: coordinateList[i][1]\r\n                                                    }}\r\n                                                    icon={{\r\n                                                        path: google.maps.SymbolPath.CIRCLE,\r\n                                                        fillColor: \"#ff8000\",\r\n                                                        fillOpacity: 1.0,\r\n                                                        strokeWeight: 0,\r\n                                                        scale: 5\r\n                                                    }}/>)\r\n                arr2.push({\r\n                    lat: coordinateList[i][0],\r\n                    lng: coordinateList[i][1]\r\n                });\r\n            }\r\n            setMarker(arr1);\r\n            setPaths(arr2);\r\n        }\r\n    }\r\n\r\n\r\n    React.useEffect(() => {\r\n        setPerimeter(getPathLength(paths) + (paths.length>1 ? getDistance(paths[paths.length-1], paths[0]) : 0));\r\n        setArea(Math.round(getAreaOfPolygon(paths)));\r\n    }, [paths]);\r\n\r\n\r\n\r\n    function importQuery(){\r\n        if(queryCoords != null){\r\n            try {\r\n                const queryCoordsObj = JSON.parse(atob(queryCoords));\r\n                let arr2 = [];\r\n                for(let i = 0; i<queryCoordsObj.length-1; i++){\r\n                    arr2.push({\r\n                        lat: queryCoordsObj[i].lat,\r\n                        lng: queryCoordsObj[i].lng\r\n                    });\r\n                }\r\n                setPaths(arr2);\r\n            }\r\n            catch (e){\r\n                console.log(e);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function addMarker(lat, lng) {\r\n        const google = window.google;\r\n\r\n        console.log(lat, lng);\r\n\r\n        setMarker(markerList.concat(<Marker key={markerList.length} id={markerList.length}\r\n                                            position={{\r\n                                                lat: lat,\r\n                                                lng: lng\r\n                                            }}\r\n                                            icon={{\r\n                                                path: google.maps.SymbolPath.CIRCLE,\r\n                                                fillColor: \"#ff8000\",\r\n                                                fillOpacity: 1.0,\r\n                                                strokeWeight: 0,\r\n                                                scale: 5\r\n                                            }}/>))\r\n\r\n        setPaths(paths.concat({\r\n            lat: lat,\r\n            lng: lng\r\n        }));\r\n    }\r\n\r\n\r\n    function rollback() {\r\n        setMarker(markerList.filter((element, index) => index < markerList.length - 1));\r\n        setPaths(paths.filter((element, index) => index < paths.length - 1));\r\n    }\r\n\r\n    function submitParcel(f) {\r\n        let xmlhttp = new XMLHttpRequest();\r\n\r\n        xmlhttp.onreadystatechange = function() {\r\n            if (xmlhttp.readyState === 4) {\r\n                if (xmlhttp.status === 200) {\r\n                    alert(\"Parcela registada com sucesso.\");\r\n                    navigate(\"/map\");\r\n                } else if(xmlhttp.status === 400) {\r\n                    alert(\"Todos os campos obrigatórios devem ser preenchidos.\");\r\n                } else if(xmlhttp.status === 403 || xmlhttp.status === 404) {\r\n                    alert(\"Não tem permissões para efetuar esta operação.\");\r\n                    localStorage.removeItem(\"token\");\r\n                    navigate(\"/\");\r\n                } else if(xmlhttp.status === 409) {\r\n                    alert(\"Já possui uma parcela com o mesmo nome.\")\r\n                }\r\n                else {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n                setRequest(false);\r\n            }\r\n        }\r\n\r\n        let url = \"https://moonlit-oven-349523.appspot.com/rest/parcel/register\";\r\n\r\n        f.append('token', localStorage.getItem('token'));\r\n        if(role !== 'D'){\r\n            f.append('owner', document.getElementById(\"formOwnerName\").value);\r\n            url = \"https://moonlit-oven-349523.appspot.com/rest/parcel/registerAdmin\";\r\n        }\r\n        f.append('name', document.getElementById(\"formParcelName\").value);\r\n        f.append('distrito', document.getElementById(\"formDistritoDropdown\").value);\r\n        f.append('concelho', document.getElementById(\"formConcelhoDropdown\").value);\r\n        f.append('freguesia', document.getElementById(\"formFreguesiaDropdown\").value);\r\n        f.append('photo', file);\r\n        f.append('coordinates', JSON.stringify(paths));\r\n        f.append('document', documentState);\r\n        f.append('usage', document.getElementById(\"formParcelUsage\").value);\r\n        f.append('oldUsage', document.getElementById(\"formParcelOldUsage\").value);\r\n        f.append('cover', document.getElementById(\"formParcelCover\").value);\r\n        f.append('section', document.getElementById(\"formParcelSection\").value);\r\n        f.append('article', document.getElementById(\"formParcelArticalNum\").value);\r\n\r\n        for (var pair of f.entries()) {\r\n            console.log(pair[0]+ ', ' + pair[1]);\r\n        }\r\n\r\n        console.log(url);\r\n        xmlhttp.open(\"POST\", url, true);\r\n        xmlhttp.send(f);\r\n        setRequest(true);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"mapDiv_Map\">\r\n            <CSVConverter/><LoadScript\r\n            googleMapsApiKey=\"AIzaSyC3yXGtu-O5HD8LhlQ18w68dby2HQ2X3O4\"\r\n        >\r\n\r\n            <GoogleMap\r\n                mapContainerStyle={containerStyle}\r\n                center={center}\r\n                zoom={10}\r\n                tilt={0}\r\n                onClick={ev => {\r\n                    addMarker(ev.latLng.lat(), ev.latLng.lng())\r\n                }}\r\n                onLoad={() => importQuery()}\r\n            >\r\n                <Polygon\r\n                    paths={paths}\r\n                    options={options}\r\n                />\r\n                {markerList}\r\n                <></>\r\n            </GoogleMap>\r\n        </LoadScript>\r\n\r\n            <div className=\"wrapper\">\r\n                <div id=\"sideBar\">\r\n                    <div id=\"parcelInfo\">\r\n                        <div id=\"parcelArea\">\r\n                            <div className=\"MapInfo_Map\">Área</div>\r\n                            <div className=\"MapInfo_Map\">{area}m²</div>\r\n                        </div>\r\n                        <br/>\r\n                        <div id=\"parcelPerimeter\">\r\n                            <div className=\"MapInfo_Map\">Perímetro</div>\r\n                            <div className=\"MapInfo_Map\">{perimeter}m</div>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"parcelAddPoint\">\r\n                        <div id=\"addLat\">\r\n                            <div id=\"lat_Map\" className=\"MapInfo_Map\">Latitude</div>\r\n                            <input className=\"latlng_input\" type=\"number\" id=\"input_lat\" placeholder=\"Ex: 38.661142\" maxLength=\"64\"/>\r\n                        </div>\r\n                        <br/>\r\n                        <div id=\"addLng\">\r\n                            <div id=\"lng_Map\" className=\"MapInfo_Map\">Longitude</div>\r\n                            <input className=\"latlng_input\" type=\"number\" id=\"input_lng\" placeholder=\"Ex: -9.203510\" maxLength=\"64\"/>\r\n                        </div>\r\n                        <button type=\"button\" id=\"submit_latlng\" className=\"btn btn-success\" onClick={() => addMarker(Number(document.getElementById(\"input_lat\").value), Number(document.getElementById(\"input_lng\").value))}>Adicionar ponto</button>\r\n                    </div>\r\n                    <button type=\"button\" id=\"rollback\" className={paths.length > 0 ? \"btn btn-success\" : \"btn btn-secondary\"} onClick={rollback}>Voltar atrás</button>\r\n                </div>\r\n\r\n\r\n                <div className=\"submit_Map\">\r\n                    <Form onSubmit={submitHandler}>\r\n                        {role === \"D\"?<></>:<Form.Group className=\"mt-3\" controlId=\"formOwnerName\">\r\n                            <Form.Label> <strong>Nome do Dono</strong> </Form.Label>\r\n                            <Form.Control className=\"map_fields\" required type=\"text\" placeholder=\"Nome do Dono\" />\r\n                        </Form.Group>}\r\n\r\n                        <Form.Group className=\"mt-3\" controlId=\"formParcelName\">\r\n                            <Form.Label> <strong>Nome da Parcela</strong> </Form.Label>\r\n                            <Form.Control className=\"map_fields\" required type=\"text\" placeholder=\"Nome da parcela\" maxLength=\"64\"/>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mt-3\" controlId=\"formDistritoDropdown\">\r\n                            <Form.Label> <strong>Distrito</strong> </Form.Label>\r\n                            <Form.Select defaultValue=\"\" className=\"map_fields\" onChange={(e) => handleSetDistrito(e.target.value)}>\r\n                                <option disabled={true} value=\"\">-</option>\r\n                                {distritoList}\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mt-3\" controlId=\"formConcelhoDropdown\">\r\n                            <Form.Label> <strong>Concelho</strong> </Form.Label>\r\n                            <Form.Select defaultValue=\"\" className=\"map_fields\" onChange={(e) => handleSetConcelho(e.target.value)}>\r\n                                <option disabled={true} value=\"\">-</option>\r\n                                {concelhoOptions}\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mt-3\" controlId=\"formFreguesiaDropdown\">\r\n                            <Form.Label> <strong>Freguesia</strong> </Form.Label>\r\n                            <Form.Select defaultValue=\"\" className=\"map_fields\">\r\n                                <option disabled={true} value=\"\">-</option>\r\n                                {freguesiaOptions}\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mt-3\" controlId=\"formParcelSection\">\r\n                            <Form.Label> <strong>Secção da Parcela</strong> </Form.Label>\r\n                            <Form.Control className=\"map_fields\" required type=\"text\" placeholder=\"Secção da Parcela (Ex: SA)\" maxLength=\"2\"/>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mt-3\" controlId=\"formParcelArticalNum\">\r\n                            <Form.Label> <strong>Nº de Artigo da Parcela</strong> </Form.Label>\r\n                            <Form.Control className=\"map_fields\" required type=\"number\" placeholder=\"Nº de Artigo (Ex: 105)\" maxLength=\"3\"/>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mt-3\" controlId=\"formParcelCover\">\r\n                            <Form.Label> <strong>Cobertura do solo</strong> </Form.Label>\r\n                            <Form.Control className=\"map_fields\" required type=\"text\" placeholder=\"Cobertura do solo\" maxLength=\"64\"/>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mt-3\" controlId=\"formParcelUsage\">\r\n                            <Form.Label> <strong>Utilização do solo</strong> </Form.Label>\r\n                            <Form.Select className=\"map_fields\">\r\n                                <option value=\"Recreacional\">Recreacional</option>\r\n                                <option value=\"Transporte\">Transporte</option>\r\n                                <option value=\"Agricultural\">Agricultural</option>\r\n                                <option value=\"Residencial\">Residencial</option>\r\n                                <option value=\"Comercial\">Comercial</option>\r\n                                <option value=\"Pasto\">Pasto</option>\r\n                                <option value=\"Floresta\">Floresta</option>\r\n                                <option value=\"Privado\">Privado</option>\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mt-3\" controlId=\"formParcelOldUsage\">\r\n                            <Form.Label> <strong>Utilização prévia do solo</strong> </Form.Label>\r\n                            <Form.Select className=\"map_fields\">\r\n                                <option value=\"Recreacional\">Recreacional</option>\r\n                                <option value=\"Transporte\">Transporte</option>\r\n                                <option value=\"Agricultural\">Agricultural</option>\r\n                                <option value=\"Residencial\">Residencial</option>\r\n                                <option value=\"Comercial\">Comercial</option>\r\n                                <option value=\"Pasto\">Pasto</option>\r\n                                <option value=\"Floresta\">Floresta</option>\r\n                                <option value=\"Privado\">Privado</option>\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group className=\"position-relative mt-3\" controlId=\"formParcelPhoto\">\r\n                            <Form.Label> <strong>Foto</strong> </Form.Label>\r\n                            <Form.Control\r\n                                className=\"map_fields\"\r\n                                type=\"file\"\r\n                                required\r\n                                name=\"file\"\r\n                                accept = \".png\"\r\n                                onChange={(e) => setFile(e.target.files[0])}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"position-relative mt-3\" controlId=\"formParcelPdf\">\r\n                            <Form.Label> <strong>PDF</strong> </Form.Label>\r\n                            <Form.Control\r\n                                className=\"map_fields\"\r\n                                type=\"file\"\r\n                                required\r\n                                name=\"file\"\r\n                                accept = \".pdf\"\r\n                                onChange={(e) => {setDocument(e.target.files[0]); console.log(e.target.files[0])}}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Check\r\n                            className=\"position-relative mt-3\"\r\n                            type=\"switch\"\r\n                            id=\"custom-switch\"\r\n                            label=\"Importar ficheiro Geojson\"\r\n                            onChange={ () => setUseGeoFile(!useGeoFile)}\r\n                        />\r\n\r\n                        {useGeoFile ? <Form.Group className=\"position-relative mt-3\" controlId=\"formParcelPdf\">\r\n                            <Form.Label> <strong>Ficheiro Geojson</strong> </Form.Label>\r\n                            <Form.Control\r\n                                className=\"map_fields\"\r\n                                type=\"file\"\r\n                                required\r\n                                name=\"file\"\r\n                                accept = \".geojson\"\r\n                                onChange={(e) => {if(e.target.files[0]){loadGeojson(e.target.files[0])}}}\r\n                            />\r\n                        </Form.Group>:<></>}\r\n\r\n                        <Button id=\"submit-button_Map\" className=\"mt-3 mb-3\" variant=\"success\" type=\"submit\">\r\n                            {request?<Spinner id=\"spinne_ConfirmationPage\" variant=\"light\" animation=\"border\" role=\"status\">\r\n                            <span className=\"visually-hidden\">Carregando...</span>\r\n                        </Spinner>:\"Submeter\"}\r\n                        </Button>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default React.memo(Map)","import TopBar from \"../TopBar/TopBar.js\"\r\nimport Map from \"../Map/Map.js\"\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport React, { Component }  from 'react';\r\nimport CheckIfActive from \"../util/CheckIfActive\";\r\n\r\nconst RegisterParcel = () => {\r\n    return(\r\n        <>\r\n\r\n        <CheckIfLoggedOut />\r\n        <CheckIfActive />\r\n        <TopBar/>\r\n            <div className=\"map_RegisterPortion\">\r\n                <Map/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RegisterParcel","import React, { Component }  from 'react';\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst CheckIfLoggedIn = () => {\r\n    const navigate = useNavigate();\r\n\r\n\r\n    React.useEffect(() => {\r\n        let token = localStorage.getItem('token');\r\n        let role = localStorage.getItem('role');\r\n        let state = localStorage.getItem('state');\r\n        if(token != null && role != null && state != null) {\r\n            console.log(\"login\")\r\n            //O utilizador saiu da pag sem fazer logout e ainda tem um token valido, logo nao precisa de fazer login novamente\r\n            navigate(\"/homepage\");\r\n        }\r\n    }, []);\r\n\r\n\r\n    return(\r\n        <></>\r\n    )\r\n}\r\n\r\nexport default CheckIfLoggedIn","import './ChangePassword.css'\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {Link, useLocation, useNavigate} from \"react-router-dom\";\r\nimport React, { Component }  from 'react';\r\nimport CheckIfActive from \"../util/CheckIfActive\";\r\n\r\nconst ChangePassword = () => {\r\n    const navigate = useNavigate();\r\n    let oldPassword, newPassword, confirmation\r\n    let xmlhttp = new XMLHttpRequest();\r\n\r\n    function changePassword() {\r\n\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState === 4) {\r\n                if (xmlhttp.status === 200) {\r\n                    alert(\"Palavra-passe alterada com sucesso.\");\r\n                    navigate(\"/profile\");\r\n                } else if (xmlhttp.status === 400) {\r\n                    alert(\"A nova palavra-passe e a confirmação não cumprem os requisitos.\")\r\n                } else if (xmlhttp.status === 403 || xmlhttp.status === 404) {\r\n                    alert(\"Não tem permissões para efetuar esta operação.\");\r\n                    localStorage.removeItem(\"token\");\r\n                    navigate(\"/\");\r\n                } else if (xmlhttp.status === 500) {\r\n                        alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                } else {\r\n                    alert(\"Não foi alterar a palavra-passe.\");\r\n                    console.log(xmlhttp.status);\r\n                }\r\n            }\r\n        }\r\n\r\n        var myObj = {\r\n            oldPassword: document.getElementById(\"oldPassword\").value,\r\n            newPassword: document.getElementById(\"newPassword\").value,\r\n            confirmation: document.getElementById(\"confirmation\").value,\r\n            token: localStorage.getItem('token')\r\n        };\r\n\r\n        var myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"PUT\", \"https://moonlit-oven-349523.appspot.com/rest/modify/password\");\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CheckIfLoggedOut/>\r\n            <CheckIfActive />\r\n            <TopBar/>\r\n\r\n            <div className=\"bg-img_ChangePassword\">\r\n                <div className=\"body-changePassword\">\r\n                    <h2 className=\"title_ChangePassword\"><b>Altere a sua palavra-passe</b></h2>\r\n                    <br/>\r\n                    <div id=\"oldPassword_ChangePassword\">\r\n                        Palavra-Passe Antiga: {oldPassword} <input className=\"fields_ChangePassword\" id=\"old-password_ChangePassword\" type=\"password\" maxLength=\"64\"/>\r\n                    </div>\r\n                    <div id=\"newPassword_ChangePassword\">\r\n                        Nova Palavra-Passe: {newPassword} <input className=\"fields_ChangePassword\" id=\"new-password_ChangePassword\" type=\"password\" maxLength=\"64\"/>\r\n                    </div>\r\n                    <div id=\"confirmPassword_ChangePassword\">\r\n                        Confirmar nova Palavra-Passe: {confirmation} <input className=\"fields_ChangePassword\" id=\"confirm-password_ChangePassword\" type=\"password\" maxLength=\"64\"/>\r\n                    </div>\r\n\r\n                    <div className=\"btn-group\" id=\"confirmAndCancel_ChangePassword\">\r\n                        <div id=\"confirm_ChangePassword\">\r\n                            <Button type=\"button\" className=\"btn btn-success btn-sm\" onClick={changePassword}> Confirmar Alterações</Button>\r\n                        </div>\r\n\r\n                        <div id=\"cancel_ChangePassword\">\r\n                            <Link to=\"/profile\">\r\n                                <Button type=\"button\" className=\"btn btn-secondary btn-sm\">Cancelar Alterações </Button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ChangePassword","import './ParcelDetailsModal.css'\r\nimport {Button, Modal, Toast} from \"react-bootstrap\";\r\nimport React from 'react';\r\nimport {GoogleMap, Polygon} from \"@react-google-maps/api\";\r\nimport {useState} from \"react\";\r\nimport {getCenterOfBounds, getDistance, orderByDistance} from \"geolib\";\r\nimport mapCoordinates from 'geojson-apply-right-hand-rule'\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\n\r\nconst center = {\r\n    lat: 38.660677,\r\n    lng: -9.205971\r\n};\r\n\r\nconst options = {\r\n    fillColor: \"Khaki\",\r\n    fillOpacity: 0.3,\r\n    strokeColor: \"DarkOrange\",\r\n    strokeOpacity: 1,\r\n    strokeWeight: 2,\r\n    clickable: false,\r\n    draggable: false,\r\n    editable: false,\r\n    geodesic: false,\r\n    zIndex: 1\r\n}\r\n\r\nconst modalContainerStyle = {\r\n    width: '100%',\r\n    height: '45vh'\r\n};\r\n\r\nconst ParcelDetailsModal = (props) => {\r\n    const navigate = useNavigate();\r\n\r\n    const [obj, setObj] = useState({});\r\n    const [centerLoc, setCenterLoc] = useState(center);\r\n    const [zoom, setZoom] = useState(15);\r\n    const handleClose = () => {props.setShow(false);clearStates()}\r\n\r\n    function clearStates(){\r\n        setObj({});\r\n        setCenterLoc(center);\r\n        setZoom(15);\r\n    }\r\n\r\n    let xmlhttp = new XMLHttpRequest();\r\n\r\n    function loadModalValues() {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState === 4) {\r\n                if (xmlhttp.status === 200) {\r\n                    setObj(JSON.parse(xmlhttp.responseText));\r\n                }\r\n                else if(xmlhttp.status === 403) {\r\n                    localStorage.removeItem('token');\r\n                    navigate('/');\r\n                }\r\n                else if(xmlhttp.status === 404) {\r\n                    alert(\"Utilizador ou parcela não existe.\");\r\n                }\r\n                else {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n            }\r\n        }\r\n        let myObj = {token:localStorage.getItem('token')};\r\n        let myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/parcelInfo?parcelName=\"+props.obj.owner+\"_\"+props.obj.name);\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n    function onLoad() {\r\n        let centerPoint = getCenterOfBounds(JSON.parse(props.obj.coordinates));\r\n        setCenterLoc(centerPoint);\r\n\r\n        let arr = orderByDistance(centerPoint, JSON.parse(props.obj.coordinates));\r\n        let mostDistant = arr[arr.length-1];\r\n        let dist = getDistance(centerPoint, mostDistant, 1);\r\n        setZoom(Math.round(97.1634 - (69.2069*Math.pow((dist*9), 0.0174478)))-1);\r\n    }\r\n\r\n    function exportGeoJSON(){\r\n        let arr = [];\r\n        let paths = JSON.parse(props.obj.coordinates);\r\n        for(let i = 0; i<paths.length; i++){\r\n            let auxArr = [];\r\n            auxArr.push(paths[i].lat);\r\n            auxArr.push(paths[i].lng);\r\n            arr.push(auxArr);\r\n        }\r\n        let auxArr = [];\r\n        auxArr.push(paths[0].lat);\r\n        auxArr.push(paths[0].lng);\r\n        arr.push(auxArr);\r\n\r\n        const geometry = mapCoordinates(arr);\r\n\r\n        download(props.obj.name+\".geojson\", JSON.stringify(geometry))\r\n    }\r\n\r\n    function download(filename, text) {\r\n        let element = document.createElement('a');\r\n        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\r\n        element.setAttribute('download', filename);\r\n\r\n        element.style.display = 'none';\r\n        document.body.appendChild(element);\r\n\r\n        element.click();\r\n\r\n        document.body.removeChild(element);\r\n    }\r\n\r\n    return <>\r\n        <Modal\r\n            onShow={loadModalValues}\r\n            show={props.show}\r\n            onHide={handleClose}\r\n            backdrop=\"static\"\r\n            dialogClassName=\"modal-xl\"\r\n            keyboard={false}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title> Parcela: {props.obj.name} </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n\r\n            <GoogleMap\r\n                mapContainerStyle={modalContainerStyle}\r\n                center={{\r\n                    lat:centerLoc.latitude,\r\n                    lng:centerLoc.longitude}\r\n                }\r\n                zoom={zoom}\r\n                tilt={0}\r\n                onLoad={() => onLoad(props.obj.coordinates)}\r\n\r\n            >\r\n                <Polygon\r\n                    paths={JSON.parse(props.obj.coordinates === undefined ? \"[]\" : props.obj.coordinates)}\r\n                    options={options}\r\n                />\r\n            </GoogleMap>\r\n\r\n            </Modal.Body>\r\n\r\n            <Modal.Body>\r\n                <label className=\"field_ParcelDetailsModal\" id=\"proprietario_ParcelDetailsModal\"><b>Proprietário:</b> {props.obj.owner} </label><br/>\r\n                <label className=\"field_ParcelDetailsModal\"><b>Gerente:</b> {props.obj.manager === \"\" ? \" - \" : props.obj.manager} </label><br/>\r\n                <label className=\"field_ParcelDetailsModal\"><b>Freguesia:</b> {props.obj.freguesia} </label><br/>\r\n                <label className=\"field_ParcelDetailsModal\"><b>Concelho:</b> {props.obj.concelho} </label><br/>\r\n                <label className=\"field_ParcelDetailsModal\"><b>Distrito:</b> {props.obj.distrito} </label><br/>\r\n                <label className=\"field_ParcelDetailsModal\"><b>Secção:</b> {obj.section} </label><br/>\r\n                <label className=\"field_ParcelDetailsModal\"><b>Nº de Artigo:</b> {obj.article} </label><br/>\r\n                <label className=\"field_ParcelDetailsModal\"><b>Área da parcela:</b> {props.obj.area}m² </label><br/>\r\n                <label className=\"field_ParcelDetailsModal\"><b>Tipo de cobertura do solo:</b> {obj.cover} </label><br/>\r\n                <label className=\"field_ParcelDetailsModal\"><b>Utilização atual do solo:</b> {obj.usage} </label><br/>\r\n                <label className=\"field_ParcelDetailsModal\"><b>Utilização prévia do solo:</b> {obj.oldUsage} </label><br/>\r\n                <label className=\"field_ParcelDetailsModal\"><b>Descrição:</b> {obj.description} </label><br/>\r\n                <Button type=\"button\" id=\"document_ParcelDetailsModal\" variant=\"outline-success\" size=\"sm\" onClick={() => (window.open(obj.documentURL), '_blank')}> Ver documento </Button>\r\n                <Button type=\"button\" id=\"photo_ParcelDetailsModal\" variant=\"outline-success\" size=\"sm\" onClick={() => (window.open(obj.photoURL), '_blank')}> Ver foto </Button><br/>\r\n                <Button type=\"button\" id=\"geojson_ParcelDetailsModal\" className=\"btn btn-success btn-sm\" onClick={exportGeoJSON}> Exportar fiheiro GeoJSON </Button>\r\n            </Modal.Body>\r\n        </Modal>\r\n    </>\r\n}\r\n\r\nexport default ParcelDetailsModal;","import './ParcelEditModal.css'\r\n\r\nimport {Button, ButtonGroup, Form, Modal, Spinner} from \"react-bootstrap\";\r\nimport {GoogleMap, Marker, Polygon} from \"@react-google-maps/api\";\r\nimport {useState, useRef} from \"react\";\r\nimport {getAreaOfPolygon, getCenterOfBounds, getDistance, getPathLength, orderByDistance} from \"geolib\";\r\nimport React from 'react'\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\n\r\nconst center = {\r\n    lat: 38.660677,\r\n    lng: -9.205971\r\n};\r\n\r\nconst options = {\r\n    fillColor: \"Khaki\",\r\n    fillOpacity: 0.2,\r\n    strokeColor: \"DarkOrange\",\r\n    strokeOpacity: 1,\r\n    strokeWeight: 2,\r\n    clickable: false,\r\n    draggable: false,\r\n    editable: false,\r\n    geodesic: false,\r\n    zIndex: 1\r\n}\r\nconst optionsSecondary = {\r\n    fillColor: \"DarkCyan\",\r\n    fillOpacity: 0.4,\r\n    strokeColor: \"Aqua\",\r\n    strokeOpacity: 1,\r\n    strokeWeight: 2,\r\n    clickable: false,\r\n    draggable: false,\r\n    editable: false,\r\n    geodesic: false,\r\n    zIndex: 1\r\n}\r\n\r\nconst modalContainerStyle = {\r\n    width: '100%',\r\n    height: '45vh'\r\n};\r\n\r\n\r\nconst ParcelEditModal = (props) => {\r\n    const navigate = useNavigate();\r\n\r\n    const [markerList, setMarker] = useState([]);\r\n    const [paths, setPaths] = useState([]);\r\n    const [area, setArea] = useState(0);\r\n    const [perimeter, setPerimeter] = useState(0);\r\n    const [zoom, setZoom] = useState(15);\r\n\r\n    const [managerValue, setmanagerValue] = useState(\"\");\r\n    const [managerRequestValue, setmanagerRequestValue] = useState(\"\");\r\n    const [changedInfo, setChangedInfo] = useState(false);\r\n    const [centerLoc, setCenterLoc] = useState(center);\r\n    const [info, setInfo] = useState({});\r\n    const [showSelects, setShowSelects] = useState(false);\r\n\r\n    const [managerList, setManager] = useState([]);\r\n\r\n    const handleEditClose = () => {closeModal();clearStates()}\r\n\r\n\r\n    function clearStates(){\r\n        setMarker([]);\r\n        setPaths([]);\r\n        setArea(0);\r\n        setPerimeter(0);\r\n        setZoom(0);\r\n        setmanagerValue(\"\");\r\n        setmanagerRequestValue(\"\");\r\n        setChangedInfo(false);\r\n        setCenterLoc(center);\r\n        setInfo({});\r\n        setManager([]);\r\n    }\r\n\r\n    function closeModal(){\r\n        props.setShow(false);\r\n    }\r\n\r\n    const didMount = useRef(false);\r\n    React.useEffect(() => {\r\n        console.log(\"useeffect\");\r\n        if (didMount.current) setShowSelects(!showSelects);\r\n        else didMount.current = true;\r\n    }, [info]);\r\n\r\n    let xmlhttp = new XMLHttpRequest();\r\n\r\n\r\n    function onLoad() {\r\n        let centerPoint = getCenterOfBounds(JSON.parse(props.obj.coordinates));\r\n        setCenterLoc({\r\n            lat: centerPoint.latitude,\r\n            lng: centerPoint.longitude\r\n        });\r\n\r\n        let arr = orderByDistance(centerPoint, JSON.parse(props.obj.coordinates));\r\n        let mostDistant = arr[arr.length-1];\r\n        let dist = getDistance(centerPoint, mostDistant, 1);\r\n        setZoom(Math.round(97.1634 - (69.2069*Math.pow((dist*9), 0.0174478)))-1);\r\n    }\r\n\r\n    function addMarker(lat, lng) {\r\n        const google = window.google;\r\n\r\n        setMarker(markerList.concat(<Marker key={markerList.length} id={markerList.length}\r\n                                            position={{\r\n                                                lat: lat,\r\n                                                lng: lng\r\n                                            }}\r\n                                            icon={{\r\n                                                path: google.maps.SymbolPath.CIRCLE,\r\n                                                fillColor: \"Aqua\",\r\n                                                fillOpacity: 1.0,\r\n                                                strokeWeight: 0,\r\n                                                scale: 5\r\n                                            }}/>))\r\n\r\n        setPaths(paths.concat({\r\n            lat: lat,\r\n            lng: lng\r\n        }));\r\n    }\r\n\r\n    function rollback() {\r\n        setMarker(markerList.filter((element, index) => index < markerList.length - 1));\r\n        setPaths(paths.filter((element, index) => index < paths.length - 1));\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setPerimeter(getPathLength(paths) + (paths.length>1 ? getDistance(paths[paths.length-1], paths[0]) : 0));\r\n        setArea(Math.round(getAreaOfPolygon(paths)));\r\n    }, [paths]);\r\n\r\n    function hasManager() {\r\n        if(props.obj.manager !== \"\") {\r\n            return(\r\n                <label>\r\n                    <b>Gerente:</b> {props.obj.manager}\r\n                    <Button onClick={() => removeManager()} id=\"rmv-manager_MyParcels\" className=\"managerButtons_ParcelEditModal\" variant=\"danger\" size=\"sm\">Remover gerente</Button>\r\n                </label>\r\n            )\r\n        }\r\n        else {\r\n            if(info.managerRequest !== \"\") {\r\n                return(\r\n                    <label>\r\n                        <span><b>Gerente:</b> Pedido pendente a {info.managerRequest}</span>\r\n                        <Button onClick={() => removeRequest()} id=\"rmv-pending_MyParcels\" className=\"managerButtons_ParcelEditModal\" variant=\"outline-danger\" size=\"sm\">Anular pedido</Button>\r\n                    </label>\r\n                )\r\n            }\r\n            else {\r\n                if(props.obj.isApproved === \"APPROVED\") {\r\n                    if(managerList.length > 0){\r\n                        return(\r\n                            <label>\r\n                                <b>Gerente:</b>\r\n\r\n                                <select id=\"dropdown-basic\" className=\"managerButtons_ParcelEditModal\" onChange={(e) => {setmanagerValue(e.target.value)}/*(e) => {managerValue = e}*/}>\r\n                                    {managerList}\r\n                                </select>\r\n\r\n                                <Button onClick={() => {sendManagerRequest()}} id=\"add-manager_MyParcels\" className=\"managerButtons_ParcelEditModal\" variant=\"success\" size=\"sm\">Adicionar gerente</Button>\r\n\r\n                            </label>\r\n                        )\r\n                    }\r\n                    else{\r\n                        return(\r\n                        <label>\r\n                            <b>Gerente:</b> <span className=\"red-text\">Não existem entidades disponíveis no concelho da parcela.</span>\r\n                        </label>);\r\n                    }\r\n\r\n                }\r\n                else {\r\n                    return(\r\n                        <label>\r\n                            <b>Gerente:</b> <span className=\"red-text\">As parcelas devem estar aprovadas para efetuar pedidos de gerenciamento.</span>\r\n                        </label>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function removeManager(){\r\n        let myObj = {token:localStorage.getItem('token')};\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObj),\r\n        };\r\n\r\n        fetch(\"https://moonlit-oven-349523.appspot.com/rest/parcel/removemanager/\" + props.obj.owner + \"_\" + props.obj.name, options)\r\n            .then((r) =>{\r\n                if(r.ok){\r\n                    alert(\"Gerente removido.\");\r\n                    window.location.reload();\r\n                }\r\n                else if(r.status === 403) {\r\n                    localStorage.removeItem('token');\r\n                    navigate('/');\r\n                }\r\n                else if(r.status === 404) {\r\n                    alert(\"Utilizador ou parcela não existe.\");\r\n                }\r\n                else {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n            });\r\n    }\r\n\r\n    function removeRequest(){\r\n        let myObj = {token:localStorage.getItem('token')};\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObj),\r\n        };\r\n\r\n        fetch(\"https://moonlit-oven-349523.appspot.com/rest/parcel/rejectrequest/\" + props.obj.owner + \"_\" + props.obj.name, options)\r\n            .then((r) =>{\r\n                if(r.ok){\r\n                    alert(\"Pedido removido.\");\r\n                    window.location.reload();\r\n                }\r\n                else if(r.status === 403){\r\n                    localStorage.removeItem('token');\r\n                    navigate('/');\r\n                }\r\n                else if(r.status === 404){\r\n                    alert(\"Proprietário ou parcela não existe.\");\r\n                }\r\n                else if(r.status === 409){\r\n                    alert(\"Esta parcela já possui um gerente.\");\r\n                }\r\n                else {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n            });\r\n    }\r\n\r\n    function deleteParcel(){\r\n        let myObj = {token:localStorage.getItem('token')};\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObj),\r\n        };\r\n\r\n        fetch(\"https://moonlit-oven-349523.appspot.com/rest/parcel/delete/\" + props.obj.owner + \"_\" + props.obj.name, options)\r\n            .then((r) =>{\r\n                if(r.ok){\r\n                    alert(\"Parcela removida.\");\r\n                    window.location.reload();\r\n                }\r\n                else if(r.status === 403){\r\n                    localStorage.removeItem('token');\r\n                    navigate('/');\r\n                }\r\n                else if(r.status === 404){\r\n                    alert(\"Proprietário ou parcela não existe.\");\r\n                }\r\n                else {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n            });\r\n    }\r\n\r\n    function loadModalValues() {\r\n        let myObjManager = {token:localStorage.getItem('token')};\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObjManager),\r\n        };\r\n\r\n        fetch(\"https://moonlit-oven-349523.appspot.com/rest/parcel/availablemanagers/\"+props.obj.owner+\"_\"+props.obj.name, options)\r\n            .then((r) => {\r\n                if(r.ok){\r\n                    r.text().then((text) => {\r\n                        const managersObj = JSON.parse(text);\r\n                        let arr = [];\r\n\r\n                        for(let i = 0; i<managersObj.length; i++){\r\n                            arr.push(<option value={managersObj[i]}>{managersObj[i]}</option>)\r\n                        }\r\n                        setmanagerValue(managersObj[0]);\r\n                        setManager(arr);\r\n                    })\r\n                }\r\n                else if(r.status === 403) {\r\n                    localStorage.removeItem('token');\r\n                    navigate('/');\r\n                }\r\n                else if(xmlhttp.status === 404){\r\n                    alert(\"Utilizador ou parcela não existe.\");\r\n                }\r\n                else {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n            });\r\n\r\n\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState === 4) {\r\n                if (xmlhttp.status === 200) {\r\n                    setInfo(JSON.parse(xmlhttp.responseText));\r\n                    setmanagerRequestValue(JSON.parse(xmlhttp.responseText).managerRequest);\r\n                }\r\n                else if(xmlhttp.status === 403) {\r\n                    localStorage.removeItem('token');\r\n                    navigate('/');\r\n                }\r\n                else if(xmlhttp.status === 404) {\r\n                    alert(\"Utilizador ou parcela não existe.\");\r\n                }\r\n                else {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n            }\r\n        }\r\n        let myObj = {token:localStorage.getItem('token')};\r\n        let myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/parcelInfo?parcelName=\"+props.obj.owner+\"_\"+props.obj.name);\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n    function sendManagerRequest() {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState === 4) {\r\n                if (xmlhttp.status === 200) {\r\n                    alert(\"Pedido enviado.\")\r\n                }\r\n                else if(xmlhttp.status === 400) {\r\n                    alert(\"Todos os campos obrigatórios devem ser preenchidos corretamente.\");\r\n                }\r\n                else if(xmlhttp.status === 403){\r\n                    localStorage.removeItem('token');\r\n                    navigate('/');\r\n                }\r\n                else if(xmlhttp.status === 404){\r\n                    alert(\"Proprietário, parcela ou gerente não existe.\");\r\n                }\r\n                else if(xmlhttp.status === 409){\r\n                    alert(\"Esta parcela já possui um gerente.\");\r\n                }\r\n                else {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n            }\r\n        }\r\n        var myObj = {token:localStorage.getItem('token'),\r\n                        managerName:managerValue};\r\n        console.log(myObj);\r\n        var myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/sendrequest/\" + props.obj.owner + \"_\" + props.obj.name);\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n    async function sendNewInfo(){\r\n        let arr = [];\r\n\r\n        if(changedInfo){\r\n            arr.push(sendInfo());\r\n        }\r\n        if(document.getElementById(\"file-editParcelModal_ApproveParcels\").files[0] !== undefined){\r\n            arr.push(sendDocument(document.getElementById(\"file-editParcelModal_ApproveParcels\").files[0]));\r\n        }\r\n        if(document.getElementById(\"photo-editParcelModal_ApproveParcels\").files[0] !== undefined){\r\n            arr.push(sendPhoto(document.getElementById(\"photo-editParcelModal_ApproveParcels\").files[0]));\r\n        }\r\n        if(paths.length > 2){\r\n            arr.push(sendCoordinates(paths));\r\n            console.log(\"send\");\r\n        }\r\n\r\n        Promise.all(arr).then(() => {alert(\"Success\"); window.location.reload()}).catch(() => alert(\"Error\"));\r\n    }\r\n\r\n    async function sendInfo(){\r\n        let myObj = {cover:document.getElementById(\"cobertSolo-editParcelModal_ApproveParcels\").value,\r\n            usage:document.getElementById(\"utilAtSolo-editParcelModal_ApproveParcels\").value,\r\n            oldUsage:document.getElementById(\"utilPrevSolo-editParcelModal_ApproveParcels\").value,\r\n            description:document.getElementById(\"description-editParcelModal_ApproveParcels\").value,\r\n            token:localStorage.getItem('token')};\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObj),\r\n        };\r\n\r\n        return fetch(\"https://moonlit-oven-349523.appspot.com/rest/parcel/modify/\" + props.obj.owner + \"_\" + props.obj.name+\"/info\", options);\r\n    }\r\n\r\n    async function sendDocument(document){\r\n        let formData = new FormData();\r\n        formData.append('token', localStorage.getItem('token'));\r\n        formData.append('document', document);\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            body: formData,\r\n        };\r\n\r\n        return fetch(\"https://moonlit-oven-349523.appspot.com/rest/parcel/modify/\" + props.obj.owner + \"_\" + props.obj.name+\"/document\", options);\r\n    }\r\n\r\n    async function sendPhoto(photo){\r\n        let formData = new FormData();\r\n        formData.append('token', localStorage.getItem('token'));\r\n        formData.append('photo', photo);\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            body: formData,\r\n        };\r\n\r\n        return fetch(\"https://moonlit-oven-349523.appspot.com/rest/parcel/modify/\" + props.obj.owner + \"_\" + props.obj.name+\"/photo\", options);\r\n    }\r\n\r\n    async function sendCoordinates(paths){\r\n        let myObj = {token:localStorage.getItem('token'),\r\n            coordinates:JSON.stringify(paths)};\r\n        console.log(JSON.stringify(myObj));\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObj),\r\n        };\r\n\r\n        return fetch(\"https://moonlit-oven-349523.appspot.com/rest/parcel/modify/\" + props.obj.owner + \"_\" + props.obj.name+\"/coordinates\", options);\r\n    }\r\n\r\n\r\n    return <>\r\n        <Modal\r\n            onShow={loadModalValues}\r\n            show={props.show}\r\n            onHide={handleEditClose}\r\n            backdrop=\"static\"\r\n            dialogClassName=\"modal-xl\"\r\n            keyboard={false}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title> Parcela: {props.obj.name} </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n\r\n                <GoogleMap\r\n                    mapContainerStyle={modalContainerStyle}\r\n                    center={centerLoc}\r\n\r\n                    zoom={zoom}\r\n                    tilt={0}\r\n                    onLoad={() => onLoad(paths)}\r\n                    onClick={ev => {\r\n                        addMarker(ev.latLng.lat(), ev.latLng.lng())\r\n                    }}\r\n                >\r\n                    <Polygon\r\n                        paths={JSON.parse(props.obj.coordinates === undefined ? \"[]\" : props.obj.coordinates)}\r\n                        options={options}\r\n                    />\r\n                    <Polygon\r\n                        paths={paths}\r\n                        options={optionsSecondary}\r\n                    />\r\n                    {markerList}\r\n                    \r\n                </GoogleMap>\r\n\r\n                <div>\r\n\r\n                    <ButtonGroup className=\"buttons-editParcelModal_ApproveParcels\" size=\"sm\">\r\n\r\n                        <Button id=\"rollback-editParcelModal_ApproveParcels\" variant=\"secondary\" className={paths.length > 0 ? \"btn btn-success\" : \"btn btn-secondary\"} onClick={rollback}> Retroceder </Button>\r\n\r\n                    </ButtonGroup>\r\n                    <label id=\"newA-editParcelModal_ApproveParcels\"> <b>Nova área:{area}</b> </label>\r\n                    <label id=\"newP-editParcelModal_ApproveParcels\"> <b>Novo perímetro:{perimeter}</b> </label>\r\n                </div>\r\n                <p></p>\r\n\r\n                <label className=\"labels-editParcelModal_ApproveParcels\"><b>Proprietário:</b> {props.obj.owner} </label><br/>\r\n\r\n                <label className=\"labels-editParcelModal_ApproveParcels\"> {hasManager()} </label><br/>\r\n\r\n                <label className=\"labels-editParcelModal_ApproveParcels\"><b>Distrito:</b> {props.obj.distrito} </label><br/>\r\n\r\n                <label className=\"labels-editParcelModal_ApproveParcels\"><b>Concelho:</b> {props.obj.concelho} </label><br/>\r\n\r\n                <label className=\"labels-editParcelModal_ApproveParcels\"><b>Freguesia:</b> {props.obj.freguesia} </label><br/>\r\n\r\n                <label className=\"labels-editParcelModal_ApproveParcels\"><b>Secção:</b> {info.section} </label><br/>\r\n\r\n                <label className=\"labels-editParcelModal_ApproveParcels\"><b>Nº de Artigo:</b> {info.article} </label><br/>\r\n\r\n                <label className=\"labels-editParcelModal_ApproveParcels\"><b>Área da parcela:</b> {props.obj.area}m² </label><br/>\r\n\r\n\r\n                <label for=\"cobertSolo-editParcelModal_ApproveParcels\"><b>Tipo de cobertura do solo:</b>\r\n                    <input onChange={ () => (setChangedInfo(true))} id=\"cobertSolo-editParcelModal_ApproveParcels\" className=\"inputs-editParcelModal\" type=\"text\" defaultValue={info.cover} maxLength=\"64\"/>\r\n                </label>\r\n\r\n                {showSelects?<><Form.Group className=\"mt-3\" controlId=\"utilAtSolo-editParcelModal_ApproveParcels\">\r\n                        <Form.Label> <strong>Utilização atual do solo:</strong> </Form.Label>\r\n                        <Form.Select defaultValue={info.usage} onChange={ () => (setChangedInfo(true))} className=\"inputs2-editParcelModal\">\r\n                            <option value=\"Recreacional\">Recreacional</option>\r\n                            <option value=\"Transporte\">Transporte</option>\r\n                            <option value=\"Agricultural\">Agricultural</option>\r\n                            <option value=\"Residencial\">Residencial</option>\r\n                            <option value=\"Comercial\">Comercial</option>\r\n                            <option value=\"Pasto\">Pasto</option>\r\n                            <option value=\"Floresta\">Floresta</option>\r\n                            <option value=\"Privado\">Privado</option>\r\n                        </Form.Select>\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group className=\"mt-3\" controlId=\"utilPrevSolo-editParcelModal_ApproveParcels\">\r\n                        <Form.Label> <strong>Utilização prévia do solo:</strong> </Form.Label>\r\n                        <Form.Select defaultValue={info.oldUsage} onChange={ () => (setChangedInfo(true))} className=\"inputs2-editParcelModal\">\r\n                            <option value=\"Recreacional\">Recreacional</option>\r\n                            <option value=\"Transporte\">Transporte</option>\r\n                            <option value=\"Agricultural\">Agricultural</option>\r\n                            <option value=\"Residencial\">Residencial</option>\r\n                            <option value=\"Comercial\">Comercial</option>\r\n                            <option value=\"Pasto\">Pasto</option>\r\n                            <option value=\"Floresta\">Floresta</option>\r\n                            <option value=\"Privado\">Privado</option>\r\n                        </Form.Select>\r\n                    </Form.Group></>:<Spinner animation=\"border\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Loading...</span>\r\n                </Spinner>}\r\n\r\n                <p></p>\r\n                <label htmlFor=\"description-editParcelModal_ApproveParcels\"><b>Descrição:</b>\r\n\r\n                    <Form.Group controlId=\"editParcelInput\" className=\"inputs-editParcelModal\" >\r\n                        <Form.Control onChange={ () => (setChangedInfo(true))} required type=\"text\"\r\n                                      placeholder=\"Descrição\" className=\"inputs2-editParcelModal\" id=\"description-editParcelModal_ApproveParcels\"\r\n                                      maxLength=\"512\" as=\"textarea\" rows={4} defaultValue={info.description}/>\r\n                    </Form.Group>\r\n                </label><br/>\r\n\r\n                <label htmlFor=\"file-editParcelModal_ApproveParcels\"><b>Alterar Documento: </b>\r\n                    <input id=\"file-editParcelModal_ApproveParcels\" type=\"file\" name=\"upload\" accept=\"application/pdf\" />\r\n                </label><br/>\r\n\r\n                <label htmlFor=\"photo-editParcelModal_ApproveParcels\"><b>Alterar Fotografia: </b>\r\n                    <input id=\"photo-editParcelModal_ApproveParcels\" type=\"file\" name=\"upload\" accept=\"image/png\" />\r\n                </label><br/>\r\n\r\n                <p></p>\r\n\r\n                <div id=\"edit_modal_buttons\">\r\n                    <Button id=\"confirm-changes_ParcelEditModal\" type=\"button\" className=\"btn btn-success btn-sm\" onClick={sendNewInfo}> Confirmar Alterações </Button>\r\n                    <Button id=\"delete_parcel\" onClick={() => {deleteParcel()}} className=\"managerButtons_ParcelEditModal\" variant=\"danger\" size=\"sm\">Apagar parcela</Button>\r\n                </div>\r\n\r\n\r\n            </Modal.Body>\r\n        </Modal>\r\n    </>\r\n\r\n}\r\n\r\n\r\nexport default ParcelEditModal;","import {Button, Modal, Toast} from \"react-bootstrap\";\r\nimport React from 'react';\r\nimport {GoogleMap, Polygon} from \"@react-google-maps/api\";\r\nimport {InfoWindow} from \"@react-google-maps/api\";\r\nimport {useState} from \"react\";\r\nimport {getCenterOfBounds, getDistance, orderByDistance} from \"geolib\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\n\r\nconst center = {\r\n    lat: 38.660677,\r\n    lng: -9.205971\r\n};\r\n\r\nconst options = {\r\n    fillColor: \"Khaki\",\r\n    fillOpacity: 0.3,\r\n    strokeColor: \"DarkOrange\",\r\n    strokeOpacity: 1,\r\n    strokeWeight: 2,\r\n    clickable: false,\r\n    draggable: false,\r\n    editable: false,\r\n    geodesic: false,\r\n    zIndex: 1\r\n}\r\nconst nearbyOptions = {\r\n    fillColor: \"DarkSalmon\",\r\n    fillOpacity: 0.3,\r\n    strokeColor: \"Crimson\",\r\n    strokeOpacity: 1,\r\n    strokeWeight: 2,\r\n    clickable: true,\r\n    draggable: false,\r\n    editable: false,\r\n    geodesic: false,\r\n    zIndex: 0\r\n}\r\n\r\nconst nearbyHoverOptions = {\r\n    fillColor: \"Orange\",\r\n    fillOpacity: 0.3,\r\n    strokeColor: \"Crimson\",\r\n    strokeOpacity: 1,\r\n    strokeWeight: 2,\r\n    clickable: true,\r\n    draggable: false,\r\n    editable: false,\r\n    geodesic: false,\r\n    zIndex: 0\r\n}\r\n\r\nconst modalContainerStyle = {\r\n    width: '100%',\r\n    height: '45vh'\r\n};\r\n\r\nconst ParcelNearbyModal = (props) => {\r\n    const [mapRef, setMapRef] = useState(null);\r\n    const navigate = useNavigate();\r\n    const [centerLoc, setCenterLoc] = useState(center);\r\n    const [zoom, setZoom] = useState(15);\r\n    const handleClose = () => {props.setShow(false);clearStates()}\r\n    const [nearbyParcels, setNearbyParcels] = useState([]);\r\n    const [infoWindow, setInfoWindow] = useState(<></>);\r\n\r\n    function clearStates(){\r\n        setMapRef(null);\r\n        setCenterLoc(center);\r\n        setZoom(15);\r\n        setNearbyParcels([]);\r\n        setInfoWindow(<></>);\r\n    }\r\n\r\n    function loadModalValues() {\r\n        let myObj = {token:localStorage.getItem('token')};\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObj),\r\n        };\r\n\r\n        let parcelName = props.obj.owner + \"_\" + props.obj.name;\r\n        fetch(\"https://moonlit-oven-349523.appspot.com/rest/parcel/nearby?parcelName=\"+parcelName, options)\r\n            .then((r) => {\r\n                if(r.ok){\r\n                    r.text().then(t => {\r\n                        let obj = JSON.parse(t);\r\n                        let arr = [];\r\n                        for(let i = 0; i<obj.length; i++){\r\n                            if(obj[i].parcelName !== parcelName){\r\n                                let ref;\r\n                                arr.push(\r\n                                    <Polygon\r\n                                        onLoad={(polygon) => ref = polygon}\r\n                                        onMouseOver={(ev) => ref.setOptions(nearbyHoverOptions)}\r\n                                        onMouseOut={(ev) => ref.setOptions(nearbyOptions)}\r\n                                        onClick={ev => addInfoWindow(ev.latLng.lat(), ev.latLng.lng(), obj[i].parcelName)}\r\n                                        paths={JSON.parse(obj[i].coordinates)}\r\n                                        options={nearbyOptions}\r\n                                    />\r\n                                )\r\n                            }\r\n                        }\r\n                        setNearbyParcels(arr);\r\n                    })\r\n                }\r\n                else if(r.status === 403) {\r\n                    localStorage.removeItem('token');\r\n                    navigate('/');\r\n                }\r\n                else if(r.status === 404) {\r\n                    alert(\"Utilizador ou parcela não existe.\");\r\n                }\r\n                else {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n            });\r\n    }\r\n\r\n    function addInfoWindow(lat, lng, parcelName){\r\n        let info =\r\n            <InfoWindow\r\n                position={{lat:lat, lng:lng}}\r\n                onCloseClick={ () => setInfoWindow(<></>)}\r\n            >\r\n                <Button id=\"report-parcel_ProposedParcelsEntity\" onClick={() => navigate(\"/make-report?id=\" + parcelName)} type=\"submit\">Reportar</Button>\r\n            </InfoWindow>\r\n\r\n        setInfoWindow(info);\r\n    }\r\n\r\n    function onLoad() {\r\n        let centerPoint = getCenterOfBounds(JSON.parse(props.obj.coordinates));\r\n        setCenterLoc(centerPoint);\r\n\r\n        let arr = orderByDistance(centerPoint, JSON.parse(props.obj.coordinates));\r\n        let mostDistant = arr[arr.length-1];\r\n        let dist = getDistance(centerPoint, mostDistant, 1);\r\n        setZoom(Math.round(97.1634 - (69.2069*Math.pow((dist*9), 0.0174478)))-1);\r\n    }\r\n\r\n    return <>\r\n        <Modal\r\n            onShow={loadModalValues}\r\n            show={props.show}\r\n            onHide={handleClose}\r\n            backdrop=\"static\"\r\n            dialogClassName=\"modal-xl\"\r\n            keyboard={false}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title> Parcela: {props.obj.name} </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n\r\n                <GoogleMap\r\n                    mapContainerStyle={modalContainerStyle}\r\n                    center={{\r\n                        lat:centerLoc.latitude,\r\n                        lng:centerLoc.longitude}\r\n                    }\r\n                    zoom={zoom}\r\n                    tilt={0}\r\n                    onLoad={(m) => {onLoad(props.obj.coordinates); setMapRef(m)}}\r\n                    onCenterChanged={() => setCenterLoc(mapRef.getCenter())}\r\n                    onClick={() => setInfoWindow(<></>)}\r\n                >\r\n                    <Polygon\r\n                        paths={JSON.parse(props.obj.coordinates === undefined ? \"[]\" : props.obj.coordinates)}\r\n                        options={options}\r\n                    />\r\n                    {nearbyParcels}\r\n                    {infoWindow}\r\n                </GoogleMap>\r\n            </Modal.Body>\r\n        </Modal>\r\n    </>\r\n}\r\n\r\nexport default ParcelNearbyModal;","import \"./MyParcels.css\"\r\n\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport {Badge, Button, Card, Col, Row, Spinner} from \"react-bootstrap\";\r\nimport {useEffect, useState} from 'react'\r\nimport React from 'react';\r\nimport {GoogleMap, LoadScript, Polygon} from \"@react-google-maps/api\";\r\nimport ParcelDetailsModal from \"../util/ParcelDetailsModal/ParcelDetailsModal\";\r\nimport ParcelEditModal from \"../util/ParcelEditModal/ParcelEditModal\";\r\nimport ParcelNearbyModal from \"../util/ParcelNearbyModal/ParcelNearbyModal\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport CheckIfActive from \"../util/CheckIfActive\";\r\n\r\nconst containerStyle = {\r\n    width: '75vw',\r\n    height: '93.5vh'\r\n};\r\n\r\nconst center = {\r\n    lat: 38.660677,\r\n    lng: -9.205971\r\n};\r\n\r\nconst options = {\r\n    fillColor: \"Khaki\",\r\n    fillOpacity: 0.2,\r\n    strokeColor: \"DarkOrange\",\r\n    strokeOpacity: 1,\r\n    strokeWeight: 2,\r\n    clickable: false,\r\n    draggable: false,\r\n    editable: false,\r\n    geodesic: false,\r\n    zIndex: 1\r\n}\r\n\r\n\r\nconst MyParcels = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const [requested, setRequested] = useState(false);\r\n    const [obj, setObj] = useState({});\r\n\r\n    const [paths, setPaths] = useState([]);\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [editShow, setEditShow] = useState(false);\r\n    const [nearbyShow, setNearbyShow] = useState(false);\r\n\r\n    const handleShow = (obj) => {\r\n        console.log(\"show\")\r\n        setObj(obj);\r\n        setShow(true);\r\n        setEditShow(false);\r\n        setNearbyShow(false);\r\n    }\r\n    const handleEditShow = (obj) => {\r\n        console.log(\"showedit\")\r\n        setObj(obj);\r\n        setShow(false);\r\n        setEditShow(true);\r\n        setNearbyShow(false);\r\n    }\r\n    const handleNearbyShow = (obj) => {\r\n        console.log(\"shownearby\")\r\n        setObj(obj);\r\n        setShow(false);\r\n        setEditShow(false);\r\n        setNearbyShow(true);\r\n    }\r\n\r\n    const [parcelList, setPList] = useState([]);\r\n\r\n    let xmlhttp = new XMLHttpRequest();\r\n\r\n    let arr = [];\r\n    let pathsArr = [];\r\n\r\n    function isParcelVerified(verified) {\r\n        if(verified === \"APPROVED\") {\r\n            return(\r\n                <Badge pill bg=\"success\">Verificada</Badge>\r\n            )\r\n        }\r\n        else if(verified === \"REJECTED\") {\r\n            return(\r\n                <Badge pill bg=\"danger\">Rejeitada</Badge>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <Badge pill bg=\"secondary\">Por verificar</Badge>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState === 4) {\r\n                if (xmlhttp.status === 200) {\r\n                    const obj = JSON.parse(xmlhttp.responseText);\r\n                    for(let i = 0; i<obj.length; i++){\r\n                        arr.push(<Card className=\"parcel-card_MyParcels\" style={{ width: '15rem',cursor: \"default\"}}>\r\n                            <Card.Img className=\"parcel_picture\" variant=\"top\" src={obj[i].photoURL} />\r\n                            <Card.Body>\r\n                                <Card.Title>{obj[i].name} {isParcelVerified(obj[i].isApproved)} </Card.Title>\r\n                                <Card.Text>\r\n                                    <label className={\"w-100 text-truncate\"}>Área: {obj[i].area}m²</label><br/>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].freguesia}>Freguesia: {obj[i].freguesia}</label><br/>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].concelho}>Concelho: {obj[i].concelho}</label><br/>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].distrito}>Distrito: {obj[i].distrito}</label><br/>\r\n                                </Card.Text>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Button id=\"show-parcel-details_MyParcels\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => handleShow(obj[i])}>Detalhes</Button>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Button id=\"edit-parcel_MyParcels\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => handleEditShow(obj[i])}>Editar</Button>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Button id=\"nearby-parcel_MyParcels\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => handleNearbyShow(obj[i])}>Parcelas Próximas</Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card.Body>\r\n                        </Card>);\r\n\r\n                        pathsArr.push(\r\n                            <Polygon\r\n                                paths={JSON.parse(obj[i].coordinates)}\r\n                                options={options}\r\n                            />\r\n                        );\r\n                    }\r\n                    setPList(arr);\r\n                    setPaths(pathsArr);\r\n                }\r\n                else if(xmlhttp.status === 403){\r\n                    localStorage.removeItem('token');\r\n                    navigate('/');\r\n                }\r\n                else if(xmlhttp.status === 404){\r\n                    alert(\"Utilizador não existe.\");\r\n                }\r\n                else {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n                setRequested(false);\r\n            }\r\n        }\r\n\r\n        var myObj = {token:localStorage.getItem('token')};\r\n        var myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/owned\");\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n        setRequested(true);\r\n    }, [])\r\n\r\n\r\n    return(\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <CheckIfActive />\r\n            <TopBar />\r\n\r\n            <LoadScript googleMapsApiKey=\"AIzaSyC3yXGtu-O5HD8LhlQ18w68dby2HQ2X3O4\">\r\n\r\n                <ParcelDetailsModal obj={obj} show={show} setShow={setShow}/>\r\n\r\n                <ParcelEditModal obj={obj} show={editShow} setShow={setEditShow}/>\r\n\r\n                <ParcelNearbyModal obj={obj} show={nearbyShow} setShow={setNearbyShow}/>\r\n\r\n                <div id=\"myParcelsBody\">\r\n\r\n                    <GoogleMap\r\n                        mapContainerStyle={containerStyle}\r\n                        center={center}\r\n                        zoom={10}\r\n                        tilt={0}\r\n                    >\r\n                        {paths}\r\n                    </GoogleMap>\r\n\r\n                    <div className=\"body_MyParcels\">\r\n                        <div className=\"container_MyParcels\">\r\n                            {requested? <Spinner id=\"spinner_ConfirmationPage\" variant=\"success\" animation=\"border\" role=\"status\">\r\n                                <span className=\"visually-hidden\">Carregando...</span>\r\n                            </Spinner> : parcelList}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </LoadScript>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyParcels","import \"./ProposedParcelsEntity.css\"\r\n\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport {useEffect, useState} from 'react'\r\nimport React, { Component }  from 'react';\r\nimport {Button, ButtonGroup, Card, Col, Modal, Row, Spinner} from \"react-bootstrap\";\r\nimport {GoogleMap, LoadScript} from \"@react-google-maps/api\";\r\nimport ParcelEditModal from \"../util/ParcelEditModal/ParcelEditModal\";\r\nimport ParcelDetailsModal from \"../util/ParcelDetailsModal/ParcelDetailsModal\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport CheckIfActive from \"../util/CheckIfActive\";\r\n\r\nconst center = {\r\n    lat: 38.660677,\r\n    lng: -9.205971\r\n};\r\n\r\nconst modalContainerStyle = {\r\n    width: '72vw',\r\n    height: '45vh'\r\n};\r\n\r\nconst ProposedParcelsEntity = () => {\r\n    const [requested, setRequested] = useState(false);\r\n    const [obj, setObj] = useState({});\r\n    const navigate = useNavigate();\r\n    const [show, setShow] = useState(false);\r\n    const handleShow = (obj) => {\r\n        console.log(\"show\")\r\n        setObj(obj);\r\n        setShow(true);\r\n    }\r\n    const handleClose = () => setShow(false);\r\n\r\n    const [parcelList, setPList] = useState([]);\r\n\r\n    let xmlhttp = new XMLHttpRequest();\r\n    let arr = [];\r\n\r\n\r\n    function addManager(parcel) {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState === 4) {\r\n                if (xmlhttp.status === 200) {\r\n                    alert(\"Parcel accepted successfully\");\r\n                    window.location.reload();\r\n                }\r\n                else if(xmlhttp.status === 403) {\r\n                    localStorage.removeItem('token');\r\n                    navigate('/');\r\n                }\r\n                else if(xmlhttp.status === 404) {\r\n                    alert(\"Utilizador ou parcela não existe.\");\r\n                }\r\n                else if(xmlhttp.status === 409){\r\n                    alert(\"A parcela já tem um gerente.\");\r\n                }\r\n                else {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n            }\r\n        }\r\n        let myObj = {\r\n            token: localStorage.getItem('token'),\r\n        };\r\n        let myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/acceptrequest/\"+parcel.owner+\"_\"+parcel.name);\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n    function removeManager(parcel) {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState === 4) {\r\n                if (xmlhttp.status === 200) {\r\n                    alert(\"Parcel rejected successfully\");\r\n                    window.location.reload();\r\n                }\r\n                else if(xmlhttp.status === 403) {\r\n                    localStorage.removeItem('token');\r\n                    navigate('/');\r\n                }\r\n                else if(xmlhttp.status === 404) {\r\n                    alert(\"Utilizador ou parcela não existe.\");\r\n                }\r\n                else if(xmlhttp.status === 409){\r\n                    alert(\"A parcela já tem um gerente.\");\r\n                }\r\n                else {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n            }\r\n        }\r\n        let myObj = {\r\n            token: localStorage.getItem('token'),\r\n        };\r\n        let myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/rejectrequest/\"+parcel.owner+\"_\"+parcel.name);\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n    useEffect(() => {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState == 4) {\r\n                if (xmlhttp.status == 200) {\r\n                    const obj = JSON.parse(xmlhttp.responseText);\r\n                    for(let i = 0; i<obj.length; i++){\r\n                        arr.push(<Card className=\"parcel-card_ProposedParcelsEntity\" style={{ width: '15rem',cursor: \"pointer\"}}>\r\n                            <Card.Img className=\"parcel_picture\" variant=\"top\" src={obj[i].photoURL} />\r\n                            <Card.Body>\r\n                                <Card.Title>{obj[i].name} </Card.Title>\r\n                                <Card.Text>\r\n                                    <label className={\"w-100 text-truncate\"}>Área: {obj[i].area}m²</label><br/>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].freguesia}>Freguesia: {obj[i].freguesia}</label><br/>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].concelho}>Concelho: {obj[i].concelho}</label><br/>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].distrito}>Distrito: {obj[i].distrito}</label><br/>\r\n                                </Card.Text>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Button id=\"show-parcel-details_ProposedParcelsEntity\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => handleShow(obj[i])}>Detalhes</Button>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Button id=\"report-parcel_ProposedParcelsEntity\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => navigate(\"/make-report?id=\" + obj[i].owner + \"_\" + obj[i].name)}>Reportar</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Button id=\"confirm-parcel_ProposedParcelsEntity\" onClick={() => addManager(obj[i])} className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\">Aceitar</Button>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Button id=\"reject-parcel_ProposedParcelsEntity\" onClick={() => removeManager(obj[i])} className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\">Rejeitar</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>);\r\n                    }\r\n                    setPList(arr);\r\n                }\r\n                else if(xmlhttp.status === 403){\r\n                    localStorage.removeItem('token');\r\n                    navigate('/');\r\n                }\r\n                else if(xmlhttp.status === 404){\r\n                    alert(\"Utilizador não existe.\");\r\n                }\r\n                else {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n                setRequested(false);\r\n            }\r\n        }\r\n\r\n        var myObj = {token:localStorage.getItem('token')};\r\n        var myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/getrequested\");\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n        setRequested(true);\r\n    }, [])\r\n\r\n    return(\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <CheckIfActive />\r\n            <TopBar />\r\n\r\n            <LoadScript googleMapsApiKey=\"AIzaSyC3yXGtu-O5HD8LhlQ18w68dby2HQ2X3O4\">\r\n                <ParcelDetailsModal obj={obj} show={show} setShow={setShow}/>\r\n            </LoadScript>\r\n\r\n\r\n            <div className=\"proposedParcelsEntityBody\">\r\n                <div className=\"container_ProposedParcelsEntity\">\r\n                    {requested? <Spinner id=\"spinner_ConfirmationPage\" variant=\"success\"  animation=\"border\" role=\"status\">\r\n                        <span className=\"visually-hidden\">Carregando...</span>\r\n                    </Spinner> : parcelList}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProposedParcelsEntity","import \"./ParcelsEntity.css\"\r\n\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport {Badge, Button, ButtonGroup, Card, Col, Dropdown, Modal, Row, Spinner} from \"react-bootstrap\";\r\nimport {useEffect, useState} from 'react'\r\nimport React from 'react';\r\nimport {GoogleMap, LoadScript, Polygon} from \"@react-google-maps/api\";\r\nimport ParcelDetailsModal from \"../util/ParcelDetailsModal/ParcelDetailsModal\";\r\nimport ParcelEditModal from \"../util/ParcelEditModal/ParcelEditModal\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport CheckIfActive from \"../util/CheckIfActive\";\r\n\r\n\r\nconst containerStyle = {\r\n    width: '75vw',\r\n    height: '93.5vh'\r\n};\r\n\r\nconst center = {\r\n    lat: 38.660677,\r\n    lng: -9.205971\r\n};\r\n\r\nconst options = {\r\n    fillColor: \"Khaki\",\r\n    fillOpacity: 0.3,\r\n    strokeColor: \"DarkOrange\",\r\n    strokeOpacity: 1,\r\n    strokeWeight: 2,\r\n    clickable: false,\r\n    draggable: false,\r\n    editable: false,\r\n    geodesic: false,\r\n    zIndex: 1\r\n}\r\n\r\n\r\nconst ParcelsEntity = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const [requested, setRequested] = useState(false);\r\n    const [obj, setObj] = useState({});\r\n\r\n    const [paths, setPaths] = useState([]);\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleShow = (obj) => {\r\n        console.log(\"show\")\r\n        setObj(obj);\r\n        setShow(true);\r\n    }\r\n\r\n    const handleClose = () => setShow(false);\r\n\r\n    const [parcelList, setPList] = useState([]);\r\n\r\n    let xmlhttp = new XMLHttpRequest();\r\n\r\n    let arr = [];\r\n    let pathsArr = [];\r\n\r\n    function removeManager(parcelName, owner){\r\n        let xmlhttp = new XMLHttpRequest();\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState === 4) {\r\n                if (xmlhttp.status === 200) {\r\n                    navigate(\"/parcels-entity\");\r\n                }\r\n                else if(xmlhttp.status === 403) {\r\n                    localStorage.removeItem('token');\r\n                    navigate('/');\r\n                }\r\n                else if(xmlhttp.status === 404) {\r\n                    alert(\"Utilizador ou parcela não existe.\");\r\n                }\r\n                else {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n            }\r\n        }\r\n        let myObj = {token:localStorage.getItem('token')};\r\n        let myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/removemanager/\" + owner + \"_\" + parcelName);\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState === 4) {\r\n                if (xmlhttp.status === 200) {\r\n                    const obj = JSON.parse(xmlhttp.responseText);\r\n                    for(let i = 0; i<obj.length; i++){\r\n                        arr.push(<Card className=\"parcel-card_ParcelsEntity\" style={{ width: '15rem',cursor: \"pointer\"}}>\r\n                            <Card.Img className=\"parcel_picture\" variant=\"top\" src={obj[i].photoURL} />\r\n                            <Card.Body>\r\n                                <Card.Title>{obj[i].name} </Card.Title>\r\n                                <Card.Text>\r\n                                    <label className={\"w-100 text-truncate\"}>Área: {obj[i].area}m²</label><br/>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].freguesia}>Freguesia: {obj[i].freguesia}</label><br/>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].concelho}>Concelho: {obj[i].concelho}</label><br/>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].distrito}>Distrito: {obj[i].distrito}</label><br/>\r\n                                </Card.Text>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Button id=\"show-parcel-details_ParcelsEntity\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => handleShow(obj[i])}>Detalhes</Button>\r\n                                    </Col>\r\n                                    </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Button id=\"remove-parcel_ParcelsEntity\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => removeManager(obj[i].name, obj[i].owner)}>Remover</Button>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Button id=\"report-parcel_ParcelsEntity\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => navigate(\"/make-report?id=\" + obj[i].owner + \"_\" + obj[i].name)}>Reportar</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>);\r\n\r\n                        pathsArr.push(\r\n                            <Polygon\r\n                                paths={JSON.parse(obj[i].coordinates)}\r\n                                options={options}\r\n                            />\r\n                        );\r\n                    }\r\n                    setPList(arr);\r\n                    setPaths(pathsArr);\r\n                }\r\n                else if(xmlhttp.status === 403) {\r\n                    localStorage.removeItem('token');\r\n                    navigate('/');\r\n                }\r\n                else if(xmlhttp.status === 404) {\r\n                    alert(\"Utilizador não existe.\");\r\n                }\r\n                else {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n                setRequested(false);\r\n            }\r\n        }\r\n\r\n        let myObj = {token:localStorage.getItem('token')};\r\n        let myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/managed\");\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n        setRequested(true);\r\n    }, [])\r\n\r\n\r\n    return(\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <CheckIfActive />\r\n            <TopBar />\r\n\r\n            <LoadScript googleMapsApiKey=\"AIzaSyC3yXGtu-O5HD8LhlQ18w68dby2HQ2X3O4\">\r\n\r\n                <ParcelDetailsModal obj={obj} show={show} setShow={setShow}/>\r\n\r\n                <div id=\"ParcelsEntityBody\">\r\n\r\n                    <GoogleMap\r\n                        mapContainerStyle={containerStyle}\r\n                        center={center}\r\n                        zoom={10}\r\n                        tilt={0}\r\n                    >\r\n                        {paths}\r\n                    </GoogleMap>\r\n\r\n                    <div className=\"body_ParcelsEntity\">\r\n                        <div className=\"container_ParcelsEntity\">\r\n                            {requested? <Spinner id=\"spinner_ConfirmationPage\" variant=\"success\" animation=\"border\" role=\"status\">\r\n                                <span className=\"visually-hidden\">Carregando...</span>\r\n                            </Spinner> : parcelList}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </LoadScript>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ParcelsEntity","import \"./ApproveParcels.css\"\r\n\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport {useEffect, useState} from 'react'\r\nimport React, { Component }  from 'react';\r\nimport {Button, ButtonGroup, Card, Col, Container, Dropdown, Modal, Row, Spinner} from \"react-bootstrap\";\r\nimport {GoogleMap, LoadScript} from \"@react-google-maps/api\";\r\nimport ParcelDetailsModal from \"../util/ParcelDetailsModal/ParcelDetailsModal\";\r\nimport ParcelEditModal from \"../util/ParcelEditModal/ParcelEditModal\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport CheckIfActive from \"../util/CheckIfActive\";\r\n\r\n\r\nconst ApproveParcels = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const [requested, setRequested] = useState(false);\r\n    const [obj, setObj] = useState({});\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [editShow, setEditShow] = useState(false);\r\n\r\n    const handleShow = (obj) => {\r\n        console.log(\"show\")\r\n        setObj(obj)\r\n        setShow(true);\r\n        setEditShow(false);\r\n    }\r\n\r\n    const handleEditShow = (obj) => {\r\n        console.log(\"showedit\")\r\n        setObj(obj)\r\n        setShow(false);\r\n        setEditShow(true);\r\n    }\r\n\r\n    const [parcelList, setPList] = useState([]);\r\n\r\n    let xmlhttp = new XMLHttpRequest();\r\n    let arr = [];\r\n\r\n    function approveParcel(parcel) {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState === 4) {\r\n                if (xmlhttp.status === 200) {\r\n                    alert(\"Parcela aprovada com sucesso.\");\r\n                    window.location.reload();\r\n                }\r\n                else if(xmlhttp.status === 403){\r\n                    localStorage.removeItem('token');\r\n                    navigate('/');\r\n                }\r\n                else if(xmlhttp.status === 404){\r\n                    alert(\"Utilizador ou parcela não existe.\");\r\n                }\r\n                else if(xmlhttp.status === 409){\r\n                    alert(\"A parcela já tem um gerente.\");\r\n                }\r\n                else {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n            }\r\n        }\r\n        let myObj = {\r\n            token: localStorage.getItem('token'),\r\n        };\r\n        let myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/approve/\"+parcel.owner+\"_\"+parcel.name);\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n    function rejectParcel(parcel) {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState == 4) {\r\n                if (xmlhttp.status == 200) {\r\n                    alert(\"Parcel approved successfully\");\r\n                    window.location.reload();\r\n                }\r\n                else if(xmlhttp.status === 403){\r\n                    localStorage.removeItem('token');\r\n                    navigate('/');\r\n                }\r\n                else if(xmlhttp.status === 404){\r\n                    alert(\"Utilizador ou parcela não existe.\");\r\n                }\r\n                else if(xmlhttp.status === 409){\r\n                    alert(\"A parcela já tem um gerente.\");\r\n                }\r\n                else {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n            }\r\n        }\r\n        let myObj = {\r\n            token: localStorage.getItem('token'),\r\n        };\r\n        let myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/reject/\"+parcel.owner+\"_\"+parcel.name);\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n    useEffect(() => {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState == 4) {\r\n                if (xmlhttp.status == 200) {\r\n                    const obj = JSON.parse(xmlhttp.responseText);\r\n                    for(let i = 0; i<obj.length; i++){\r\n                        arr.push(<Card className=\"parcel-card_ApproveParcels\" style={{ width: '15rem',cursor: \"pointer\"}}>\r\n                            <Card.Img className=\"parcel_picture\" variant=\"top\" src={obj[i].photoURL} />\r\n                            <Card.Body>\r\n                                <Card.Title>{obj[i].name} </Card.Title>\r\n                                <Card.Text>\r\n                                    <label className={\"w-100 text-truncate\"}>Área: {obj[i].area}m²</label>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].freguesia}>Freguesia: {obj[i].freguesia}</label>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].concelho}>Concelho: {obj[i].concelho}</label>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].distrito}>Distrito: {obj[i].distrito}</label>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Button id=\"show-parcel-details_ApproveParcels\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => handleShow(obj[i])}>Detalhes</Button>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Button id=\"edit-parcel_ApproveParcels\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => handleEditShow(obj[i])}>Editar</Button>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Button id=\"confirm-parcel_ApproveParcels\" onClick={() => approveParcel(obj[i])} className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\">Aprovar</Button>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Button id=\"reject-parcel_ApproveParcels\" onClick={() => rejectParcel(obj[i])} className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\">Rejeitar</Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card.Text>\r\n\r\n                            </Card.Body>\r\n                        </Card>);\r\n                    }\r\n                    setPList(arr);\r\n                }\r\n                else if(xmlhttp.status === 403){\r\n                    localStorage.removeItem('token');\r\n                    navigate('/');\r\n                }\r\n                else if(xmlhttp.status === 404){\r\n                    alert(\"Utilizador não existe.\");\r\n                }\r\n                else {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n                setRequested(false);\r\n            }\r\n        }\r\n\r\n        var myObj = {token:localStorage.getItem('token')};\r\n        var myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/pendingbyregion\");\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n        setRequested(true);\r\n    }, [])\r\n\r\n    return(\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <CheckIfActive />\r\n            <TopBar />\r\n\r\n            <LoadScript googleMapsApiKey=\"AIzaSyC3yXGtu-O5HD8LhlQ18w68dby2HQ2X3O4\">\r\n\r\n                <ParcelDetailsModal obj={obj} show={show} setShow={setShow}/>\r\n\r\n                <ParcelEditModal obj={obj} show={editShow} setShow={setEditShow}/>\r\n\r\n            </LoadScript>\r\n\r\n            <div className=\"approveParcelsBody\">\r\n                <div className=\"container_ApproveParcels\">\r\n                    {requested? <Spinner id=\"spinner_ConfirmationPage\" variant=\"success\" animation=\"border\" role=\"status\">\r\n                        <span className=\"visually-hidden\">Carregando...</span>\r\n                    </Spinner> : parcelList}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ApproveParcels","import \"./ApproveParcelsAdmin.css\"\r\n\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport {useEffect, useState} from 'react'\r\nimport React from 'react';\r\nimport {Button, Card, Col, Dropdown, Form, Row, Spinner} from \"react-bootstrap\";\r\nimport {LoadScript} from \"@react-google-maps/api\";\r\nimport ParcelDetailsModal from \"../util/ParcelDetailsModal/ParcelDetailsModal\";\r\nimport ParcelEditModal from \"../util/ParcelEditModal/ParcelEditModal\";\r\nimport CSVConverter from \"../util/CSVConverter\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport CheckIfActive from \"../util/CheckIfActive\";\r\n\r\n\r\nconst ApproveParcelsAdmin = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const [requested, setRequested] = useState(false);\r\n    const [obj, setObj] = useState({});\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [editShow, setEditShow] = useState(false);\r\n\r\n    const objCSV = JSON.parse(localStorage.getItem('csv'));\r\n    const distritos = Object.keys(objCSV);\r\n    const distritoList = [];\r\n    for(let i = 0; i<distritos.length; i++) {\r\n        distritoList.push(<option>{distritos[i]}</option>)\r\n    }\r\n\r\n    const [distrito, setDistrito] = useState(\"\");\r\n    const [concelhoOptions, setConcelhoOptions] = useState([]);\r\n    const [freguesiaOptions, setFreguesiaOptions] = useState([]);\r\n\r\n    function handleSetDistrito(distrito){\r\n        setDistrito(distrito);\r\n        if(distrito !== '-'){\r\n            let listC = Object.keys(objCSV[distrito]);\r\n\r\n            let list = [];\r\n            for(let i = 0; i<listC.length; i++){\r\n                list.push(<option>{listC[i]}</option>);\r\n            }\r\n            setConcelhoOptions(list);\r\n        }\r\n        else{\r\n            setConcelhoOptions([]);\r\n        }\r\n\r\n        setFreguesiaOptions([]);\r\n    }\r\n\r\n    function handleSetConcelho(concelho){\r\n        if(concelho !== '-'){\r\n            let listF = Object.keys(objCSV[distrito][concelho]);\r\n            let list = [];\r\n            for(let i = 0; i<listF.length; i++){\r\n                list.push(<option>{listF[i]}</option>);\r\n            }\r\n            setFreguesiaOptions(list);\r\n        }\r\n        else{\r\n            setFreguesiaOptions([]);\r\n        }\r\n\r\n    }\r\n\r\n    const handleShow = (obj) => {\r\n        console.log(\"show\")\r\n        setObj(obj)\r\n        setShow(true);\r\n        setEditShow(false);\r\n    }\r\n\r\n    const handleEditShow = (obj) => {\r\n        console.log(\"showedit\")\r\n        setObj(obj)\r\n        setShow(false);\r\n        setEditShow(true);\r\n    }\r\n\r\n    const [parcelList, setPList] = useState([]);\r\n\r\n    let xmlhttp = new XMLHttpRequest();\r\n\r\n    function approveParcel(parcel) {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState === 4) {\r\n                if (xmlhttp.status === 200) {\r\n                    alert(\"Parcel approved successfully\");\r\n                    window.location.reload();\r\n                }\r\n                else if(xmlhttp.status === 403){\r\n                    localStorage.removeItem('token');\r\n                    navigate('/');\r\n                }\r\n                else if(xmlhttp.status === 404){\r\n                    alert(\"Utilizador ou parcela não existe.\");\r\n                }\r\n                else if(xmlhttp.status === 409){\r\n                    alert(\"A parcela já tem um gerente.\");\r\n                }\r\n                else {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n            }\r\n        }\r\n        let myObj = {\r\n            token: localStorage.getItem('token'),\r\n        };\r\n        let myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/approve/\"+parcel.owner+\"_\"+parcel.name);\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n    function rejectParcel(parcel) {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState === 4) {\r\n                if (xmlhttp.status === 200) {\r\n                    alert(\"Parcel approved successfully\");\r\n                    window.location.reload();\r\n                }\r\n                else if(xmlhttp.status === 403){\r\n                    localStorage.removeItem('token');\r\n                    navigate('/');\r\n                }\r\n                else if(xmlhttp.status === 404){\r\n                    alert(\"Utilizador ou parcela não existe.\");\r\n                }\r\n                else if(xmlhttp.status === 409){\r\n                    alert(\"A parcela já tem um gerente.\");\r\n                }\r\n                else {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n            }\r\n        }\r\n        let myObj = {\r\n            token: localStorage.getItem('token'),\r\n        };\r\n        let myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/reject/\"+parcel.owner+\"_\"+parcel.name);\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n    function getParcels(){\r\n        setRequested(true);\r\n        let myObj = {token:localStorage.getItem('token')};\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObj),\r\n        };\r\n\r\n        let distritoValue = document.getElementById(\"dropdown-distrito_ApproveParcelsAdmin\").value;\r\n        let concelhoValue = document.getElementById(\"dropdown-concelho_ApproveParcelsAdmin\").value;\r\n        let freguesiaValue = document.getElementById(\"dropdown-freg_ApproveParcelsAdmin\").value;\r\n\r\n        fetch(\"https://moonlit-oven-349523.appspot.com/rest/parcel/pendingbyregion/\"+distritoValue+\"/\"+concelhoValue+\"/\"+freguesiaValue, options)\r\n            .then((r) => {\r\n                if(r.ok){\r\n                    r.text().then(t => {\r\n                        let arr = JSON.parse(t);\r\n                        let auxArr = [];\r\n\r\n                        for(let i = 0; i<arr.length; i++){\r\n                            console.log()\r\n                            auxArr.push(<Card className=\"parcel-card_ApproveParcelsAdmin\" style={{ width: '15rem',cursor: \"pointer\"}}>\r\n                                <Card.Img className=\"parcel_picture_ApproveParcelsAdmin\" variant=\"top\" src={arr[i].photoURL} />\r\n                                <Card.Body>\r\n                                    <Card.Title>{arr[i].name} </Card.Title>\r\n                                    <Card.Text>\r\n                                        <label className={\"w-100 text-truncate\"}>Área: {arr[i].area}m²</label>\r\n                                        <label className={\"w-100 text-truncate\"} title={arr[i].freguesia}>Freguesia: {arr[i].freguesia}</label>\r\n                                        <label className={\"w-100 text-truncate\"} title={arr[i].concelho}>Concelho: {arr[i].concelho}</label>\r\n                                        <label className={\"w-100 text-truncate\"} title={arr[i].distrito}>Distrito: {arr[i].distrito}</label>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <Button id=\"show-parcel-details_ApproveParcelsAdmin\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => handleShow(arr[i])}>Detalhes</Button>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Button id=\"edit-parcel_ApproveParcelsAdmin\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => handleEditShow(arr[i])}>Editar</Button>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Button id=\"confirm-parcel_ApproveParcelsAdmin\" onClick={() => approveParcel(arr[i])} className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\">Aprovar</Button>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Button id=\"reject-parcel_ApproveParcelsAdmin\" onClick={() => rejectParcel(arr[i])} className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\">Rejeitar</Button>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Card.Text>\r\n\r\n                                </Card.Body>\r\n                            </Card>);\r\n                        }\r\n                        setPList(auxArr);\r\n                        setRequested(false);\r\n                    });\r\n                }\r\n                else if(r.status === 403) {\r\n                    localStorage.removeItem('token');\r\n                    navigate('/');\r\n                }\r\n                else if(r.status === 404){\r\n                    alert(\"Utilizador não existe.\");\r\n                }\r\n                else {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n            }).catch( () => setRequested(false));\r\n\r\n    }\r\n\r\n    return(\r\n        <><CSVConverter/>\r\n            <CheckIfLoggedOut />\r\n            <CheckIfActive />\r\n            <TopBar />\r\n\r\n            <div className=\"buttons_ApproveParcelsAdmin\">\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group className=\"mt-3\" controlId=\"dropdown-distrito_ApproveParcelsAdmin\">\r\n                            <Form.Select defaultValue=\"-\" className=\"map_fields\" onChange={(e) => handleSetDistrito(e.target.value)}>\r\n                                <option value=\"-\">Todos os Distritos</option>\r\n                                {distritoList}\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                        <Form.Group className=\"mt-3\" controlId=\"dropdown-concelho_ApproveParcelsAdmin\">\r\n                            <Form.Select defaultValue=\"-\" className=\"map_fields\" onChange={(e) => handleSetConcelho(e.target.value)}>\r\n                                <option value=\"-\">Todos os Concelhos</option>\r\n                                {concelhoOptions}\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                        <Form.Group className=\"mt-3\" controlId=\"dropdown-freg_ApproveParcelsAdmin\">\r\n                            <Form.Select defaultValue=\"-\" className=\"map_fields\">\r\n                                <option value=\"-\">Todas as Freguesias</option>\r\n                                {freguesiaOptions}\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                        <Button onClick={getParcels} id=\"search_ApproveParcelsAdmin\" variant=\"success\">Procurar</Button>\r\n                    </Col>\r\n\r\n                </Row>\r\n            </div>\r\n\r\n            <LoadScript googleMapsApiKey=\"AIzaSyC3yXGtu-O5HD8LhlQ18w68dby2HQ2X3O4\">\r\n\r\n                <ParcelDetailsModal obj={obj} show={show} setShow={setShow}/>\r\n\r\n                <ParcelEditModal obj={obj} show={editShow} setShow={setEditShow}/>\r\n\r\n            </LoadScript>\r\n\r\n            <div className=\"approveParcelsAdminBody\">\r\n                <div className=\"container_ApproveParcelsAdmin\">\r\n                    {requested? <Spinner id=\"spinner_ConfirmationPage\" animation=\"border\" variant=\"success\" role=\"status\">\r\n                                    <span className=\"visually-hidden\">Carregando...</span>\r\n                                </Spinner> : parcelList}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ApproveParcelsAdmin","import \"./AllParcels.css\"\r\n\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport {useEffect, useState} from 'react'\r\nimport React, { Component }  from 'react';\r\nimport {Button, ButtonGroup, Card, Col, Container, Dropdown, Modal, Row, Spinner} from \"react-bootstrap\";\r\nimport {GoogleMap, LoadScript, Polygon} from \"@react-google-maps/api\";\r\nimport ParcelDetailsModal from \"../util/ParcelDetailsModal/ParcelDetailsModal\";\r\nimport ParcelEditModal from \"../util/ParcelEditModal/ParcelEditModal\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport CheckIfActive from \"../util/CheckIfActive\";\r\n\r\nconst containerStyle = {\r\n    width: '75vw',\r\n    height: '93.5vh'\r\n};\r\n\r\nconst center = {\r\n    lat: 38.660677,\r\n    lng: -9.205971\r\n};\r\n\r\nconst options = {\r\n    fillColor: \"Khaki\",\r\n    fillOpacity: 0.3,\r\n    strokeColor: \"DarkOrange\",\r\n    strokeOpacity: 1,\r\n    strokeWeight: 2,\r\n    clickable: false,\r\n    draggable: false,\r\n    editable: false,\r\n    geodesic: false,\r\n    zIndex: 1\r\n}\r\n\r\nconst AllParcels = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const [requested, setRequested] = useState(false);\r\n    const [obj, setObj] = useState({});\r\n\r\n    const [paths, setPaths] = useState([]);\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [editShow, setEditShow] = useState(false);\r\n\r\n    const handleShow = (obj) => {\r\n        console.log(\"show\")\r\n        setObj(obj)\r\n        setShow(true);\r\n        setEditShow(false);\r\n    }\r\n\r\n    const handleEditShow = (obj) => {\r\n        console.log(\"showedit\")\r\n        setObj(obj)\r\n        setShow(false);\r\n        setEditShow(true);\r\n    }\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleEditClose = () => setEditShow(false);\r\n\r\n    const [parcelList, setPList] = useState([]);\r\n\r\n    let xmlhttp = new XMLHttpRequest();\r\n    let arr = [];\r\n\r\n    useEffect(() => {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState === 4) {\r\n                if (xmlhttp.status === 200) {\r\n                    const obj = JSON.parse(xmlhttp.responseText);\r\n                    let pathsArr = [];\r\n                    for(let i = 0; i<obj.length; i++){\r\n\r\n\r\n                        arr.push(<Card className=\"parcel-card_AllParcels\" style={{ width: '15rem',cursor: \"pointer\"}}>\r\n                            <Card.Img className=\"parcel_picture_AllParcels\" variant=\"top\" src={obj[i].photoURL} />\r\n                            <Card.Body>\r\n                                <Card.Title>{obj[i].name} </Card.Title>\r\n                                <Card.Text>\r\n                                    <label className={\"w-100 text-truncate\"}>Área: {obj[i].area}m²</label>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].freguesia}>Freguesia: {obj[i].freguesia}</label>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].concelho}>Concelho: {obj[i].concelho}</label>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].distrito}>Distrito: {obj[i].distrito}</label>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Button id=\"show-parcel-details_AllParcels\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => handleShow(obj[i])}>Detalhes</Button>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Button id=\"edit-parcel_AllParcels\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => handleEditShow(obj[i])}>Editar</Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card.Text>\r\n\r\n                            </Card.Body>\r\n                        </Card>);\r\n                        pathsArr.push(\r\n                            <Polygon\r\n                                paths={JSON.parse(obj[i].coordinates)}\r\n                                options={options}\r\n                            />\r\n                        );\r\n                    }\r\n                    setPList(arr);\r\n                    setPaths(pathsArr);\r\n                }\r\n                else if(xmlhttp.status === 403){\r\n                    localStorage.removeItem('token');\r\n                    navigate('/');\r\n                }\r\n                else if(xmlhttp.status === 404){\r\n                    alert(\"Utilizador não existe.\");\r\n                }\r\n                else {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n                setRequested(false);\r\n            }\r\n        }\r\n\r\n        var myObj = {token:localStorage.getItem('token')};\r\n        var myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/approvedbyregion\");\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n        setRequested(true);\r\n    }, [])\r\n\r\n    return(<>\r\n        <CheckIfLoggedOut />\r\n        <CheckIfActive />\r\n        <TopBar />\r\n\r\n            <LoadScript googleMapsApiKey=\"AIzaSyC3yXGtu-O5HD8LhlQ18w68dby2HQ2X3O4\">\r\n\r\n                <ParcelDetailsModal obj={obj} show={show} setShow={setShow}/>\r\n\r\n                <ParcelEditModal obj={obj} show={editShow} setShow={setEditShow}/>\r\n\r\n                <div id=\"allParcelsBody\">\r\n\r\n                    <GoogleMap\r\n                        mapContainerStyle={containerStyle}\r\n                        center={center}\r\n                        zoom={10}\r\n                        tilt={0}\r\n                    >\r\n                        {paths}\r\n                    </GoogleMap>\r\n\r\n                    <div className=\"body_AllParcels\">\r\n                        <div className=\"container_AllParcels\">\r\n                            {requested? <Spinner id=\"spinner_ConfirmationPage\" variant=\"success\" animation=\"border\" role=\"status\">\r\n                                <span className=\"visually-hidden\">Carregando...</span>\r\n                            </Spinner> : parcelList}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </LoadScript>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AllParcels","import \"./AllParcelsAdmin.css\"\r\n\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport {useEffect, useState} from 'react'\r\nimport React from 'react';\r\nimport {Button, Card, Col, Dropdown, Form, Row, Spinner} from \"react-bootstrap\";\r\nimport ParcelDetailsModal from \"../util/ParcelDetailsModal/ParcelDetailsModal\";\r\nimport ParcelEditModal from \"../util/ParcelEditModal/ParcelEditModal\";\r\nimport {GoogleMap, LoadScript, Polygon} from \"@react-google-maps/api\";\r\nimport CSVConverter from \"../util/CSVConverter\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport CheckIfActive from \"../util/CheckIfActive\";\r\n\r\nconst containerStyle = {\r\n    width: '75vw',\r\n    height: '100%'\r\n};\r\n\r\nconst center = {\r\n    lat: 38.660677,\r\n    lng: -9.205971\r\n};\r\n\r\nconst optionsPoly = {\r\n    fillColor: \"Khaki\",\r\n    fillOpacity: 0.2,\r\n    strokeColor: \"DarkOrange\",\r\n    strokeOpacity: 1,\r\n    strokeWeight: 2,\r\n    clickable: false,\r\n    draggable: false,\r\n    editable: false,\r\n    geodesic: false,\r\n    zIndex: 1\r\n}\r\n\r\nconst AllParcelsAdmin = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const [requested, setRequested] = useState(false);\r\n    const [obj, setObj] = useState({});\r\n\r\n    const [paths, setPaths] = useState([]);\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [editShow, setEditShow] = useState(false);\r\n\r\n    const objCSV = JSON.parse(localStorage.getItem('csv'));\r\n    const distritos = Object.keys(objCSV);\r\n    const distritoList = [];\r\n    for(let i = 0; i<distritos.length; i++) {\r\n        distritoList.push(<option>{distritos[i]}</option>)\r\n    }\r\n\r\n    const [distrito, setDistrito] = useState(\"\");\r\n    const [concelhoOptions, setConcelhoOptions] = useState([]);\r\n    const [freguesiaOptions, setFreguesiaOptions] = useState([]);\r\n\r\n    function handleSetDistrito(distrito){\r\n        setDistrito(distrito);\r\n        if(distrito !== '-'){\r\n            let listC = Object.keys(objCSV[distrito]);\r\n\r\n            let list = [];\r\n            for(let i = 0; i<listC.length; i++){\r\n                list.push(<option>{listC[i]}</option>);\r\n            }\r\n            setConcelhoOptions(list);\r\n        }\r\n        else{\r\n            setConcelhoOptions([]);\r\n        }\r\n\r\n        setFreguesiaOptions([]);\r\n    }\r\n\r\n    function handleSetConcelho(concelho){\r\n        if(concelho !== '-'){\r\n            let listF = Object.keys(objCSV[distrito][concelho]);\r\n            let list = [];\r\n            for(let i = 0; i<listF.length; i++){\r\n                list.push(<option>{listF[i]}</option>);\r\n            }\r\n            setFreguesiaOptions(list);\r\n        }\r\n        else{\r\n            setFreguesiaOptions([]);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const handleShow = (obj) => {\r\n        console.log(\"show\")\r\n        setObj(obj)\r\n        setShow(true);\r\n        setEditShow(false);\r\n    }\r\n\r\n    const handleEditShow = (obj) => {\r\n        console.log(\"showedit\")\r\n        setObj(obj)\r\n        setShow(false);\r\n        setEditShow(true);\r\n    }\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleEditClose = () => setEditShow(false);\r\n\r\n    const [parcelList, setPList] = useState([]);\r\n\r\n    function getParcels(){\r\n        setRequested(true);\r\n        let myObj = {token:localStorage.getItem('token')};\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObj),\r\n        };\r\n\r\n        let distritoValue = document.getElementById(\"dropdown-distrito_AllParcelsAdmin\").value;\r\n        let concelhoValue = document.getElementById(\"dropdown-concelho_AllParcelsAdmin\").value;\r\n        let freguesiaValue = document.getElementById(\"dropdown-freg_AllParcelsAdmin\").value;\r\n\r\n        fetch(\"https://moonlit-oven-349523.appspot.com/rest/parcel/approvedbyregion/\"+distritoValue+\"/\"+concelhoValue+\"/\"+freguesiaValue, options)\r\n            .then((r) => {\r\n                if(r.ok){\r\n                    r.text().then(t => {\r\n                        let arr = JSON.parse(t);\r\n                        let auxArr = [];\r\n                        let pathsArr = [];\r\n                        for(let i = 0; i<arr.length; i++){\r\n                            auxArr.push(<Card className=\"parcel-card_AllParcelsAdmin\" style={{ width: '15rem',cursor: \"pointer\"}}>\r\n                                <Card.Img className=\"parcel_picture_AllParcelsAdmin\" variant=\"top\" src={arr[i].photoURL} />\r\n                                <Card.Body>\r\n                                    <Card.Title>{arr[i].name} </Card.Title>\r\n                                    <Card.Text>\r\n                                        <label className={\"w-100 text-truncate\"}>Área: {arr[i].area}m²</label>\r\n                                        <label className={\"w-100 text-truncate\"} title={arr[i].freguesia}>Freguesia: {arr[i].freguesia}</label>\r\n                                        <label className={\"w-100 text-truncate\"} title={arr[i].concelho}>Concelho: {arr[i].concelho}</label>\r\n                                        <label className={\"w-100 text-truncate\"} title={arr[i].distrito}>Distrito: {arr[i].distrito}</label>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <Button id=\"show-parcel-details_AllParcels\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => handleShow(arr[i])}>Detalhes</Button>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Button id=\"edit-parcel_AllParcels\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => handleEditShow(arr[i])}>Editar</Button>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Card.Text>\r\n\r\n                                </Card.Body>\r\n                            </Card>);\r\n                            pathsArr.push(\r\n                                <Polygon\r\n                                    paths={JSON.parse(arr[i].coordinates)}\r\n                                    options={optionsPoly}\r\n                                />\r\n                            );\r\n                        }\r\n                        setPaths(pathsArr);\r\n                        setPList(auxArr);\r\n                        setRequested(false);\r\n                    });\r\n                }\r\n                else if(r.status === 403){\r\n                    localStorage.removeItem('token');\r\n                    navigate('/');\r\n                }\r\n                else if(r.status === 404){\r\n                    alert(\"Utilizador não existe.\");\r\n                }\r\n                else {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n            }).catch(() => setRequested(false));\r\n\r\n    }\r\n\r\n    return(<>\r\n            <CSVConverter/>\r\n        <CheckIfLoggedOut />\r\n        <CheckIfActive />\r\n        <TopBar />\r\n\r\n            <div className=\"buttons_AllParcelsAdmin\">\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group className=\"mt-3\" controlId=\"dropdown-distrito_AllParcelsAdmin\">\r\n                            <Form.Select defaultValue=\"-\" className=\"map_fields\" onChange={(e) => handleSetDistrito(e.target.value)}>\r\n                                <option value=\"-\">Todos os Distritos</option>\r\n                                {distritoList}\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                        <Form.Group className=\"mt-3\" controlId=\"dropdown-concelho_AllParcelsAdmin\">\r\n                            <Form.Select defaultValue=\"-\" className=\"map_fields\" onChange={(e) => handleSetConcelho(e.target.value)}>\r\n                                <option value=\"-\">Todos os Concelhos</option>\r\n                                {concelhoOptions}\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                        <Form.Group className=\"mt-3\" controlId=\"dropdown-freg_AllParcelsAdmin\">\r\n                            <Form.Select defaultValue=\"-\" className=\"map_fields\">\r\n                                <option value=\"-\">Todas as Freguesias</option>\r\n                                {freguesiaOptions}\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                        <Button onClick={getParcels} id=\"search_AllParcelsAdmin\" variant=\"success\">Procurar</Button>\r\n                    </Col>\r\n\r\n                </Row>\r\n            </div>\r\n\r\n\r\n            <LoadScript googleMapsApiKey=\"AIzaSyC3yXGtu-O5HD8LhlQ18w68dby2HQ2X3O4\">\r\n\r\n                <ParcelDetailsModal obj={obj} show={show} setShow={setShow}/>\r\n\r\n                <ParcelEditModal obj={obj} show={editShow} setShow={setEditShow}/>\r\n\r\n                <div id=\"allParcelsAdminBody\">\r\n\r\n                    <GoogleMap\r\n                        mapContainerStyle={containerStyle}\r\n                        center={center}\r\n                        zoom={10}\r\n                        tilt={0}\r\n                    >\r\n                        {paths}\r\n                    </GoogleMap>\r\n\r\n                    <div className=\"body_AllParcelsAdmin\">\r\n                        <div className=\"container_AllParcelsAdmin\">\r\n                            {requested? <Spinner id=\"spinner_ConfirmationPage\" variant=\"success\" animation=\"border\" role=\"status\">\r\n                                <span className=\"visually-hidden\">Carregando...</span>\r\n                            </Spinner> : parcelList}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </LoadScript>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default AllParcelsAdmin","import './Statistics.css'\r\nimport React, { useState } from 'react';\r\nimport {Pie} from \"react-chartjs-2\";\r\nimport {useEffect} from \"react\";\r\nimport {Spinner} from \"react-bootstrap\";\r\n\r\n\r\nconst PieChartStatistics = (props) => {\r\n\r\n    const [labelList, setLabelList] = useState([]);\r\n    const [dataList, setDataList] = useState([]);\r\n    const [request, setRequest] = useState(false);\r\n\r\n    let dataOptions = {\r\n        labels: labelList,\r\n        datasets: [\r\n            {\r\n                label: 'Percentagem por quantidade de parcelas',\r\n                backgroundColor: [\r\n                    'rgba(0, 0, 0, 0.2)',\r\n                    'rgba(51, 51, 255, 0.2)',\r\n                    'rgba(75, 192, 192, 0.2)',\r\n                    'rgba(102, 204, 0, 0.2)',\r\n                    'rgba(255, 206, 86, 0.2)',\r\n                    'rgba(255, 128, 0, 0.2)',\r\n                    'rgba(255, 99, 132, 0.2)',\r\n                    'rgba(204, 153, 255, 0.2)'\r\n                ],\r\n                borderColor: [\r\n                    'rgba(0, 0, 0, 1)',\r\n                    'rgba(51, 51, 255, 1)',\r\n                    'rgba(75, 192, 192, 1)',\r\n                    'rgba(102, 204, 0, 1)',\r\n                    'rgba(255, 206, 86, 1)',\r\n                    'rgba(255, 128, 0, 1)',\r\n                    'rgba(255, 99, 132, 1)',\r\n                    'rgba(204, 153, 255, 1)'\r\n                ],\r\n                borderWidth: 2,\r\n                data: dataList,\r\n            },\r\n        ],\r\n    };\r\n\r\n    useEffect(() => {\r\n        setRequest(true);\r\n        let myObj = {token:localStorage.getItem('token')};\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObj),\r\n        };\r\n\r\n        fetch(props.url, options)\r\n            .then((r) =>{\r\n                if(r.ok){\r\n                    r.text().then(t => {\r\n                        let text = JSON.parse(t);\r\n                        console.log(text)\r\n                        let auxLabelList = [];\r\n                        let auxDataList = [];\r\n                        for (let key in text) {\r\n                            auxLabelList.push(key);\r\n                            auxDataList.push(text[key]);\r\n                        }\r\n\r\n                        setLabelList(auxLabelList);\r\n                        setDataList(auxDataList);\r\n                    })\r\n                }\r\n                setRequest(false);\r\n            }).catch(() =>setRequest(false));\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {request?<Spinner id=\"spinner_ConfirmationPage\" animation=\"border\" role=\"status\">\r\n                <span className=\"visually-hidden\">Carregando...</span>\r\n            </Spinner>: <Pie className=\"util-solo-byNumber_Stats\" data={dataOptions} options={{ responsive: true }} />}\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default PieChartStatistics;","import './Statistics.css'\r\nimport React, { useState } from 'react';\r\nimport {useEffect} from \"react\";\r\nimport {Spinner} from \"react-bootstrap\";\r\n\r\n\r\nconst NumberStatistics = (props) => {\r\n\r\n    const [result, setResult] = useState(0);\r\n    const [request, setRequest] = useState(false);\r\n\r\n    let label = props.label;\r\n\r\n    useEffect(() => {\r\n        setRequest(true);\r\n        let myObj = {token:localStorage.getItem('token')};\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObj),\r\n        };\r\n\r\n        fetch(props.url, options)\r\n            .then((r) =>{\r\n                if(r.ok){\r\n                    r.text().then(t => {\r\n                        setResult(t);\r\n                    })\r\n                }\r\n                setRequest(false);\r\n            }).catch(() =>setRequest(false));\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {request?<Spinner id=\"spinner_ConfirmationPage\" animation=\"border\" role=\"status\">\r\n                <span className=\"visually-hidden\">Carregando...</span>\r\n            </Spinner>: <h5 className=\"stats-title statistics_result\"> {result + \" \" +label} </h5>}\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default NumberStatistics;","import './Statistics.css'\r\nimport React, { useState } from 'react';\r\nimport Chart from 'chart.js/auto';\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport {Pie} from \"react-chartjs-2\";\r\nimport PieChartStatistics from \"../util/Statistics/PieChartStatistics\";\r\nimport NumberStatistics from \"../util/Statistics/NumberStatistics\";\r\nimport CheckIfActive from \"../util/CheckIfActive\";\r\n\r\n\r\nconst Statistics = () => {\r\n\r\n    const [utilSoloByNumber] = useState({\r\n        labels: ['Privado', 'Comercial', 'Pasto', 'Floresta', 'Agrícola', 'Residencial', 'Transporte', 'Recreativo'],\r\n        datasets: [\r\n            {\r\n                label: 'Percentagem por quantidade de parcelas',\r\n                backgroundColor: [\r\n                    'rgba(0, 0, 0, 0.2)',\r\n                    'rgba(51, 51, 255, 0.2)',\r\n                    'rgba(75, 192, 192, 0.2)',\r\n                    'rgba(102, 204, 0, 0.2)',\r\n                    'rgba(255, 206, 86, 0.2)',\r\n                    'rgba(255, 128, 0, 0.2)',\r\n                    'rgba(255, 99, 132, 0.2)',\r\n                    'rgba(204, 153, 255, 0.2)'\r\n                ],\r\n                borderColor: [\r\n                    'rgba(0, 0, 0, 1)',\r\n                    'rgba(51, 51, 255, 1)',\r\n                    'rgba(75, 192, 192, 1)',\r\n                    'rgba(102, 204, 0, 1)',\r\n                    'rgba(255, 206, 86, 1)',\r\n                    'rgba(255, 128, 0, 1)',\r\n                    'rgba(255, 99, 132, 1)',\r\n                    'rgba(204, 153, 255, 1)'\r\n                ],\r\n                borderWidth: 2,\r\n                data: [4, 12, 10, 5, 1, 3, 1, 1],\r\n            },\r\n        ],\r\n    });\r\n\r\n\r\n    const [utilSoloByArea] = useState({\r\n        labels: ['Privado', 'Comercial', 'Pasto', 'Floresta', 'Agrícola', 'Residencial', 'Transporte', 'Recreativo'],\r\n        datasets: [\r\n            {\r\n                label: 'Percentagem por área de parcelas',\r\n                backgroundColor: [\r\n                    'rgba(0, 0, 0, 0.2)',\r\n                    'rgba(51, 51, 255, 0.2)',\r\n                    'rgba(75, 192, 192, 0.2)',\r\n                    'rgba(102, 204, 0, 0.2)',\r\n                    'rgba(255, 206, 86, 0.2)',\r\n                    'rgba(255, 128, 0, 0.2)',\r\n                    'rgba(255, 99, 132, 0.2)',\r\n                    'rgba(204, 153, 255, 0.2)'\r\n                ],\r\n                borderColor: [\r\n                    'rgba(0, 0, 0, 1)',\r\n                    'rgba(51, 51, 255, 1)',\r\n                    'rgba(75, 192, 192, 1)',\r\n                    'rgba(102, 204, 0, 1)',\r\n                    'rgba(255, 206, 86, 1)',\r\n                    'rgba(255, 128, 0, 1)',\r\n                    'rgba(255, 99, 132, 1)',\r\n                    'rgba(204, 153, 255, 1)'\r\n                ],\r\n                borderWidth: 2,\r\n                data: [200, 50, 150, 50, 300, 40, 200, 10],\r\n            },\r\n        ],\r\n    });\r\n\r\n\r\n    return (\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <CheckIfActive />\r\n            <TopBar />\r\n\r\n            <div className=\"statistics-background\">\r\n                <Row>\r\n                    <Col className=\"stats-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-title\"> Área total das parcelas </h4>\r\n                        <NumberStatistics url=\"https://moonlit-oven-349523.appspot.com/rest/statistics/user/parcel/totalArea\" label=\"m²\"></NumberStatistics>\r\n                    </Col>\r\n\r\n                    <Col className=\"stats-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-title\"> Média da área das parcelas </h4>\r\n                        <NumberStatistics url=\"https://moonlit-oven-349523.appspot.com/rest/statistics/user/parcel/averageArea\" label=\"m²\"></NumberStatistics>\r\n                    </Col>\r\n\r\n                    <Col className=\"stats-entity-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-entity-title\"> Número de parcelas que registei </h4>\r\n                        <NumberStatistics url=\"https://moonlit-oven-349523.appspot.com/rest/statistics/user/parcel/count\" label=\"\"></NumberStatistics>\r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n                <Row>\r\n\r\n                    <p></p>\r\n                    <p className=\"stats-paragraph\" ></p>\r\n                    <Col className=\"stats-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-title\"> Número de parcelas por tipo de utilização do solo </h4>\r\n                        <PieChartStatistics url=\"https://moonlit-oven-349523.appspot.com/rest/statistics/user/parcel/byUsage\"></PieChartStatistics>\r\n                    </Col>\r\n\r\n                    <Col className=\"stats-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-title\"> Área de parcelas por tipo de utilização do solo </h4>\r\n                        <PieChartStatistics url=\"https://moonlit-oven-349523.appspot.com/rest/statistics/user/parcel/totalAreaByUsage\"></PieChartStatistics>\r\n                    </Col>\r\n\r\n                </Row>\r\n            </div>\r\n\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default Statistics;","import './StatisticsEntity.css'\r\nimport React, { useState } from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport Chart from 'chart.js/auto';\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport PieChartStatistics from \"../util/Statistics/PieChartStatistics\";\r\nimport NumberStatistics from \"../util/Statistics/NumberStatistics\";\r\nimport CheckIfActive from \"../util/CheckIfActive\";\r\n\r\n\r\nconst StatisticsEntity = () => {\r\n\r\n    const [utilSoloByNumber] = useState({\r\n        labels: ['Privado', 'Comercial', 'Pasto', 'Floresta', 'Agrícola', 'Residencial', 'Transporte', 'Recreativo'],\r\n        datasets: [\r\n            {\r\n                label: 'Percentagem por quantidade de parcelas',\r\n                backgroundColor: [\r\n                    'rgba(0, 0, 0, 0.2)',\r\n                    'rgba(51, 51, 255, 0.2)',\r\n                    'rgba(75, 192, 192, 0.2)',\r\n                    'rgba(102, 204, 0, 0.2)',\r\n                    'rgba(255, 206, 86, 0.2)',\r\n                    'rgba(255, 128, 0, 0.2)',\r\n                    'rgba(255, 99, 132, 0.2)',\r\n                    'rgba(204, 153, 255, 0.2)'\r\n                ],\r\n                borderColor: [\r\n                    'rgba(0, 0, 0, 1)',\r\n                    'rgba(51, 51, 255, 1)',\r\n                    'rgba(75, 192, 192, 1)',\r\n                    'rgba(102, 204, 0, 1)',\r\n                    'rgba(255, 206, 86, 1)',\r\n                    'rgba(255, 128, 0, 1)',\r\n                    'rgba(255, 99, 132, 1)',\r\n                    'rgba(204, 153, 255, 1)'\r\n                ],\r\n                borderWidth: 2,\r\n                data: [4, 12, 10, 5, 1, 3, 1, 1],\r\n            },\r\n        ],\r\n    });\r\n\r\n\r\n    const [utilSoloByArea] = useState({\r\n        labels: ['Privado', 'Comercial', 'Pasto', 'Floresta', 'Agrícola', 'Residencial', 'Transporte', 'Recreativo'],\r\n        datasets: [\r\n            {\r\n                label: 'Percentagem por área de parcelas',\r\n                backgroundColor: [\r\n                    'rgba(0, 0, 0, 0.2)',\r\n                    'rgba(51, 51, 255, 0.2)',\r\n                    'rgba(75, 192, 192, 0.2)',\r\n                    'rgba(102, 204, 0, 0.2)',\r\n                    'rgba(255, 206, 86, 0.2)',\r\n                    'rgba(255, 128, 0, 0.2)',\r\n                    'rgba(255, 99, 132, 0.2)',\r\n                    'rgba(204, 153, 255, 0.2)'\r\n                ],\r\n                borderColor: [\r\n                    'rgba(0, 0, 0, 1)',\r\n                    'rgba(51, 51, 255, 1)',\r\n                    'rgba(75, 192, 192, 1)',\r\n                    'rgba(102, 204, 0, 1)',\r\n                    'rgba(255, 206, 86, 1)',\r\n                    'rgba(255, 128, 0, 1)',\r\n                    'rgba(255, 99, 132, 1)',\r\n                    'rgba(204, 153, 255, 1)'\r\n                ],\r\n                borderWidth: 2,\r\n                data: [200, 50, 150, 50, 300, 40, 200, 10],\r\n            },\r\n        ],\r\n    });\r\n\r\n\r\n    return (\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <CheckIfActive />\r\n            <TopBar />\r\n\r\n            <div className=\"statistics-entity-background\">\r\n                <Row>\r\n                    <Col className=\"stats-entity-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-entity-title\"> Área total das parcelas </h4>\r\n                        <NumberStatistics url=\"https://moonlit-oven-349523.appspot.com/rest/statistics/entity/parcel/totalArea\" label=\"m²\"></NumberStatistics>\r\n                    </Col>\r\n\r\n                    <Col className=\"stats-entity-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-entity-title\"> Média da área das parcelas </h4>\r\n                        <NumberStatistics url=\"https://moonlit-oven-349523.appspot.com/rest/statistics/entity/parcel/averageArea\" label=\"m²\"></NumberStatistics>\r\n                    </Col>\r\n\r\n                    <Col className=\"stats-entity-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-entity-title\"> Número de parcelas que registei </h4>\r\n                        <NumberStatistics url=\"https://moonlit-oven-349523.appspot.com/rest/statistics/entity/parcel/count\" label=\"\"></NumberStatistics>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n\r\n                    <p></p>\r\n                    <p className=\"stats-entity-paragraph\" ></p>\r\n                    <Col className=\"stats-entity-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-entity-title\"> Número de parcelas por tipo de utilização do solo </h4>\r\n                        <PieChartStatistics url=\"https://moonlit-oven-349523.appspot.com/rest/statistics/entity/parcel/byUsage\"></PieChartStatistics>\r\n                    </Col>\r\n\r\n                    <Col className=\"stats-entity-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-entity-title\"> Área de parcelas por tipo de utilização do solo </h4>\r\n                        <PieChartStatistics url=\"https://moonlit-oven-349523.appspot.com/rest/statistics/entity/parcel/totalAreaByUsage\"></PieChartStatistics>\r\n                    </Col>\r\n\r\n                </Row>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default StatisticsEntity;","import './StatisticsTechnician.css'\r\nimport React, { useState } from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport Chart from 'chart.js/auto';\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport NumberStatistics from \"../util/Statistics/NumberStatistics\";\r\nimport PieChartStatistics from \"../util/Statistics/PieChartStatistics\";\r\nimport CheckIfActive from \"../util/CheckIfActive\";\r\n\r\n\r\nconst StatisticsTechnician = () => {\r\n\r\n    let role = localStorage.getItem(\"role\");\r\n\r\n    const [utilSoloByNumber] = useState({\r\n        labels: ['Privado', 'Comercial', 'Pasto', 'Floresta', 'Agrícola', 'Residencial', 'Transporte', 'Recreativo'],\r\n        datasets: [\r\n            {\r\n                label: 'Percentagem por quantidade de parcelas',\r\n                backgroundColor: [\r\n                    'rgba(0, 0, 0, 0.2)',\r\n                    'rgba(51, 51, 255, 0.2)',\r\n                    'rgba(75, 192, 192, 0.2)',\r\n                    'rgba(102, 204, 0, 0.2)',\r\n                    'rgba(255, 206, 86, 0.2)',\r\n                    'rgba(255, 128, 0, 0.2)',\r\n                    'rgba(255, 99, 132, 0.2)',\r\n                    'rgba(204, 153, 255, 0.2)'\r\n                ],\r\n                borderColor: [\r\n                    'rgba(0, 0, 0, 1)',\r\n                    'rgba(51, 51, 255, 1)',\r\n                    'rgba(75, 192, 192, 1)',\r\n                    'rgba(102, 204, 0, 1)',\r\n                    'rgba(255, 206, 86, 1)',\r\n                    'rgba(255, 128, 0, 1)',\r\n                    'rgba(255, 99, 132, 1)',\r\n                    'rgba(204, 153, 255, 1)'\r\n                ],\r\n                borderWidth: 2,\r\n                data: [4, 12, 10, 5, 1, 3, 1, 1],\r\n            },\r\n        ],\r\n    });\r\n\r\n\r\n    const [utilSoloByArea] = useState({\r\n        labels: ['Privado', 'Comercial', 'Pasto', 'Floresta', 'Agrícola', 'Residencial', 'Transporte', 'Recreativo'],\r\n        datasets: [\r\n            {\r\n                label: 'Percentagem por área de parcelas',\r\n                backgroundColor: [\r\n                    'rgba(0, 0, 0, 0.2)',\r\n                    'rgba(51, 51, 255, 0.2)',\r\n                    'rgba(75, 192, 192, 0.2)',\r\n                    'rgba(102, 204, 0, 0.2)',\r\n                    'rgba(255, 206, 86, 0.2)',\r\n                    'rgba(255, 128, 0, 0.2)',\r\n                    'rgba(255, 99, 132, 0.2)',\r\n                    'rgba(204, 153, 255, 0.2)'\r\n                ],\r\n                borderColor: [\r\n                    'rgba(0, 0, 0, 1)',\r\n                    'rgba(51, 51, 255, 1)',\r\n                    'rgba(75, 192, 192, 1)',\r\n                    'rgba(102, 204, 0, 1)',\r\n                    'rgba(255, 206, 86, 1)',\r\n                    'rgba(255, 128, 0, 1)',\r\n                    'rgba(255, 99, 132, 1)',\r\n                    'rgba(204, 153, 255, 1)'\r\n                ],\r\n                borderWidth: 2,\r\n                data: [200, 50, 150, 50, 300, 40, 200, 10],\r\n            },\r\n        ],\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <CheckIfActive />\r\n            <TopBar />\r\n\r\n            <div className=\"statistics-technician-background\">\r\n                <Row>\r\n                    <Col className=\"stats-technician-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-technician-title\"> Área total das parcelas </h4>\r\n                        {\r\n                            role === \"B1\" ?\r\n                                <NumberStatistics url=\"https://moonlit-oven-349523.appspot.com/rest/statistics/rankings/totalParcelAreaInConcelho\" label=\"m²\"></NumberStatistics> :\r\n                                <NumberStatistics url=\"https://moonlit-oven-349523.appspot.com/rest/statistics/rankings/totalParcelAreaInFreguesia\" label=\"m²\"></NumberStatistics>\r\n                        }\r\n                    </Col>\r\n\r\n                    <Col className=\"stats-technician-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-technician-title\"> Média da área das parcelas </h4>\r\n                        {\r\n                            role === \"B1\" ?\r\n                                <NumberStatistics url=\"https://moonlit-oven-349523.appspot.com/rest/statistics/rankings/parcelAvgAreaInConcelho\" label=\"m²\"></NumberStatistics> :\r\n                                <NumberStatistics url=\"https://moonlit-oven-349523.appspot.com/rest/statistics/rankings/parcelAvgAreaInFreguesia\" label=\"m²\"></NumberStatistics>\r\n                        }\r\n                    </Col>\r\n\r\n                    <Col className=\"stats-technician-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-technician-title\"> Número de parcelas que registei </h4>\r\n                        {\r\n                            role === \"B1\" ?\r\n                                <NumberStatistics url=\"https://moonlit-oven-349523.appspot.com/rest/statistics/rankings/parcelCountInConcelho\" label=\"\"></NumberStatistics> :\r\n                                <NumberStatistics url=\"https://moonlit-oven-349523.appspot.com/rest/statistics/rankings/parcelCountInFreguesia\" label=\"\"></NumberStatistics>\r\n                        }\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n\r\n                    <p></p>\r\n                    <p className=\"stats-technician-paragraph\" ></p>\r\n                    <Col className=\"stats-technician-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-technician-title\"> Número de parcelas por tipo de utilização do solo </h4>\r\n                        {\r\n                            role === \"B1\" ?\r\n                                <PieChartStatistics url=\"https://moonlit-oven-349523.appspot.com/rest/statistics/rankings/parcelCountInConcelhoByUsage\"></PieChartStatistics>:\r\n                                <PieChartStatistics url=\"https://moonlit-oven-349523.appspot.com/rest/statistics/rankings/parcelCountInFreguesiaByUsage\"></PieChartStatistics>\r\n                        }\r\n                    </Col>\r\n\r\n                    <Col className=\"stats-technician-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-technician-title\"> Área de parcelas por tipo de utilização do solo </h4>\r\n                        {\r\n                            role === \"B1\" ?\r\n                                <PieChartStatistics url=\"https://moonlit-oven-349523.appspot.com/rest/statistics/rankings/parcelAreaInConcelhoByUsage\"></PieChartStatistics>:\r\n                                <PieChartStatistics url=\"https://moonlit-oven-349523.appspot.com/rest/statistics/rankings/parcelAreaInFreguesiaByUsage\"></PieChartStatistics>\r\n                        }\r\n                    </Col>\r\n\r\n                </Row>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default StatisticsTechnician;","import './Statistics.css'\r\nimport React, { useState } from 'react';\r\nimport {Pie} from \"react-chartjs-2\";\r\nimport {useEffect} from \"react\";\r\nimport {Col, Dropdown, Form, Spinner} from \"react-bootstrap\";\r\n\r\n\r\nconst PieChartLocationStatistics = (props) => {\r\n\r\n    const objCSV = JSON.parse(localStorage.getItem('csv'));\r\n    const distritos = Object.keys(objCSV);\r\n    const distritoList = [];\r\n    for(let i = 0; i<distritos.length; i++) {\r\n        distritoList.push(<option>{distritos[i]}</option>)\r\n    }\r\n\r\n    const [distrito, setDistrito] = useState(\"\");\r\n    const [concelho, setConcelho] = useState(\"\");\r\n    const [freguesia, setFreguesia] = useState(\"\");\r\n    const [concelhoOptions, setConcelhoOptions] = useState([]);\r\n    const [freguesiaOptions, setFreguesiaOptions] = useState([]);\r\n\r\n    function handleSetDistrito(distrito){\r\n        console.log(distrito);\r\n        setDistrito(distrito);\r\n        if(distrito !== '-'){\r\n            let listC = Object.keys(objCSV[distrito]);\r\n\r\n            let list = [];\r\n            for(let i = 0; i<listC.length; i++){\r\n                list.push(<option>{listC[i]}</option>);\r\n            }\r\n            setConcelhoOptions(list);\r\n        }\r\n        else{\r\n            setConcelhoOptions([]);\r\n        }\r\n        setFreguesiaOptions([]);\r\n\r\n\r\n        if(distrito !== '-'){\r\n            setRequestDistrito(true);\r\n            let myObj = {token:localStorage.getItem('token')};\r\n\r\n            const options = {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(myObj),\r\n            };\r\n\r\n            fetch('https://moonlit-oven-349523.appspot.com/rest/statistics/areaUsage/'+distrito, options)\r\n                .then((r) =>{\r\n                    if(r.ok){\r\n                        r.text().then(t => {\r\n                            let text = JSON.parse(t);\r\n                            console.log(text)\r\n                            let auxLabelList = [];\r\n                            let auxDataList = [];\r\n                            for (let key in text) {\r\n                                auxLabelList.push(key);\r\n                                auxDataList.push(text[key]);\r\n                            }\r\n\r\n                            setLabelListDistrito(auxLabelList);\r\n                            setDataListDistrito(auxDataList);\r\n                        })\r\n                    }\r\n                    setRequestDistrito(false);\r\n                }).catch(() =>setRequestDistrito(false));\r\n        }\r\n        else {\r\n            setLabelListDistrito([]);\r\n            setDataListDistrito([]);\r\n        }\r\n    }\r\n\r\n    function handleSetConcelho(concelho){\r\n        console.log(concelho);\r\n        setConcelho(concelho);\r\n        if(concelho !== '-'){\r\n            let listF = Object.keys(objCSV[distrito][concelho]);\r\n            let list = [];\r\n            for(let i = 0; i<listF.length; i++){\r\n                list.push(<option>{listF[i]}</option>);\r\n            }\r\n            setFreguesiaOptions(list);\r\n        }\r\n        else{\r\n            setFreguesiaOptions([]);\r\n        }\r\n\r\n        if(concelho !== '-'){\r\n            setRequestConcelho(true);\r\n            let myObj = {token:localStorage.getItem('token')};\r\n\r\n            const options = {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(myObj),\r\n            };\r\n\r\n            fetch('https://moonlit-oven-349523.appspot.com/rest/statistics/areaUsage/'+distrito+'/'+concelho, options)\r\n                .then((r) =>{\r\n                    if(r.ok){\r\n                        r.text().then(t => {\r\n                            let text = JSON.parse(t);\r\n                            console.log(text)\r\n                            let auxLabelList = [];\r\n                            let auxDataList = [];\r\n                            for (let key in text) {\r\n                                auxLabelList.push(key);\r\n                                auxDataList.push(text[key]);\r\n                            }\r\n\r\n                            setLabelListConcelho(auxLabelList);\r\n                            setDataListConcelho(auxDataList);\r\n                        })\r\n                    }\r\n                    setRequestConcelho(false);\r\n                }).catch(() =>setRequestConcelho(false));\r\n        }\r\n        else {\r\n            setLabelListConcelho([]);\r\n            setDataListConcelho([]);\r\n        }\r\n\r\n    }\r\n\r\n    function handlesetFreguesia(freguesia){\r\n        setFreguesia(freguesia);\r\n        if(freguesia !== '-'){\r\n            setRequestFreguesia(true);\r\n            let myObj = {token:localStorage.getItem('token')};\r\n\r\n            const options = {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(myObj),\r\n            };\r\n\r\n            fetch('https://moonlit-oven-349523.appspot.com/rest/statistics/areaUsage/'+distrito+'/'+concelho+'/'+freguesia, options)\r\n                .then((r) =>{\r\n                    if(r.ok){\r\n                        r.text().then(t => {\r\n                            let text = JSON.parse(t);\r\n                            console.log(text)\r\n                            let auxLabelList = [];\r\n                            let auxDataList = [];\r\n                            for (let key in text) {\r\n                                auxLabelList.push(key);\r\n                                auxDataList.push(text[key]);\r\n                            }\r\n\r\n                            setLabelListFreguesia(auxLabelList);\r\n                            setDataListFreguesia(auxDataList);\r\n                        })\r\n                    }\r\n                    setRequestFreguesia(false);\r\n                }).catch(() =>setRequestFreguesia(false));\r\n        }\r\n        else {\r\n            setLabelListFreguesia([]);\r\n            setDataListFreguesia([]);\r\n        }\r\n    }\r\n\r\n    const [labelListDistrito, setLabelListDistrito] = useState([]);\r\n    const [dataListDistrito, setDataListDistrito] = useState([]);\r\n    const [requestDistrito, setRequestDistrito] = useState(false);\r\n\r\n    let dataOptionsDistrito = {\r\n        labels: labelListDistrito,\r\n        datasets: [\r\n            {\r\n                label: 'Percentagem por quantidade de parcelas',\r\n                backgroundColor: [\r\n                    'rgba(0, 0, 0, 0.2)',\r\n                    'rgba(51, 51, 255, 0.2)',\r\n                    'rgba(75, 192, 192, 0.2)',\r\n                    'rgba(102, 204, 0, 0.2)',\r\n                    'rgba(255, 206, 86, 0.2)',\r\n                    'rgba(255, 128, 0, 0.2)',\r\n                    'rgba(255, 99, 132, 0.2)',\r\n                    'rgba(204, 153, 255, 0.2)'\r\n                ],\r\n                borderColor: [\r\n                    'rgba(0, 0, 0, 1)',\r\n                    'rgba(51, 51, 255, 1)',\r\n                    'rgba(75, 192, 192, 1)',\r\n                    'rgba(102, 204, 0, 1)',\r\n                    'rgba(255, 206, 86, 1)',\r\n                    'rgba(255, 128, 0, 1)',\r\n                    'rgba(255, 99, 132, 1)',\r\n                    'rgba(204, 153, 255, 1)'\r\n                ],\r\n                borderWidth: 2,\r\n                data: dataListDistrito,\r\n            },\r\n        ],\r\n    };\r\n\r\n    const [labelListConcelho, setLabelListConcelho] = useState([]);\r\n    const [dataListConcelho, setDataListConcelho] = useState([]);\r\n    const [requestConcelho, setRequestConcelho] = useState(false);\r\n\r\n    let dataOptionsConcelho = {\r\n        labels: labelListConcelho,\r\n        datasets: [\r\n            {\r\n                label: 'Percentagem por quantidade de parcelas',\r\n                backgroundColor: [\r\n                    'rgba(0, 0, 0, 0.2)',\r\n                    'rgba(51, 51, 255, 0.2)',\r\n                    'rgba(75, 192, 192, 0.2)',\r\n                    'rgba(102, 204, 0, 0.2)',\r\n                    'rgba(255, 206, 86, 0.2)',\r\n                    'rgba(255, 128, 0, 0.2)',\r\n                    'rgba(255, 99, 132, 0.2)',\r\n                    'rgba(204, 153, 255, 0.2)'\r\n                ],\r\n                borderColor: [\r\n                    'rgba(0, 0, 0, 1)',\r\n                    'rgba(51, 51, 255, 1)',\r\n                    'rgba(75, 192, 192, 1)',\r\n                    'rgba(102, 204, 0, 1)',\r\n                    'rgba(255, 206, 86, 1)',\r\n                    'rgba(255, 128, 0, 1)',\r\n                    'rgba(255, 99, 132, 1)',\r\n                    'rgba(204, 153, 255, 1)'\r\n                ],\r\n                borderWidth: 2,\r\n                data: dataListConcelho,\r\n            },\r\n        ],\r\n    };\r\n\r\n    const [labelListFreguesia, setLabelListFreguesia] = useState([]);\r\n    const [dataListFreguesia, setDataListFreguesia] = useState([]);\r\n    const [requestFreguesia, setRequestFreguesia] = useState(false);\r\n\r\n    let dataOptionsFreguesia = {\r\n        labels: labelListFreguesia,\r\n        datasets: [\r\n            {\r\n                label: 'Percentagem por quantidade de parcelas',\r\n                backgroundColor: [\r\n                    'rgba(0, 0, 0, 0.2)',\r\n                    'rgba(51, 51, 255, 0.2)',\r\n                    'rgba(75, 192, 192, 0.2)',\r\n                    'rgba(102, 204, 0, 0.2)',\r\n                    'rgba(255, 206, 86, 0.2)',\r\n                    'rgba(255, 128, 0, 0.2)',\r\n                    'rgba(255, 99, 132, 0.2)',\r\n                    'rgba(204, 153, 255, 0.2)'\r\n                ],\r\n                borderColor: [\r\n                    'rgba(0, 0, 0, 1)',\r\n                    'rgba(51, 51, 255, 1)',\r\n                    'rgba(75, 192, 192, 1)',\r\n                    'rgba(102, 204, 0, 1)',\r\n                    'rgba(255, 206, 86, 1)',\r\n                    'rgba(255, 128, 0, 1)',\r\n                    'rgba(255, 99, 132, 1)',\r\n                    'rgba(204, 153, 255, 1)'\r\n                ],\r\n                borderWidth: 2,\r\n                data: dataListFreguesia,\r\n            },\r\n        ],\r\n    };\r\n\r\n\r\n    /*useEffect(() => {\r\n        setRequest(true);\r\n        let myObj = {token:localStorage.getItem('token')};\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObj),\r\n        };\r\n\r\n        fetch(props.url, options)\r\n            .then((r) =>{\r\n                if(r.ok){\r\n                    r.text().then(t => {\r\n                        let text = JSON.parse(t);\r\n                        console.log(text)\r\n                        let auxLabelList = [];\r\n                        let auxDataList = [];\r\n                        for (let key in text) {\r\n                            auxLabelList.push(key);\r\n                            auxDataList.push(text[key]);\r\n                        }\r\n\r\n                        setLabelList(auxLabelList);\r\n                        setDataList(auxDataList);\r\n                    })\r\n                }\r\n                setRequest(false);\r\n            }).catch(() =>setRequest(false));\r\n    }, [])*/\r\n\r\n    return (\r\n        <>\r\n            <Col className=\"stats-admin-container\">\r\n                <p></p>\r\n                <h4 className=\"stats-admin-title\"> Área das parcelas por tipo de utilização do solo no distrito de: {distrito}</h4>\r\n\r\n                <Form.Group className=\"mt-3 pie-loc\" controlId=\"pie_distrito\">\r\n                    <Form.Select defaultValue=\"-\" className=\"map_fields\" onChange={(e) => handleSetDistrito(e.target.value)}>\r\n                        <option disabled={true} value=\"-\">Distritos</option>\r\n                        {distritoList}\r\n                    </Form.Select>\r\n                </Form.Group>\r\n\r\n            {requestDistrito?<Spinner animation=\"border\" variant=\"success\" />:(dataListDistrito.length>0?<Pie className=\"util-solo-byArea_StatsAdmin\" data={dataOptionsDistrito} options={{ responsive: true }}/>:<span>Não existem parcelas nesta área.</span>)}\r\n            </Col>\r\n\r\n            <Col className=\"stats-admin-container\">\r\n                <p></p>\r\n                <h4 className=\"stats-admin-title\"> Área das parcelas por tipo de utilização do solo no concelho de: {concelho}</h4>\r\n\r\n                <Form.Group className=\"mt-3 pie-loc\" controlId=\"pie_concelho\">\r\n                    <Form.Select defaultValue=\"-\" className=\"map_fields\" onChange={(e) => handleSetConcelho(e.target.value)}>\r\n                        <option value=\"-\">Concelhos</option>\r\n                        {concelhoOptions}\r\n                    </Form.Select>\r\n                </Form.Group>\r\n\r\n            {requestConcelho?<Spinner animation=\"border\" variant=\"success\" />:(dataListConcelho.length>0?<Pie className=\"util-solo-byArea_StatsAdmin\" data={dataOptionsConcelho} options={{ responsive: true }}/>:<span>Não existem parcelas nesta área.</span>)}\r\n            </Col>\r\n\r\n            <Col className=\"stats-admin-container\">\r\n                <p></p>\r\n                <h4 className=\"stats-admin-title\"> Área das parcelas por tipo de utilização do solo na freguesia de: {freguesia}</h4>\r\n\r\n                <Form.Group className=\"mt-3 pie-loc\" controlId=\"pie_freguesia\">\r\n                    <Form.Select defaultValue=\"-\" className=\"map_fields\" onChange={(e) => handlesetFreguesia(e.target.value)}>\r\n                        <option value=\"-\">Freguesias</option>\r\n                        {freguesiaOptions}\r\n                    </Form.Select>\r\n                </Form.Group>\r\n\r\n            {requestFreguesia?<Spinner animation=\"border\" variant=\"success\" />:(dataListFreguesia.length>0?<Pie className=\"util-solo-byArea_StatsAdmin\" data={dataOptionsFreguesia} options={{ responsive: true }}/>:<span>Não existem parcelas nesta área.</span>)}\r\n            </Col>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default PieChartLocationStatistics;","import './Statistics.css'\r\nimport React, { useState } from 'react';\r\nimport {Pie} from \"react-chartjs-2\";\r\nimport {useEffect} from \"react\";\r\nimport {Col, Dropdown, Form, Spinner} from \"react-bootstrap\";\r\n\r\n\r\nconst NumberLocationStatistics = (props) => {\r\n\r\n    const objCSV = JSON.parse(localStorage.getItem('csv'));\r\n    const distritos = Object.keys(objCSV);\r\n    const distritoList = [];\r\n    for(let i = 0; i<distritos.length; i++) {\r\n        distritoList.push(<option>{distritos[i]}</option>)\r\n    }\r\n\r\n    const [distrito, setDistrito] = useState(\"\");\r\n    const [concelho, setConcelho] = useState(\"\");\r\n    const [freguesia, setFreguesia] = useState(\"\");\r\n    const [concelhoOptions, setConcelhoOptions] = useState([]);\r\n    const [freguesiaOptions, setFreguesiaOptions] = useState([]);\r\n\r\n    function handleSetDistrito(distrito){\r\n        console.log(distrito);\r\n        setDistrito(distrito);\r\n        if(distrito !== '-'){\r\n            let listC = Object.keys(objCSV[distrito]);\r\n\r\n            let list = [];\r\n            for(let i = 0; i<listC.length; i++){\r\n                list.push(<option>{listC[i]}</option>);\r\n            }\r\n            setConcelhoOptions(list);\r\n        }\r\n        else{\r\n            setConcelhoOptions([]);\r\n        }\r\n        setFreguesiaOptions([]);\r\n\r\n\r\n        if(distrito !== '-'){\r\n            setRequestDistrito(true);\r\n            let myObj = {token:localStorage.getItem('token')};\r\n\r\n            const options = {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(myObj),\r\n            };\r\n\r\n            fetch('https://moonlit-oven-349523.appspot.com/rest/statistics/areaTotal/'+distrito, options)\r\n                .then((r) =>{\r\n                    if(r.ok){\r\n                        r.text().then(t => {\r\n                            setDistritoResult(t);\r\n                        })\r\n                    }\r\n                    setRequestDistrito(false);\r\n                }).catch(() =>setRequestDistrito(false));\r\n        }\r\n        else {\r\n            setDistritoResult(0);\r\n        }\r\n    }\r\n\r\n    function handleSetConcelho(concelho){\r\n        console.log(concelho);\r\n        setConcelho(concelho);\r\n        if(concelho !== '-'){\r\n            let listF = Object.keys(objCSV[distrito][concelho]);\r\n            let list = [];\r\n            for(let i = 0; i<listF.length; i++){\r\n                list.push(<option>{listF[i]}</option>);\r\n            }\r\n            setFreguesiaOptions(list);\r\n        }\r\n        else{\r\n            setFreguesiaOptions([]);\r\n        }\r\n\r\n        if(concelho !== '-'){\r\n            console.log(concelho);\r\n            setRequestConcelho(true);\r\n            let myObj = {token:localStorage.getItem('token')};\r\n\r\n            const options = {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(myObj),\r\n            };\r\n\r\n            fetch('https://moonlit-oven-349523.appspot.com/rest/statistics/areaTotal/'+distrito+'/'+concelho, options)\r\n                .then((r) =>{\r\n                    if(r.ok){\r\n                        r.text().then(t => {\r\n                            setConcelhoResult(t);\r\n                        })\r\n                    }\r\n                    setRequestConcelho(false);\r\n                }).catch(() =>setRequestConcelho(false));\r\n        }\r\n        else {\r\n            setConcelhoResult(0);\r\n        }\r\n\r\n    }\r\n\r\n    function handlesetFreguesia(freguesia){\r\n        setFreguesia(freguesia);\r\n        if(freguesia !== '-'){\r\n            setRequestFreguesia(true);\r\n            let myObj = {token:localStorage.getItem('token')};\r\n\r\n            const options = {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(myObj),\r\n            };\r\n\r\n            fetch('https://moonlit-oven-349523.appspot.com/rest/statistics/areaTotal/'+distrito+'/'+concelho+'/'+freguesia, options)\r\n                .then((r) =>{\r\n                    if(r.ok){\r\n                        r.text().then(t => {\r\n                            setFreguesiaResult(t);\r\n                        })\r\n                    }\r\n                    setRequestFreguesia(false);\r\n                }).catch(() =>setRequestFreguesia(false));\r\n        }\r\n        else {\r\n            setFreguesiaResult(0);\r\n        }\r\n    }\r\n\r\n    const [distritoResult, setDistritoResult] = useState(0);\r\n    const [requestDistrito, setRequestDistrito] = useState(false);\r\n\r\n\r\n    const [concelhoResult, setConcelhoResult] = useState(0);\r\n    const [requestConcelho, setRequestConcelho] = useState(false);\r\n\r\n\r\n    const [freguesiaResult, setFreguesiaResult] = useState(0);\r\n    const [requestFreguesia, setRequestFreguesia] = useState(false);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Col className=\"stats-admin-container\">\r\n                <p></p>\r\n                <h4 className=\"stats-admin-title\"> Área total das parcelas no distrito de: </h4>\r\n                <Form.Group className=\"mt-3 pie-loc\" controlId=\"pie_distrito\">\r\n                    <Form.Select defaultValue=\"-\" className=\"map_fields\" onChange={(e) => handleSetDistrito(e.target.value)}>\r\n                        <option disabled={true} value=\"-\">Distritos</option>\r\n                        {distritoList}\r\n                    </Form.Select>\r\n                </Form.Group>\r\n\r\n                {requestDistrito?<Spinner animation=\"border\" variant=\"success\" />:<h5 className=\"stats-admin-title statistics_result\"> {distritoResult}m² </h5>}\r\n            </Col>\r\n\r\n            <Col className=\"stats-admin-container\">\r\n                <p></p>\r\n                <h4 className=\"stats-admin-title\"> Área total das parcelas no concelho de: </h4>\r\n                <Form.Group className=\"mt-3 pie-loc\" controlId=\"pie_concelho\">\r\n                    <Form.Select defaultValue=\"-\" className=\"map_fields\" onChange={(e) => handleSetConcelho(e.target.value)}>\r\n                        <option value=\"-\">Concelhos</option>\r\n                        {concelhoOptions}\r\n                    </Form.Select>\r\n                </Form.Group>\r\n\r\n                {requestConcelho?<Spinner animation=\"border\" variant=\"success\" />:<h5 className=\"stats-admin-title statistics_result\"> {concelhoResult}m² </h5>}\r\n            </Col>\r\n\r\n            <Col className=\"stats-admin-container\">\r\n                <p></p>\r\n                <h4 className=\"stats-admin-title\"> Área total das parcelas na freguesia de: </h4>\r\n                <Form.Group className=\"mt-3 pie-loc\" controlId=\"pie_freguesia\">\r\n                    <Form.Select defaultValue=\"-\" className=\"map_fields\" onChange={(e) => handlesetFreguesia(e.target.value)}>\r\n                        <option value=\"-\">Freguesias</option>\r\n                        {freguesiaOptions}\r\n                    </Form.Select>\r\n                </Form.Group>\r\n\r\n                {requestFreguesia?<Spinner animation=\"border\" variant=\"success\" />:<h5 className=\"stats-admin-title statistics_result\"> {freguesiaResult}m² </h5>}\r\n            </Col>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default NumberLocationStatistics;","import './Statistics.css'\r\nimport React, { useState } from 'react';\r\nimport {useEffect} from \"react\";\r\nimport {Spinner, Table} from \"react-bootstrap\";\r\n\r\n\r\nconst RankingListStatistics = (props) => {\r\n\r\n    const [result, setResult] = useState([]);\r\n    const [request, setRequest] = useState(false);\r\n\r\n    const type = props.type;\r\n    const labelA = props.labelA;\r\n    const labelB = props.labelB;\r\n    console.log(type);\r\n\r\n    useEffect(() => {\r\n        setRequest(true);\r\n        let myObj = {token:localStorage.getItem('token')};\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObj),\r\n        };\r\n\r\n        fetch(props.url, options)\r\n            .then((r) =>{\r\n                if(r.ok){\r\n                    r.text().then(t => {\r\n                        let list = JSON.parse(t);\r\n                        let auxResult = [];\r\n                        for(let i = 0; i<list.length; i++){\r\n                            auxResult.push(<tr>\r\n                                            <td>{i+1}</td>\r\n                                            <td>{list[i].name}</td>\r\n                                            <td>{list[i][type]}</td>\r\n                                           </tr>)\r\n                        }\r\n                        setResult(auxResult);\r\n                    })\r\n                }\r\n                setRequest(false);\r\n            }).catch(() =>setRequest(false));\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {request?<Spinner id=\"spinner_ConfirmationPage\" animation=\"border\" role=\"status\">\r\n                <span className=\"visually-hidden\">Carregando...</span>\r\n            </Spinner>: <Table id=\"userTrust_Rankings\" striped bordered hover>\r\n                <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>{labelA}</th>\r\n                    <th>{labelB}</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {result}\r\n                </tbody>\r\n            </Table>}\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default RankingListStatistics;","import './StatisticsAdmin.css'\r\nimport React, { useState } from 'react';\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport {Col, Dropdown, Row, Table} from \"react-bootstrap\";\r\nimport { Pie } from 'react-chartjs-2';\r\nimport NumberStatistics from \"../util/Statistics/NumberStatistics\";\r\nimport CheckIfActive from \"../util/CheckIfActive\";\r\nimport PieChartLocationStatistics from \"../util/Statistics/PieChartLocationStatistics\";\r\nimport NumberLocationStatistics from \"../util/Statistics/NumberLocationStatistics\";\r\nimport RankingListStatistics from \"../util/Statistics/RankingListStatistics\";\r\n\r\n\r\nconst StatisticsAdmin = () => {\r\n\r\n\r\n    const [utilSoloByArea] = useState({\r\n        labels: ['Privado', 'Comercial', 'Pasto', 'Floresta', 'Agrícola', 'Residencial', 'Transporte', 'Recreativo'],\r\n        datasets: [\r\n            {\r\n                label: 'Percentagem por área de parcelas',\r\n                backgroundColor: [\r\n                    'rgba(0, 0, 0, 0.2)',\r\n                    'rgba(51, 51, 255, 0.2)',\r\n                    'rgba(75, 192, 192, 0.2)',\r\n                    'rgba(102, 204, 0, 0.2)',\r\n                    'rgba(255, 206, 86, 0.2)',\r\n                    'rgba(255, 128, 0, 0.2)',\r\n                    'rgba(255, 99, 132, 0.2)',\r\n                    'rgba(204, 153, 255, 0.2)'\r\n                ],\r\n                borderColor: [\r\n                    'rgba(0, 0, 0, 1)',\r\n                    'rgba(51, 51, 255, 1)',\r\n                    'rgba(75, 192, 192, 1)',\r\n                    'rgba(102, 204, 0, 1)',\r\n                    'rgba(255, 206, 86, 1)',\r\n                    'rgba(255, 128, 0, 1)',\r\n                    'rgba(255, 99, 132, 1)',\r\n                    'rgba(204, 153, 255, 1)'\r\n                ],\r\n                borderWidth: 2,\r\n                data: [200, 50, 150, 50, 300, 40, 200, 10],\r\n            },\r\n        ],\r\n    });\r\n\r\n\r\n    return (\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <CheckIfActive />\r\n            <TopBar />\r\n\r\n            <div className=\"statistics-admin-background\">\r\n                <Row>\r\n                    <Col className=\"stats-admin-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-admin-title\"> Área total das parcelas registadas </h4>\r\n                        <NumberStatistics url=\"https://moonlit-oven-349523.appspot.com/rest/statistics/areaTotal\" label=\"m²\"></NumberStatistics>\r\n                    </Col>\r\n\r\n                    <Col className=\"stats-admin-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-admin-title\"> Média da área das parcelas registadas </h4>\r\n                        <NumberStatistics url=\"https://moonlit-oven-349523.appspot.com/rest/statistics/rankings/parcelAvgArea\" label=\"m²\"></NumberStatistics>\r\n                    </Col>\r\n\r\n                    <Col className=\"stats-admin-container\">\r\n                        <p></p>\r\n                        <h4 className=\"stats-admin-title\"> Número de parcelas registadas </h4>\r\n                        <NumberStatistics url=\"https://moonlit-oven-349523.appspot.com/rest/statistics/rankings/parcelCount\" label=\"\"></NumberStatistics>\r\n                    </Col>\r\n                    <p></p>\r\n                </Row>\r\n\r\n                <Row>\r\n\r\n                    <p className=\"stats-admin-paragraph\"></p>\r\n                   <NumberLocationStatistics/>\r\n\r\n                </Row>\r\n\r\n\r\n                <Row>\r\n\r\n                    <p></p>\r\n                    <p className=\"stats-admin-paragraph\" ></p>\r\n                    <PieChartLocationStatistics/>\r\n\r\n                </Row>\r\n\r\n                <p></p>\r\n                <p className=\"stats-admin-paragraph\"></p>\r\n                <h2 className=\"rankings-title_StatsAdmin\"> Ranking de distritos e concelhos com mais parcelas registadas </h2>\r\n\r\n                <Row className=\"rankings-container_StatsAdmin\">\r\n                    <Col>\r\n                        <RankingListStatistics type=\"count\" labelA=\"Distrito\" labelB=\"Número de parcelas registadas\" url=\"https://moonlit-oven-349523.appspot.com/rest/statistics/rankings/distritosByParcelCount\"/>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                        <RankingListStatistics type=\"count\" labelA=\"Concelho\" labelB=\"Número de parcelas registadas\" url=\"https://moonlit-oven-349523.appspot.com/rest/statistics/rankings/concelhosByParcelCount\"/>\r\n                    </Col>\r\n\r\n                </Row>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default StatisticsAdmin;","import \"./ConfirmationPage.css\"\r\n\r\nimport React, {useEffect} from 'react';\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport Image from \"../logo.png\";\r\nimport {Spinner} from \"react-bootstrap\";\r\nimport {useLocation} from \"react-router-dom\";\r\nimport {useState} from \"react\";\r\n\r\n\r\nconst ConfirmationPage = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const [confirmed, setConfirmed] = useState(false);\r\n    const search = useLocation().search;\r\n    const name = new URLSearchParams(search).get('id');\r\n    console.log(name);\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://moonlit-oven-349523.appspot.com/rest/register/confirm/\" + name).then(r => {setConfirmed(true); navigate(\"/create-and-login\")}).catch( () =>console.log);\r\n    }, [])\r\n\r\n    function body(){\r\n        if(confirmed){\r\n            return(\r\n                <div className=\"bg-img_ConfirmationPage\">\r\n                    <div className=\"report-body_ConfirmationPage\">\r\n                        <br/>\r\n                        <h4 className=\"title_ConfirmationPage\"><b>O seu e-mail foi confirmado com sucesso, pode voltar à pagina inicial.</b></h4>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(<>\r\n                <div className=\"bg-img_ConfirmationPage\">\r\n                    <div className=\"report-body_ConfirmationPage\">\r\n                        <br/>\r\n                        <h4 className=\"title_ConfirmationPage\"><b>A confirmar o seu e-mail, por favor aguarde...</b></h4>\r\n                        <span>\r\n                            <Spinner id=\"spinner_ConfirmationPage\" animation=\"border\" role=\"status\">\r\n                                <span className=\"visually-hidden\">Carregando...</span>\r\n                            </Spinner>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n            </>)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div className=\"home_top\">\r\n\r\n                <div>\r\n                    <Link to=\"/\"><img src={Image} alt=\"E-Floresta Logo\" className=\"home_logo\" /></Link>\r\n                </div>\r\n            </div>\r\n            {body()}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ConfirmationPage","import './Rankings.css'\r\nimport React, { useState } from 'react';\r\nimport Chart from 'chart.js/auto';\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport {Row, Table} from \"react-bootstrap\";\r\nimport CheckIfActive from \"../util/CheckIfActive\";\r\nimport RankingListStatistics from \"../util/Statistics/RankingListStatistics\";\r\n\r\n\r\nconst Rankings = () => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <CheckIfActive />\r\n            <TopBar />\r\n\r\n            <div className=\"rankings-background\">\r\n\r\n                <p></p>\r\n                <h2 className=\"rankings-title\"> Ranking de utilizadores com mais pontos de confiança </h2>\r\n\r\n                <Row className=\"rankings-container\">\r\n                    <RankingListStatistics type=\"userTrust\" labelA=\"Utilizador\" labelB=\"Nível de Confiança\" url=\"https://moonlit-oven-349523.appspot.com/rest/statistics/rankings/byUserUserTrust\"/>\r\n                </Row>\r\n\r\n                <p></p>\r\n                <h2 className=\"rankings-title\"> Ranking de utilizadores com maior área de parcelas </h2>\r\n\r\n                <Row className=\"rankings-container\">\r\n                    <RankingListStatistics type=\"parcelArea\" labelA=\"Utilizador\" labelB=\"Área em m²\" url=\"https://moonlit-oven-349523.appspot.com/rest/statistics/rankings/byUserParcelArea\"/>\r\n                </Row>\r\n\r\n                <p></p>\r\n                <h2 className=\"rankings-title\"> Ranking de utilizadores com mais parcelas registadas</h2>\r\n\r\n                <Row className=\"rankings-container\">\r\n                    <RankingListStatistics type=\"parcelCount\" labelA=\"Utilizador\" labelB=\"Número de parcelas\" url=\"https://moonlit-oven-349523.appspot.com/rest/statistics/rankings/byUserParcelCount\"/>\r\n                </Row>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default Rankings;","import \"./RecoverPassword.css\"\r\nimport React, {useEffect} from 'react';\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport Image from \"../logo.png\";\r\nimport {Button, Form, Spinner} from \"react-bootstrap\";\r\nimport {useLocation} from \"react-router-dom\";\r\nimport {useState} from \"react\";\r\n\r\n\r\n\r\nconst RecoverPassword = () => {\r\n    const navigate = useNavigate();\r\n    const search = useLocation().search;\r\n    const name = new URLSearchParams(search).get('id');\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    function showPassword() {\r\n        var x = document.getElementById(\"session-password\");\r\n        if (x.type === \"password\") {\r\n            x.type = \"text\";\r\n        } else {\r\n            x.type = \"password\";\r\n        }\r\n\r\n        var y = document.getElementById(\"session-confirmation\");\r\n        if (y.type === \"password\") {\r\n            y.type = \"text\";\r\n        } else {\r\n            y.type = \"password\";\r\n        }\r\n    }\r\n\r\n    function recoverPassword(){\r\n        let myObj = {newPassword:document.getElementById(\"session-password\").value,\r\n                        confirmation:document.getElementById(\"session-confirmation\").value};\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObj),\r\n        };\r\n\r\n        fetch(\"https://moonlit-oven-349523.appspot.com/rest/login/recoverpassword/\"+name, options)\r\n            .then((r) => {\r\n                if(r.ok){\r\n                    navigate(\"/create-and-login\");\r\n                }\r\n                else if(r.status === 400) {\r\n                    alert(\"Todos os campos devem ser preenchidos corretamente.\");\r\n                }\r\n                else if(r.status === 403) {\r\n                    localStorage.removeItem('token');\r\n                    navigate('/');\r\n                }\r\n                else if(r.status === 404) {\r\n                    alert(\"Utilizador não existe.\");\r\n                }\r\n                else {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n            <div className=\"home_top\">\r\n                <div>\r\n                    <Link to=\"/\"><img src={Image} alt=\"E-Floresta Logo\" className=\"home_logo\" /></Link>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"bg-img_RecoverPassword\">\r\n                <div className=\"report-body_RecoverPassword\">\r\n\r\n                    <br/>\r\n                    <h3 className=\"title_RecoverPassword\"><b>Defina a sua nova palavra-passe</b></h3>\r\n                    <br/>\r\n\r\n                    <Form onSubmit={submitHandler}>\r\n\r\n                        <Form.Group className=\"changePassword_RecoverPassword\" >\r\n                            <Form.Label>Escreva a sua nova palavra-passe:</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Nova palavra-passe\" id=\"new-password_RecoverPassword\"/>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"changePassword_RecoverPassword\" >\r\n                            <Form.Label>Confirme a sua nova palavra-passe:</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Nova palavra-Passe\" id=\"confirmation_RecoverPassword\"/>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"checkbox_RecoverPassword\" controlId=\"loginShowPassCheckbox\" >\r\n                            <Form.Check id=\"checkmark-RecoverPassword\" type=\"checkbox\" label=\"Mostrar Palavra-Passe\" onClick={showPassword}/>\r\n                        </Form.Group>\r\n\r\n                        <Button id=\"confirm-button_RecoverPassword\" type=\"submit\" variant=\"success\" onClick={recoverPassword}>\r\n                            Alterar palavra-passe\r\n                        </Button>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RecoverPassword","import './RecoverRequest.css'\r\n\r\nimport React from 'react';\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport Image from \"../logo.png\";\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport {useState} from \"react\";\r\n\r\n\r\n\r\nconst RecoverPassword = () => {\r\n    const [sent, setSent] = useState(false);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    function recoverPassword(){\r\n        fetch(\"https://moonlit-oven-349523.appspot.com/rest/login/forgotpassword/?email=\"+document.getElementById(\"session-email\").value)\r\n            .then((r) => {\r\n                if(r.ok){\r\n                    setSent(true);\r\n                }\r\n                else if(r.status === 404) {\r\n                    alert(\"Não existe nenhum utilizador com o e-mail introduzido.\");\r\n                }\r\n                else if(r.status === 500) {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n            }).catch(console.log);\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n            <div className=\"home_top\">\r\n                <div>\r\n                    <Link to=\"/\"><img src={Image} alt=\"E-Floresta Logo\" className=\"home_logo\" /></Link>\r\n                </div>\r\n            </div>\r\n            {sent?<div>Pedido enviado com sucesso!</div>:\r\n\r\n                <div className=\"bg-img_RecoverRequest\">\r\n                    <div className=\"body_RecoverRequest\">\r\n                        <br/>\r\n                        <h2 className=\"title_RecoverRequest\"><b>Esqueceu a sua palavra-passe?</b></h2>\r\n                        <p className=\"description_RecoverRequest\">Insira o seu e-mail para receber um link de recuperação da sua palavra-passe.</p>\r\n                        <input id=\"email_RecoverRequest\" type=\"email\" placeholder=\"Email\" maxLength=\"64\"/>\r\n                        <Button id=\"button_RecoverRequest\" type=\"submit\" variant=\"success\" onClick={recoverPassword}>\r\n                            Enviar pedido de recuperação\r\n                        </Button>\r\n\r\n                        <br/>\r\n                        <div className=\"button-return_RecoverRequest\">\r\n                            <Link to=\"/\">\r\n                                <Button id=\"faqButton\" type=\"button\">Voltar à página inicial</Button>\r\n                            </Link>\r\n                        </div>\r\n                        <br/>\r\n\r\n                    </div>\r\n\r\n                    <Form onSubmit={submitHandler}></Form>\r\n\r\n                </div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RecoverPassword","import './FindUser.css'\r\nimport TopBar from '../TopBar/TopBar.js'\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport {useRef, useState} from 'react'\r\nimport React from 'react'\r\nimport {Button, Dropdown, Form, Modal} from \"react-bootstrap\";\r\nimport {getAreaOfPolygon, getCenterOfBounds, getDistance, getPathLength, orderByDistance} from \"geolib\";\r\nimport {GoogleMap, Polygon} from \"@react-google-maps/api\";\r\nimport ProfileImage from \"../ChangeProfile/profile_picture.png\";\r\nimport CSVConverter from \"../util/CSVConverter\";\r\nimport CheckIfActive from \"../util/CheckIfActive\";\r\n\r\n\r\nconst FindUser = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const [obj, setObj] = useState({});\r\n    const [show, setShow] = useState(false);\r\n    const didMount = useRef(false);\r\n    const csvObj = JSON.parse(localStorage.getItem('csv'));\r\n\r\n\r\n    function findUser(){\r\n        let myObj = {token:localStorage.getItem('token')};\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObj),\r\n        };\r\n        fetch(\"https://moonlit-oven-349523.appspot.com/rest/info/profileinfo/\"+document.getElementById(\"username_finduser\").value, options)\r\n            .then((r) => {\r\n                if(r.ok){\r\n                    r.text().then(t => setObj(JSON.parse(t)))\r\n                }\r\n                else if(r.status === 403) {\r\n                    localStorage.removeItem('token');\r\n                    navigate('/');\r\n                }\r\n                else if(r.status === 404) {\r\n                    alert(\"O utilizador não existe.\");\r\n                }\r\n                else {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n            }).catch(r=>(console.log));\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (didMount.current) setShow(true);\r\n        else didMount.current = true;\r\n    }, [obj]);\r\n\r\n    return(\r\n        <>\r\n            <CSVConverter/>\r\n            <CheckIfLoggedOut />\r\n            <CheckIfActive />\r\n            <TopBar />\r\n\r\n            <div className=\"bg-img_FindUser\">\r\n                <div className=\"body_FindUser\">\r\n                    <br/>\r\n                    <h2 className=\"title_FindUser\"><b>Encontre um utilizador</b></h2>\r\n                    <p className=\"description_FindUser\">Verifique ou altere a informação de um utilizador</p>\r\n                    <input id=\"username_finduser\" type=\"text\" placeholder=\"Username do utilizador\" maxLength=\"64\"/>\r\n                    <Button onClick={findUser} id=\"button_FindUser\" type=\"button\" className=\"btn btn-success\">Procurar</Button>\r\n                </div>\r\n                <FindUserModal obj={obj} show={show} setShow={setShow} csvObj={csvObj}/>\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nconst FindUserModal = (props) => {\r\n    const handleClose = () => {props.setShow(false);clearStates()};\r\n    const [changeRole, setChangeRole] = useState(false);\r\n    const [changeState, setChangeState] = useState(false);\r\n    let changeInfo = false;\r\n    const [newRole, setNewRole] = useState(\"\");\r\n\r\n    const [distritoOptions, setDistritoOptions] = useState([]);\r\n    const [concelhoOptions, setConcelhoOptions] = useState([]);\r\n    const [freguesiaOptions, setFreguesiaOptions] = useState([]);\r\n    const [distritoValue, setDistritoValue] = useState(\"\");\r\n    const [concelhoValue, setConcelhoValue] = useState(\"\");\r\n    const [freguesiaValue, setFreguesiaValue] = useState(\"\");\r\n\r\n\r\n\r\n\r\n    function handleShow(){\r\n        const distritoList = [];\r\n        const distritos = Object.keys(props.csvObj);\r\n        for(let i = 0; i<distritos.length; i++) {\r\n            distritoList.push(<option>{distritos[i]}</option>)\r\n        }\r\n        setDistritoOptions(distritoList);\r\n        setNewRole(props.obj.role);\r\n    }\r\n\r\n    function clearStates(){\r\n        setChangeState(false);\r\n        setChangeRole(false);\r\n        changeInfo = false;\r\n        setNewRole(props.obj.role);\r\n        setDistritoOptions([]);\r\n        setConcelhoOptions([]);\r\n        setFreguesiaOptions([]);\r\n    }\r\n\r\n    function handleSetDistrito(distrito){\r\n        setDistritoValue(distrito);\r\n        let listC = Object.keys(props.csvObj[distrito]);\r\n\r\n        let list = [];\r\n        for(let i = 0; i<listC.length; i++){\r\n            list.push(<option>{listC[i]}</option>);\r\n        }\r\n        setConcelhoOptions(list);\r\n        setFreguesiaOptions([]);\r\n    }\r\n\r\n    function handleSetConcelho(concelho){\r\n        setConcelhoValue(concelho);\r\n        let listF = Object.keys(props.csvObj[distritoValue][concelho]);\r\n\r\n        let list = [];\r\n        for(let i = 0; i<listF.length; i++){\r\n            list.push(<option>{listF[i]}</option>);\r\n        }\r\n        setFreguesiaOptions(list);\r\n    }\r\n\r\n    function sendRequest(){\r\n        let arr = [];\r\n        if(changeInfo){\r\n            arr.push(sendInfo());\r\n        }\r\n        if(changeState){\r\n            arr.push(sendState());\r\n        }\r\n        if(changeRole){\r\n            arr.push(sendRole());\r\n        }\r\n\r\n        Promise.all(arr).then((r) => {alert(\"Success\"); handleClose(); console.log(r)}).catch((reason) => console.log(reason));\r\n    }\r\n\r\n    async function sendInfo(){\r\n        let myObj = {name:document.getElementById(\"change-complete-name\").value,\r\n                        phone:document.getElementById(\"change-phone\").value,\r\n                        nif:document.getElementById(\"change-nif\").value,\r\n                        token:localStorage.getItem('token')};\r\n\r\n        const options = {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObj),\r\n        };\r\n\r\n        return fetch(\"https://moonlit-oven-349523.appspot.com/rest/modify/info/\" + props.obj.username, options);\r\n    }\r\n\r\n    async function sendState(){\r\n        let myObj = {token:localStorage.getItem('token'),\r\n            newState:document.getElementById(\"state_select\").value};\r\n\r\n        const options = {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObj),\r\n        };\r\n\r\n        return fetch(\"https://moonlit-oven-349523.appspot.com/rest/modify/state/\" + props.obj.username, options);\r\n    }\r\n\r\n    async function sendRole(){\r\n        console.log(concelhoValue);\r\n        let myObj = {token:localStorage.getItem('token'),\r\n            newRole:document.getElementById(\"role_select\").value,\r\n            distrito:distritoValue,\r\n            concelho:concelhoValue,\r\n            freguesia:freguesiaValue};\r\n\r\n        const options = {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObj),\r\n        };\r\n\r\n        return fetch(\"https://moonlit-oven-349523.appspot.com/rest/modify/role/\" + props.obj.username, options);\r\n    }\r\n\r\n\r\n    return <>\r\n        <Modal\r\n            show={props.show}\r\n            onHide={handleClose}\r\n            backdrop=\"static\"\r\n            dialogClassName=\"modal-xl\"\r\n            keyboard={false}\r\n            onShow={handleShow}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title> {props.obj.username} </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"profileInfo_finduser\">\r\n                    <div id=\"email_finduser\">\r\n                        <p className=\"label\"> <b>E-mail:</b> {props.obj.email} </p>\r\n                    </div>\r\n                    <div id=\"name_finduser\">\r\n                        <label className=\"label\"><b> Nome Completo:</b> </label>\r\n                        <input onChange={() => changeInfo = true} className=\"input-modal_FindUser\" id=\"change-complete-name\" type=\"text\" defaultValue={props.obj.name}/>\r\n                    </div>\r\n                    <div id=\"phone_finduser\">\r\n                        <label className=\"label\"> <b>Telemóvel/Telefone:</b> </label>\r\n                        <input onChange={() => changeInfo = true} className=\"input-modal_FindUser\" id=\"change-phone\" type=\"number\" defaultValue={props.obj.phone} maxLength=\"9\"/>\r\n                    </div>\r\n                    <div id=\"nif_finduser\">\r\n                        <label className=\"label\" htmlFor=\"change-nif\"><b>NIF:</b> </label>\r\n                        <input onChange={() => changeInfo = true}className=\"input-modal_FindUser\" id=\"change-nif\" type=\"number\" defaultValue={props.obj.nif} maxLength=\"9\"/>\r\n                    </div>\r\n                    <div id=\"grade_finduser\">\r\n                        <p className=\"label\"> <b>Nível do utilizador: </b>{props.obj.grade} </p>\r\n                    </div>\r\n                    <div id=\"type_finduser\">\r\n                        <p className=\"label\"> <b>Tipo de utilizador: </b>{props.obj.type} </p>\r\n                    </div>\r\n                    <div id=\"state_finduser\">\r\n                        <p className=\"label\"> <b>Estado do utilizador: </b>{props.obj.state} </p>\r\n                    </div>\r\n                    <div id=\"distrito_finduser\">\r\n                        <p className=\"label\"> <b>Distrito: </b>{props.obj.distrito} </p>\r\n                    </div>\r\n                    <div id=\"concelho_finduser\">\r\n                        <p className=\"label\"> <b>Concelho: </b>{props.obj.concelho} </p>\r\n                    </div>\r\n                    <div id=\"freguesia_finduser\">\r\n                        <p className=\"label\"> <b>Freguesia: </b>{props.obj.freguesia} </p>\r\n                    </div>\r\n                    <Form.Check\r\n                        className=\"position-relative mt-3\"\r\n                        type=\"switch\"\r\n                        id=\"custom-switch\"\r\n                        label=\"Atualizar role do user\"\r\n                        onChange={ () => setChangeRole(!changeRole)}\r\n                    />\r\n\r\n                    {changeRole?<Form.Group className=\"mt-3\" controlId=\"role_dropdown_finduser\">\r\n                        <Form.Label> <strong>Role</strong> </Form.Label>\r\n                        <Form.Select onChange={(ce) => setNewRole(ce.target.value)} id=\"role_select\" className=\"map_fields\" defaultValue={props.obj.role}>\r\n                            {localStorage.getItem('role') === 'A1'?<option value=\"A1\">Administrador de Sistema</option>:<></>}\r\n                            <option value=\"A2\">Moderador</option>\r\n                            <option value=\"B1\">Técnico Camara Municipal</option>\r\n                            <option value=\"B2\">Técnico Junta de Freguesia</option>\r\n                            <option value=\"C\">Entidade</option>\r\n                            <option value=\"D\">Utilizador</option>\r\n                        </Form.Select>\r\n                    </Form.Group>:<></>}\r\n\r\n\r\n                    {((String(newRole).includes(\"B\") || newRole === \"C\") && changeRole)?<>\r\n                        <Form.Group className=\"mt-3\" controlId=\"distrito_dropdown_finduser\">\r\n                            <Form.Label> <strong>Distrito</strong> </Form.Label>\r\n                            <Form.Select onChange={(e) => handleSetDistrito(e.target.value)} id=\"role_select\" className=\"map_fields\" defaultValue=\"\">\r\n                                <option disabled={true} value=\"\">-</option>\r\n                                {distritoOptions}\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mt-3\" controlId=\"concelho_dropdown_finduser\">\r\n                            <Form.Label> <strong>Concelho</strong> </Form.Label>\r\n                            <Form.Select onChange={(e) => handleSetConcelho(e.target.value)} id=\"role_select\" className=\"map_fields\" defaultValue=\"\">\r\n                                <option disabled={true} value=\"\">-</option>\r\n                                {concelhoOptions}\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n                    </>:<></>}\r\n\r\n                    {(newRole === \"B2\") && changeRole?<>\r\n                        <Form.Group className=\"mt-3\" controlId=\"freguesia_dropdown_finduser\">\r\n                            <Form.Label> <strong>Freguesia</strong> </Form.Label>\r\n                            <Form.Select onChange={(e) =>setFreguesiaValue(e.target.value)} id=\"role_select\" className=\"map_fields\" defaultValue=\"\">\r\n                                <option disabled={true} value=\"\">-</option>\r\n                                {freguesiaOptions}\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n                    </>:<></>}\r\n\r\n                    <Form.Check\r\n                        className=\"position-relative mt-3\"\r\n                        type=\"switch\"\r\n                        id=\"custom-switch\"\r\n                        label=\"Atualizar estado do user\"\r\n                        onChange={ () => setChangeState(!changeState)}\r\n                    />\r\n\r\n                    {changeState?<Form.Group className=\"mt-3\" controlId=\"state_dropdown_finduser\">\r\n                        <Form.Label> <strong>Estado</strong> </Form.Label>\r\n                        <Form.Select id=\"state_select\" className=\"map_fields\" defaultValue={props.obj.state}>\r\n                            <option value=\"ACTIVE\">Ativo</option>\r\n                            <option value=\"INACTIVE\">Inativo</option>\r\n                        </Form.Select>\r\n                    </Form.Group>:<></>}\r\n\r\n                    <div className=\"btn-group\" id=\"confirmAndCancel_ChangeProfile\">\r\n                        <div id=\"confirmChanges_ChangeProfile\">\r\n                            <Button onClick={sendRequest} id=\"confirm-modal_FindUser\" type=\"button\" variant=\"success\" size=\"sm\">\r\n                                Confirmar Alterações\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal.Body>\r\n        </Modal>\r\n    </>\r\n}\r\n\r\nexport default FindUser","import \"./ReportsTechnician.css\"\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport React, {useEffect, useState} from 'react'\r\nimport {Button, Card, Col, Row, Spinner} from \"react-bootstrap\";\r\nimport {Polygon} from \"@react-google-maps/api\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport CheckIfActive from \"../util/CheckIfActive\";\r\n\r\n\r\nconst ReportsTechnician = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const [requested, setRequested] = useState(false);\r\n    const [reportList, setReportList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let myObj = {token:localStorage.getItem('token')};\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObj),\r\n        };\r\n\r\n        fetch(\"https://moonlit-oven-349523.appspot.com/rest/parcel/getreportsAll\", options)\r\n            .then((r) => {\r\n                if(r.ok){\r\n                    r.text().then(t => {\r\n                        let arr = JSON.parse(t);\r\n                        let auxArr = [];\r\n                        for(let i = 0; i<arr.length; i++){\r\n                            auxArr.push(\r\n                                <Row>\r\n                                    <Card border=\"dark\" style={{ width: '85%', cursor: 'pointer'}}>\r\n                                    <Card.Header><b>Autor: {arr[i].sender}</b></Card.Header>\r\n                                    <Card.Header>Prioridade: {arr[i].priority}</Card.Header>\r\n                                    <Card.Body>\r\n                                        <Card.Title> <h3>Tópico: {arr[i].topic}</h3></Card.Title>\r\n                                        <p></p>\r\n                                        <Card.Text>\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    <h6> <b>Nome da Parcela:</b> {arr[i].parcelName}</h6>\r\n                                                    <h6> <b>Distrito:</b> {arr[i].distrito}</h6>\r\n                                                    <h6> <b>Concelho: </b>{arr[i].concelho}</h6>\r\n                                                    <h6> <b>Freguesia:</b> {arr[i].freguesia}</h6>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <h6><b>Descrição do problema: </b></h6>\r\n                                                    <h6>{arr[i].message}</h6>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Card.Text>\r\n                                    </Card.Body>\r\n                                    <Card.Footer>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <Button onClick={() => reviewReport(arr[i].reportID, \"POSITIVE\")} id=\"confirm-report_ReportsTechnician\">Confirmar</Button>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Button onClick={() => reviewReport(arr[i].reportID, \"NEUTRAL\")} id=\"ignore-report_ReportsTechnician\">Ignorar</Button>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Button onClick={() => reviewReport(arr[i].reportID, \"NEGATIVE\")} id=\"decline-report_ReportsTechnician\">Rejeitar</Button>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Card.Footer>\r\n                                </Card>\r\n                            </Row>)\r\n                        }\r\n                        setReportList(auxArr);\r\n                    })\r\n                }\r\n                else if(r.status === 403){\r\n                    localStorage.removeItem('token');\r\n                    navigate('/');\r\n                }\r\n                else if(r.status === 404){\r\n                    alert(\"O proprietário não existe.\");\r\n                }\r\n                else {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n            }).catch(console.log);\r\n    }, [])\r\n\r\n    function reviewReport(reportID, opinion){\r\n        let myObj = {token:localStorage.getItem('token'),\r\n                        opinion:opinion};\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObj),\r\n        };\r\n\r\n        fetch(\"https://moonlit-oven-349523.appspot.com/rest/parcel/review/\"+reportID, options)\r\n            .then((r) => {\r\n                if(r.ok){\r\n                    alert(\"Success\");\r\n                    window.location.reload();\r\n                }\r\n                else if(r.status === 400) {\r\n                    alert(\"Todos os campos devem ser preenchidos corretamente.\");\r\n                }\r\n                else if(r.status === 403) {\r\n                    localStorage.removeItem('token');\r\n                    navigate('/');\r\n                }\r\n                else if(r.status === 404) {\r\n                    alert(\"O proprietário ou a parcela não existe.\");\r\n                }\r\n                else {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n            }).catch(()=>(console.log));\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <CheckIfActive />\r\n            <TopBar />\r\n\r\n            <div className=\"body_ReportsTechnician\">\r\n                {requested? <Spinner id=\"spinner_ConfirmationPage\" variant=\"success\" animation=\"border\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Carregando...</span>\r\n                </Spinner> : reportList}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReportsTechnician","import \"./MakeReport.css\"\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport React from 'react'\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport {Link, useLocation, useNavigate} from \"react-router-dom\";\r\nimport CheckIfActive from \"../util/CheckIfActive\";\r\n\r\nconst MakeReport = () => {\r\n    const search = useLocation().search;\r\n    const name = new URLSearchParams(search).get('id');\r\n    const navigate = useNavigate();\r\n    function sendReport(){\r\n        let myObj = {token:localStorage.getItem('token'),\r\n                        topic:document.getElementById(\"topic_MakeReport\").value,\r\n                        text:document.getElementById(\"msg_MakeReport\").value};\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObj),\r\n        };\r\n\r\n        fetch(\"https://moonlit-oven-349523.appspot.com/rest/parcel/report/\"+name, options)\r\n            .then((r) => {\r\n                if(r.ok){\r\n                    alert(\"success!\");\r\n                    navigate(\"/\");\r\n                }\r\n                else if(r.status === 400) {\r\n                    alert(\"Todos os campos devem ser preenchidos.\");\r\n                }\r\n                else if(r.status === 403){\r\n                    localStorage.removeItem('token');\r\n                    navigate('/');\r\n                }\r\n                else if(r.status === 404){\r\n                    alert(\"Utilizador ou parcela não existe.\");\r\n                }\r\n                else {\r\n                    alert(\"Erro do sistema. Tente novamente mais tarde.\");\r\n                }\r\n            }).catch(console.log);\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n    }\r\n    return(\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <CheckIfActive />\r\n            <TopBar />\r\n\r\n            <div className=\"bg-img_MakeReport\">\r\n                <div className=\"report-body_MakeReport\">\r\n\r\n                    <br/>\r\n                    <h2 className=\"title_MakeReport\"><b>Reporte uma parcela</b></h2>\r\n                    <p className=\"description_MakeReport\">Acha que algo está errado? Conte-nos o problema. <br/>\r\n                        A sua contribuição ajuda-nos a melhorar o funcionamento do site!</p>\r\n\r\n                    <Form onSubmit={submitHandler} >\r\n\r\n                        <Form.Group controlId=\"makereport_topic\" className=\"report-parcel-form\" >\r\n                            <Form.Label>Tópico do problema (descrição breve):</Form.Label>\r\n                            <Form.Control required type=\"text\" placeholder=\"Tópico\" id=\"topic_MakeReport\" maxLength=\"64\"/>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"makereport_text\" className=\"report-parcel-form\" >\r\n                            <Form.Label>Descreva o problema:</Form.Label>\r\n                            <Form.Control required as=\"textarea\" rows={4} placeholder=\"Mensagem\" id=\"msg_MakeReport\" maxLength=\"512\"/>\r\n                        </Form.Group>\r\n\r\n                        <Button id=\"submit_MakeReport\" variant=\"success\" type=\"submit\" onClick={sendReport}>\r\n                            Submeter\r\n                        </Button>\r\n\r\n                        <Link to=\"/homepage\">\r\n                            <Button variant=\"secondary\" id=\"cancel_MakeReport\">\r\n                                Cancelar\r\n                            </Button>\r\n                        </Link>\r\n\r\n                    </Form>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MakeReport","import './FAQ.css'\r\nimport TopBar from '../TopBar/TopBar.js'\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport React from 'react'\r\nimport {Accordion} from \"react-bootstrap\";\r\nimport CheckIfActive from \"../util/CheckIfActive\";\r\n\r\nconst FAQ = () => {\r\n    return(\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <CheckIfActive />\r\n            <TopBar />\r\n\r\n            <div className=\"bg-img_FAQ\">\r\n                <div className=\"body_FAQ\">\r\n                    <br/>\r\n                    <h2 className=\"title_FAQ\"><b>Perguntas frequentes</b></h2>\r\n                    <p className=\"description_FAQ\">Nesta secção pode encontrar algumas das perguntas feitas com mais frequência e as suas respetivas\r\n                        respostas. Esperemos que lhe sejam úteis.\r\n                    </p>\r\n\r\n                    <Accordion className=\"accordion_FAQ\">\r\n                        <Accordion.Item eventKey=\"0\">\r\n                            <Accordion.Header>Para registar uma parcela é necessário preencher todos os campos? </Accordion.Header>\r\n                            <Accordion.Body>\r\n                                Sim, todos os campos apresentados devem ser preenchidos.\r\n                            </Accordion.Body>\r\n                        </Accordion.Item>\r\n                        <Accordion.Item eventKey=\"1\">\r\n                            <Accordion.Header>Existe uma parcela sobreposta à minha. O que posso fazer?</Accordion.Header>\r\n                            <Accordion.Body>\r\n                                Na aba \"Minhas Parcelas\" pode visualizar todas as suas parcelas atuais. Clicando no botão \"Parcelas Próximas\"\r\n                                para visualizar parcelas adjacentes às suas. Pode clicar nelas para obter mais informações ou denunciar a parcela.\r\n                                Clicar no botão de \"Reportar\" irá encaminhá-lo para uma página nova onde poderá registar a sua queixa. Esta será\r\n                                posteriormente avaliada por um técnico ou administrador que irá avaliar a pertinência da denúncia.\r\n                            </Accordion.Body>\r\n                        </Accordion.Item>\r\n                        <Accordion.Item eventKey=\"2\">\r\n                            <Accordion.Header>A minha parcela está em estado pendente ou rejeitado. O que aconteceu?</Accordion.Header>\r\n                            <Accordion.Body>\r\n                                Se a sua parcela estiver em estado pendente, não se preocupe, ela irá ser avaliada por um técnico ou\r\n                                administrador em breve, que após verificar que tudo está correto irá aprovar a sua parcela. Saberá que\r\n                                ela foi aprovada quando o estado dela aparecer como \"Aprovada\". Se a sua parcela estiver em estado reprovado,\r\n                                algo correu mal e o nosso técnico ou administrador rejeitou o seu registo. Possivelmente alguma informação ou\r\n                                coordenada foi registada erradamente. Tente editar as informações de forma a que fiquem corretas. Depois,\r\n                                é só aguardar.\r\n                            </Accordion.Body>\r\n                        </Accordion.Item>\r\n                        <Accordion.Item eventKey=\"3\">\r\n                            <Accordion.Header>Enganei-me a registar as coordenadas da minha parcela. O que posso fazer?</Accordion.Header>\r\n                            <Accordion.Body>\r\n                                Vá à aba \"Minhas Parcelas\" e na parcela em causa, clique no botão \"Editar\". Na parte superior da página\r\n                                que apareceu existe um mapa onde é possível clicar para marcar as novas coordenadas. Atenção: todos os pontos\r\n                                da parcela devem ser remarcados, mesmo aqueles que já estão, à partida, corretos, ou seja, toda a parcela deve\r\n                                ser redesenhada. Clique no botão \"Confirmar Alterações\" no fundo da página.\r\n                            </Accordion.Body>\r\n                        </Accordion.Item>\r\n                        <Accordion.Item eventKey=\"4\">\r\n                            <Accordion.Header>Como posso pedir para que alguém gerencie a minha parcela? E sob que condições?</Accordion.Header>\r\n                            <Accordion.Body>\r\n                                 Cada pedido de gerenciamento é exclusivo para a parcela requisitada, logo se quiser que todas as suas parcelas\r\n                                 sejam geridas por uma entidade, deve efetuar esse pedido para todas. Para isso, dirija-se à aba \"Minhas Parcelas\"\r\n                                 e clique no botão \"Editar\" da parcela em causa. Se esta parcela ainda não estiver atribuída a nenhuma entidade\r\n                                 (de notar que só é possível atribuir um gerente por parcela) as entidades disponíveis na sua localização serão\r\n                                 listadas. Nesse caso, desde que existam entidades disponíveis, é possível escolher uma da lista. Isso irá enviar\r\n                                 um pedido à entidade. Para concluir esta operação, deverá aguardar que a entidade a que enviou o seu pedido o aceite.\r\n                            </Accordion.Body>\r\n                        </Accordion.Item>\r\n                        <Accordion.Item eventKey=\"5\">\r\n                            <Accordion.Header>É possível anular o gerenciamento de uma parcela por uma entidade?</Accordion.Header>\r\n                            <Accordion.Body>\r\n                                Sim. Para isso, dirija-se à aba \"Minhas Parcelas\" e clique no botão \"Editar\" da parcela em causa. Se esta parcela\r\n                                estiver atribuída a uma entidade, ela aparecerá no campo devido. Para remover a entidade, basta clicar em\r\n                                \"Remover gerente\".\r\n                            </Accordion.Body>\r\n                        </Accordion.Item>\r\n                        <Accordion.Item eventKey=\"6\">\r\n                            <Accordion.Header>Como funcionam as notas?</Accordion.Header>\r\n                            <Accordion.Body>\r\n                                As notas referem-se aos pontos de confiança de um utilizador. Um utilizador que faça contribuições positivas (denúncias\r\n                                consideradas pertinentes pelos técnicos) ganhará pontos de confiança, o que influenciará a subida da nota. Caso o\r\n                                utilizador faça contribuições que atrapalhem o bom funcionamento do site, a sua nota irá descer. Existem 5 notas possíveis:\r\n                                de 1 a 5, sendo 1 a pior e 5 a melhor. A nota inicial é 2. Os utilizadores com notas superiores terão prioridade sobre as\r\n                                denúncias feitas por utilizadores com notas mais baixas. É possível verificar a sua nota no perfil de utilizador.\r\n                            </Accordion.Body>\r\n                        </Accordion.Item>\r\n                    </Accordion>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FAQ","import './FAQUnlogged.css'\r\nimport React from 'react'\r\nimport {Accordion, Button} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Image from \"../logo.png\";\r\n\r\nconst FAQUnlogged = () => {\r\n    return(\r\n        <>\r\n\r\n            <div className=\"home_top\">\r\n                <div>\r\n                    <Link to=\"/\"><img src={Image} alt=\"E-Floresta Logo\" className=\"home_logo\" /></Link>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"bg-img_FAQ\">\r\n                <div className=\"body_FAQ\">\r\n                    <br/>\r\n                    <h2 className=\"title_FAQ\"><b>Perguntas frequentes</b></h2>\r\n                    <p className=\"description_FAQ\">Nesta secção pode encontrar algumas das perguntas feitas com mais frequência e as suas respetivas\r\n                        respostas. Esperemos que lhe sejam úteis.\r\n                    </p>\r\n\r\n                    <Accordion className=\"accordion_FAQ\">\r\n                        <Accordion.Item eventKey=\"0\">\r\n                            <Accordion.Header>Que dados preciso de fornecer para criar uma conta? </Accordion.Header>\r\n                            <Accordion.Body>\r\n                                Para criar uma conta deverá fornecer pelo menos o seu nome completo e um e-mail funcional.\r\n                                Poderá adicionalmente, acrescentar o seu telemóvel/telefone e NIF, se assim o entender, no momento da\r\n                                criação da conta ou mais tarde, editando o seu perfil.\r\n                            </Accordion.Body>\r\n                        </Accordion.Item>\r\n                        <Accordion.Item eventKey=\"1\">\r\n                            <Accordion.Header>O que é necessário para registar uma parcela?</Accordion.Header>\r\n                            <Accordion.Body>\r\n                                Para registar uma parcela deverá fornecer as seguintes informações: a localização da parcela (inclui distrito,\r\n                                concelho, freguesia, secção e número de artigo), as coordenadas dos seus limites (que podem ser marcadas num\r\n                                mapa próprio, ou inseridas manualmente), o tipo de cobertura do solo, escolher uma utilização atual e\r\n                                prévia do solo dentre as opções disponíveis no site, uma foto identificativa da parcela e um PDF que funcione\r\n                                como comprovativo de que se trata do dono da mesma. Todos os campos descritos préviamente são obrigatórios.\r\n                            </Accordion.Body>\r\n                        </Accordion.Item>\r\n                        <Accordion.Item eventKey=\"2\">\r\n                            <Accordion.Header>Quem irá gerir a minha parcela?</Accordion.Header>\r\n                            <Accordion.Body>\r\n                                Cada parcela registada poderá ser gerida por quem a registou/dono ou, caso o deseje, poderá ser gerida\r\n                                por uma entidade competente disponível na sua freguesia ou concelho, através de um pedido que terá de ser\r\n                                aceite pela mesma. Parcelas diferentes podem utilizar métodos de gerenciamento diferentes ou até ser geridas\r\n                                por entidades distintas.\r\n                            </Accordion.Body>\r\n                        </Accordion.Item>\r\n                    </Accordion>\r\n\r\n                    <div className=\"button_FAQUnlogged\">\r\n                        <Link to=\"/\">\r\n                            <Button id=\"faqButton\" type=\"button\">Voltar à página inicial</Button>\r\n                        </Link>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FAQUnlogged","import './WaitForVerif.css'\r\nimport React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nimport Image from \"../logo.png\";\r\n\r\n\r\nconst WaitForVerif = () => {\r\n    return(\r\n        <>\r\n            <div className=\"home_top\">\r\n                <div>\r\n                    <Link to=\"/\"><img src={Image} alt=\"E-Floresta Logo\" className=\"home_logo\" /></Link>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"bg-img_WFV\">\r\n                <div className=\"body_WFV\">\r\n                    <br/>\r\n                    <h2 className=\"title_WFV\"><b>Um e-mail de confirmação foi enviado!</b></h2>\r\n                    <br/>\r\n                    <p className=\"description_WFV\">\r\n                        Para garantir o bom funcionamento do site, enviámos-lhe um e-mail para o mail fornecido no formulário.\r\n                        Por favor, verifique o seu e-mail, clique no link que lhe enviámos e inicie sessão. Assim que o fizer, poderá começar\r\n                        a explorar e utilizar o site.\r\n                    </p>\r\n                    <p className=\"description_WFV\">\r\n                       Nota: se não encontrar o e-mail enviado, por favor, verifique o seu Spam.\r\n                    </p>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WaitForVerif","import './Error404.css'\r\nimport React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport Image from \"../logo.png\";\r\nimport Image1 from \"./icon.png\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\n\r\nconst Error404 = () => {\r\n\r\n    return(\r\n        <>\r\n          {localStorage.getItem('token') === null?\r\n          <div className=\"home_top\">\r\n            <div>\r\n                <Link to=\"/\"><img src={Image} alt=\"E-Floresta Logo\" className=\"home_logo\" /></Link>\r\n            </div>\r\n          </div>\r\n          :\r\n          <>\r\n              <CheckIfLoggedOut />\r\n              <TopBar />\r\n          </>\r\n          }\r\n\r\n          <div className=\"bg-img_Error404\">\r\n            <div className=\"body_Error404\">\r\n                <br/>\r\n                <img src={Image1} alt=\"E-Floresta Ícone\" className=\"icon_Error404\" />\r\n                <br/>\r\n                <h1 className=\"title_Error404\"><b>Esta página não foi encontrada</b></h1>\r\n                <h3 className=\"description_Error404\">Ups! Algo deu errado... A página que procura não existe.</h3>\r\n                <br/>\r\n\r\n                {localStorage.getItem('token') === null ?\r\n                    <Link to=\"/\">\r\n                        <Button type=\"button\" id=\"button_Error404\" className=\"btn btn-success\"> Voltar à página inicial </Button>\r\n                    </Link>\r\n                    :\r\n                    <Link to=\"/homepage\">\r\n                        <Button type=\"button\" id=\"button_Error404\" className=\"btn btn-success\"> Voltar à página inicial </Button>\r\n                    </Link>\r\n                }\r\n            </div>\r\n          </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Error404","import Image from './logo.png'\r\n\r\nimport './App.css'\r\nimport CreateAndLogin from './CreateAndLogin/CreateAndLogin'\r\nimport Profile from './Profile/Profile'\r\nimport LoggedHomepage from \"./LoggedHomepage/LoggedHomepage\"\r\nimport ChangeProfile from \"./ChangeProfile/ChangeProfile\"\r\nimport AboutUs from \"./AboutUs/AboutUs\"\r\nimport RegisterParcel from './RegisterParcel/RegisterParcel'\r\nimport CheckIfLoggedIn from './util/CheckIfLoggedIn'\r\nimport ChangePassword from \"./ChangePassword/ChangePassword\";\r\nimport MyParcels from \"./MyParcels/MyParcels\";\r\nimport ProposedParcelsEntity from \"./ProposedParcelsEntity/ProposedParcelsEntity\";\r\nimport ParcelsEntity from \"./ParcelsEntity/ParcelsEntity\";\r\nimport ApproveParcels from \"./ApproveParcels/ApproveParcels\";\r\nimport ApproveParcelsAdmin from \"./ApproveParcelsAdmin/ApproveParcelsAdmin\";\r\nimport AllParcels from \"./AllParcels/AllParcels\";\r\nimport AllParcelsAdmin from \"./AllParcelsAdmin/AllParcelsAdmin\";\r\nimport Statistics from \"./Statistics/Statistics\";\r\nimport StatisticsEntity from \"./StatisticsEntity/StatisticsEntity\";\r\nimport StatisticsTechnician from \"./StatisticsTechnician/StatisticsTechnician\";\r\nimport StatisticsAdmin from \"./StatisticsAdmin/StatisticsAdmin\";\r\nimport ConfirmationPage from \"./ConfirmationPage/ConfirmationPage\";\r\nimport Rankings from \"./Rankings/Rankings\";\r\nimport RecoverPassword from \"./RecoverPassword/RecoverPassword\";\r\nimport RecoverRequest from \"./RecoverPassword/RecoverRequest\";\r\nimport FindUser from \"./FindUser/FindUser\";\r\nimport ReportsTechnician from \"./ReportsTechnician/ReportsTechnician\";\r\nimport MakeReport from \"./MakeReport/MakeReport\";\r\nimport FAQ from \"./FAQ/FAQ\";\r\nimport FAQUnlogged from \"./FAQUnlogged/FAQUnlogged\";\r\nimport WaitForVerif from \"./WaitForVerif/WaitForVerif\";\r\nimport Error404 from \"./ErrorsPages/Error404\";\r\nimport CSVConverter from \"./util/CSVConverter\";\r\n\r\n\r\n\r\nimport Front_img from \"./front_img.jpg\";\r\nimport React, { Component }  from 'react';\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes, Route, Link\r\n} from \"react-router-dom\"\r\n\r\n\r\n\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n      <Router>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home />} />\r\n          <Route path=\"/create-and-login\" element={<CreateAndLogin />} />\r\n          <Route path=\"/map\" element={<RegisterParcel />} />\r\n          <Route path=\"/profile\" element={<Profile />} />\r\n          <Route path=\"/homepage\" element={<LoggedHomepage />} />\r\n          <Route path=\"/change-profile\" element={<ChangeProfile />} />\r\n          <Route path=\"/change-password\" element={<ChangePassword />} />\r\n          <Route path=\"/about-us\" element={<AboutUs />} />\r\n          <Route path=\"/my-parcels\" element={<MyParcels />} />\r\n          <Route path=\"/proposed-parcels-entity\" element={<ProposedParcelsEntity />} />\r\n          <Route path=\"/parcels-entity\" element={<ParcelsEntity />} />\r\n          <Route path=\"/approve-parcels\" element={<ApproveParcels />} />\r\n          <Route path=\"/approve-parcels-admin\" element={<ApproveParcelsAdmin />} />\r\n          <Route path=\"/all-parcels\" element={<AllParcels />} />\r\n          <Route path=\"/all-parcels-admin\" element={<AllParcelsAdmin />} />\r\n          <Route path=\"/statistics\" element={<Statistics />} />\r\n          <Route path=\"/statistics-entity\" element={<StatisticsEntity />} />\r\n          <Route path=\"/statistics-technician\" element={<StatisticsTechnician />} />\r\n          <Route path=\"/statistics-admin\" element={<StatisticsAdmin />} />\r\n          <Route path=\"/confirmation\" element={<ConfirmationPage />} />\r\n          <Route path=\"/recover\" element={<RecoverPassword />} />\r\n          <Route path=\"/recover-request\" element={<RecoverRequest />} />\r\n          <Route path=\"/rankings\" element={<Rankings />} />\r\n          <Route path=\"/find-user\" element={<FindUser />} />\r\n          <Route path=\"/reports-technician\" element={<ReportsTechnician />} />\r\n          <Route path=\"/make-report\" element={<MakeReport />} />\r\n          <Route path=\"/faq\" element={<FAQ />} />\r\n          <Route path=\"/faq-unlogged\" element={<FAQUnlogged />} />\r\n          <Route path=\"/wait-for-verif\" element={<WaitForVerif />} />\r\n          <Route path=\"*\" exact={false} element={<Error404 />} />\r\n        </Routes>\r\n      </Router>\r\n  )\r\n}\r\n\r\nconst Home = () => {\r\n  return (\r\n      <>\r\n        <CSVConverter/>\r\n        <CheckIfLoggedIn />\r\n\r\n        <div className=\"home_top\">\r\n\r\n          <div>\r\n            <Link to=\"/\"><img src={Image} alt=\"E-Floresta Logo\" className=\"home_logo\" /></Link>\r\n          </div>\r\n\r\n          <div className=\"home_button\">\r\n            <Link to=\"/create-and-login\">\r\n              <Button id=\"topButton_Home\" type=\"button\">Login | Criar Conta</Button>\r\n            </Link>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"home_body\">\r\n\r\n            <div className=\"hero-image_Home\">\r\n                <div className=\"hero-text_Home\">\r\n                    <h1><b>E-Floresta</b></h1>\r\n                    <p>Registe as suas parcelas de forma rápida e fácil</p>\r\n                    <Link to=\"/create-and-login\">\r\n                        <Button id=\"button-hero_Home\" variant=\"dark\">Comece já</Button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"text_Home\">\r\n                <div>\r\n                    <h1>\r\n                        O que é o projeto E-Floresta?\r\n                    </h1>\r\n                    <br/>\r\n                    O interior de Portugal está a viver um processo de desertificação populacional provocado pelo movimento\r\n                    dos mais jovens para o litoral e pelo envelhecimento da população com graves consequências económicas,\r\n                    sociais e ambientais. Em particular, a gestão da floresta torna-se incomportável, dando origem a perdas\r\n                    económicas e ambientais resultantes dos incêndios florestais. Assim, a autarquia de Mação pretende\r\n                    reordenar o seu território liderando uma iniciativa que promove a gestão integrada dos terrenos florestais\r\n                    para ganhar escala e reduzir custos. <p> <br/> Esta plataforma web permite registar a adesão voluntária dos proprietários\r\n                    a esta iniciativa comunitária e, posteriormente, seguir a sua gestão em termos de custos e proveitos. </p>\r\n                </div>\r\n                <div>\r\n                    <img src={Front_img}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"hero-image-faq_Home\">\r\n                <div className=\"hero-text-faq_Home\">\r\n                    <h1><b>Perguntas frequentes</b></h1>\r\n                    <p>Tem alguma pergunta sobre a utilização do nosso site? </p>\r\n                    <p>Verifique a página de perguntas frequentes! </p>\r\n                    <Link to=\"/faq-unlogged\">\r\n                        <Button id=\"button-hero_Home\" variant=\"dark\">FAQ</Button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n      </>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\n\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom/client'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.createRoot(document.getElementById('root')).render(<App />)","module.exports = __webpack_public_path__ + \"static/media/logo.e6484752.png\";","module.exports = __webpack_public_path__ + \"static/media/profile_picture.9acfe78b.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.e6484752.png\";","module.exports = __webpack_public_path__ + \"static/media/profile_picture.9acfe78b.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.e6484752.png\";"],"sourceRoot":""}