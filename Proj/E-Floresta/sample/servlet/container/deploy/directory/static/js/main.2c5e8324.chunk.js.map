{"version":3,"sources":["util/CheckIfLoggedOut.js","CreateAndLogin/CreateAndLogin.js","TopBar/TopBar.js","Profile/Profile.js","util/CSVConverter.js","LoggedHomepage/LoggedHomepage.js","ChangeProfile/ChangeProfile.js","AboutUs/AboutUs.js","Map/Map.js","RegisterParcel/RegisterParcel.js","util/CheckIfLoggedIn.js","ChangePassword/ChangePassword.js","util/ParcelDetailsModal/ParcelDetailsModal.js","util/ParcelEditModal/ParcelEditModal.js","MyParcels/MyParcels.js","ProposedParcelsEntity/ProposedParcelsEntity.js","ParcelsEntity/ParcelsEntity.js","ApproveParcels/ApproveParcels.js","AllParcels/AllParcels.js","StatisticsEntity/StatisticsEntity.js","ConfirmationPage/ConfirmationPage.js","Rankings/Rankings.js","App.js","index.js","logo.png","CreateAndLogin/logo.png","Profile/profile_picture.png","TopBar/logo.png","ChangeProfile/profile_picture.png","front_img.jpg"],"names":["CheckIfLoggedOut","navigate","useNavigate","localStorage","getItem","react_default","a","createElement","Fragment","CreateAndLogin","token","xmlhttp","XMLHttpRequest","type","submitHandler","e","preventDefault","className","react_router_dom","to","src","Image","alt","Form","onSubmit","Group","Control","placeholder","id","controlId","Check","label","onClick","x","document","getElementById","Button","onreadystatechange","readyState","status","responseText","obj","JSON","parse","atob","split","console","log","alert","setItem","myObj","password","value","myJson","stringify","open","setRequestHeader","send","href","required","maxLength","Select","onChange","target","confirmation","email","name","phone","nif","TopBar","LogoImage","ButtonGroup","size","includes","Dropdown","Toggle","Menu","Item","removeItem","Profile","_useState","useState","_useState2","Object","slicedToArray","username","setUsername","_useState3","_useState4","setEmail","_useState5","_useState6","setName","_useState7","_useState8","setPhone","_useState9","_useState10","setNif","_useState11","_useState12","setType","_useState13","_useState14","setState","useEffect","state","util_CheckIfLoggedOut","src_TopBar_TopBar","ProfileImage","CSVConverter","checkCSV","json","csv","lines","i","length","currentline","distrito","hasOwnProperty","concelho","freguesia","dicofre","csvJSON","LoggedHomepage","util_CSVConverter","variant","ChangeProfile","for","AboutUs","window","google","containerStyle","width","height","center","lat","lng","options","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeWeight","clickable","draggable","editable","geodesic","zIndex","React","memo","distritos","keys","distritoList","push","file","setFile","documentState","setDocument","markerList","setMarker","paths","setPaths","area","setArea","perimeter","setPerimeter","setDistrito","_useState15","_useState16","concelhoOptions","setConcelhoOptions","_useState17","_useState18","freguesiaOptions","setFreguesiaOptions","getPathLength","getDistance","Math","round","getAreaOfPolygon","esm","googleMapsApiKey","mapContainerStyle","zoom","tilt","ev","concat","key","position","icon","path","maps","SymbolPath","CIRCLE","scale","addMarker","latLng","filter","element","index","f","append","toString","_step","_iterator","_createForOfIteratorHelper","entries","s","n","done","pair","err","submitParcel","FormData","Label","listC","list","handleSetDistrito","listF","handleSetConcelho","accept","files","RegisterParcel","src_Map_Map","CheckIfLoggedIn","ChangePassword","oldPassword","newPassword","modalContainerStyle","ParcelDetailsModal","props","setObj","centerLoc","setCenterLoc","setZoom","Modal","onShow","owner","show","onHide","setShow","backdrop","dialogClassName","keyboard","Header","closeButton","Title","Body","latitude","longitude","onLoad","coordinates","centerPoint","getCenterOfBounds","arr","orderByDistance","mostDistant","dist","pow","undefined","manager","cover","usage","oldUsage","description","documentURL","optionsSecondary","ParcelEditModal","managerValue","setmanagerValue","managerRequestValue","setmanagerRequestValue","changedInfo","setChangedInfo","_useState19","_useState20","info","setInfo","_useState21","_useState22","managerList","setManager","_sendNewInfo","asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","sendInfo","sendDocument","sendPhoto","sendCoordinates","Promise","all","then","location","reload","catch","stop","apply","this","arguments","_sendInfo","_callee2","_context2","method","headers","Content-Type","body","abrupt","fetch","_x","_sendDocument","_callee3","formData","_context3","_x2","_sendPhoto","_callee4","photo","_context4","_x3","_sendCoordinates","_callee5","_context5","myObjManager","r","ok","text","managersObj","managerRequest","removeManager","managerName","sendManagerRequest","removeRequest","defaultValue","htmlFor","MyParcels","editShow","setEditShow","parcelList","setPList","pathsArr","_loop","Card","style","cursor","Img","photoURL","isApproved","Badge","pill","bg","Text","title","Row","Col","handleShow","handleEditShow","util_ParcelDetailsModal_ParcelDetailsModal","util_ParcelEditModal_ParcelEditModal","ProposedParcelsEntity","parcel","addManager","ParcelsEntity","parcelName","ApproveParcels","approveParcel","rejectParcel","AllParcels","StatisticsEntity","labels","datasets","backgroundColor","borderColor","borderWidth","data","utilSoloByNumber","utilSoloByArea","nrParcelsPerFreguesiaInConcelho","react_chartjs_2_dist","responsive","ConfirmationPage","confirmed","setConfirmed","search","useLocation","URLSearchParams","get","Spinner","animation","role","Rankings","userTrust","biggerArea","mostParcels","indexAxis","Home","util_CheckIfLoggedIn","Front_img","App","react_router","App_Home","src_CreateAndLogin_CreateAndLogin","src_RegisterParcel_RegisterParcel","src_Profile_Profile","src_LoggedHomepage_LoggedHomepage","src_ChangeProfile_ChangeProfile","src_ChangePassword_ChangePassword","src_AboutUs_AboutUs","src_MyParcels_MyParcels","src_ProposedParcelsEntity_ProposedParcelsEntity","src_ParcelsEntity_ParcelsEntity","src_ApproveParcels_ApproveParcels","src_AllParcels_AllParcels","src_StatisticsEntity_StatisticsEntity","src_ConfirmationPage_ConfirmationPage","src_Rankings_Rankings","ReactDOM","createRoot","render","src_App_0","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.2c5e8324.chunk.js","sourcesContent":["import React, { Component }  from 'react';\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst CheckIfLoggedOut = () => {\r\n    const navigate = useNavigate();\r\n    let token = localStorage.getItem('token');\r\n    if(token == null) {\r\n        //O utilizador nao tem um token valido, logo nao tem acesso as pags que precisam de login para lhes aceder\r\n        navigate('/');\r\n    }\r\n\r\n    return(\r\n        <></>\r\n    )\r\n}\r\n\r\nexport default CheckIfLoggedOut","import Image from './logo.png'\r\nimport './CreateAndLogin.css'\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport CheckIfLoggedIn from \"../util/CheckIfLoggedOut\";\r\nimport {Button, Form, InputGroup} from \"react-bootstrap\";\r\nimport React, { Component }  from 'react';\r\n\r\n\r\nconst CreateAndLogin = () => {\r\n  const navigate = useNavigate()\r\n  let xmlhttp = new XMLHttpRequest();\r\n  let token;\r\n  let type = \"personal\";\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n  }\r\n\r\n\r\n  function login() {\r\n\r\n    xmlhttp.onreadystatechange = function () {\r\n      if (xmlhttp.readyState == 4) {\r\n        if (xmlhttp.status == 200) {\r\n          token = xmlhttp.responseText;\r\n          let obj = JSON.parse(atob(token.split(\".\")[1]));\r\n          //console.log(atob(token));\r\n          console.log(obj);\r\n          alert(\"Login efetuado com sucesso.\");\r\n          localStorage.setItem('token', token);\r\n          localStorage.setItem('role', obj[\"role\"]);\r\n          navigate('/homepage');\r\n        } else if(xmlhttp.status == 403) {\r\n          alert(\"O username ou a password introduzidas estão erradas.\");\r\n        } else if(xmlhttp.status == 404) {\r\n          alert(\"O username introduzido não existe.\");\r\n        } else {\r\n          alert(\"Não foi possível efetuar o login.\");\r\n        }\r\n        console.log(xmlhttp.status);\r\n      }\r\n    }\r\n\r\n    let myObj = { password: document.getElementById(\"session-password\").value };\r\n    let myJson = JSON.stringify(myObj);\r\n\r\n    xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/login/\" + document.getElementById(\"session-username\").value, true);\r\n    xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n    xmlhttp.send(myJson);\r\n  }\r\n\r\n  function showPassword() {\r\n    var x = document.getElementById(\"session-password\");\r\n    if (x.type === \"password\") {\r\n      x.type = \"text\";\r\n    } else {\r\n      x.type = \"password\";\r\n    }\r\n  }\r\n\r\n  function register() {\r\n    xmlhttp.onreadystatechange = function() {\r\n      if(xmlhttp.readyState == 4) {\r\n        if(xmlhttp.status == 200){\r\n          token = xmlhttp.responseText;\r\n          let obj = JSON.parse(atob(token.split(\".\")[1]));\r\n          console.log(obj);\r\n          alert(\"Registo efetuado com sucesso.\");\r\n          localStorage.setItem('token', token);\r\n          localStorage.setItem('role', obj[\"role\"]);\r\n          navigate('/homepage');\r\n        } else if(xmlhttp.status == 400) {\r\n          alert(\"Todos os campos obrigatórios devem ser preenchidos.\");\r\n        } else if(xmlhttp.status == 409) {\r\n          alert(\"Já existe um utilizador com o mesmo nome.\");\r\n        } else {\r\n          alert(\"Não foi possível registar o utilizador.\");\r\n        }\r\n      }\r\n    }\r\n\r\n    let myObj = {password:document.getElementById(\"create-acc-pass\").value,\r\n                  confirmation:document.getElementById(\"create-acc-conf-pass\").value,\r\n                  email:document.getElementById(\"create-acc-email\").value,\r\n                  name:document.getElementById(\"create-acc-name\").value,\r\n                  phone:document.getElementById(\"create-acc-phone\").value,\r\n                  nif:document.getElementById(\"create-acc-nif\").value};\r\n\r\n    let myJson = JSON.stringify(myObj);\r\n\r\n    console.log(type);\r\n    xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/register/\"+ type + \"/\" + document.getElementById(\"create-acc-user\").value, true);\r\n    xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n    xmlhttp.send(myJson);\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      <div className=\"cl_top\">\r\n\r\n        <div>\r\n          <Link to=\"/\"><img src={Image} alt=\"E-Floresta Logo\" className=\"cl_logo\" /></Link>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div className=\"bg-img\">\r\n\r\n        <div className=\"session-body\">\r\n\r\n          <div className=\"initiate-session\">\r\n\r\n            <h2 className=\"align-content\"><b>Iniciar Sessão</b></h2>\r\n\r\n            <Form onSubmit={submitHandler}>\r\n              <Form.Group className=\"session-form\" >\r\n                <Form.Control type=\"text\" placeholder=\"Nome de utilizador\" id=\"session-username\"/>\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"session-form\" >\r\n                <Form.Control type=\"password\" placeholder=\"Palavra-Passe\" id=\"session-password\"/>\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"checkbox-container\" controlId=\"loginShowPassCheckbox\" >\r\n                <Form.Check id=\"checkmark-login\" type=\"checkbox\" label=\"Mostrar Palavra-Passe\" onClick={showPassword}/>\r\n              </Form.Group>\r\n\r\n              <Button id=\"session-button\" type=\"submit\" onClick={login}>\r\n                Entrar\r\n              </Button>\r\n            </Form>\r\n\r\n            <p></p>\r\n            <span className=\"forgot-pass_Login\">Esqueceu a sua palavra-passe? <a href=\"#\">Clique aqui.</a></span>\r\n\r\n          </div>\r\n\r\n          <div className=\"division\"> </div>\r\n\r\n          <div className=\"create-account\">\r\n\r\n            <h2 className=\"align-content\"><b>Registe-se</b></h2>\r\n            <p className=\"align-content\">Ainda não tem conta?</p>\r\n            <p className=\"align-content\">Registe-se agora!</p>\r\n\r\n            <Form onSubmit={submitHandler}>\r\n              <Form.Group className=\"create-form\" >\r\n                <Form.Control required type=\"text\" placeholder=\"Nome de utilizador\" id=\"create-acc-user\" />\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"create-form\" >\r\n                <Form.Control required type=\"email\" placeholder=\"E-mail\" id=\"create-acc-email\" />\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"create-form\" >\r\n                <Form.Control required type=\"text\" placeholder=\"Nome Completo\" id=\"create-acc-name\" />\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"create-form\" >\r\n                <Form.Control required type=\"password\" placeholder=\"Palavra-Passe\" id=\"create-acc-pass\" />\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"create-form\" >\r\n                <Form.Control required type=\"password\" placeholder=\"Confirmar Palavra-Passe\" id=\"create-acc-conf-pass\" />\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"create-form\" >\r\n                <Form.Control placeholder=\"Telemóvel/Telefone\" maxLength=\"9\" id=\"create-acc-phone\" />\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"create-form\" >\r\n                <Form.Control placeholder=\"NIF\" maxLength=\"9\" id=\"create-acc-nif\" />\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"create-form\" >\r\n                <Form.Select required controlId=\"create-acc-type\" onChange={(e) => {type = e.target.value}}>\r\n                  <option value=\"personal\">Conta Pessoal</option>\r\n                  <option value=\"entity\">Conta de Entidade</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n\r\n              <Button id=\"create-acc-button\" type=\"submit\" onClick={register}>\r\n                Registar\r\n              </Button>\r\n\r\n            </Form>\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CreateAndLogin","import LogoImage from './logo.png'\r\nimport './TopBar.css'\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport {Button, ButtonGroup, Dropdown} from \"react-bootstrap\";\r\nimport React, {Component} from 'react';\r\n\r\nconst TopBar = () => {\r\n    const navigate = useNavigate();\r\n    return (\r\n        <div className=\"topBar_top\">\r\n\r\n            <div>\r\n                <Link to=\"/homepage\"><img src={LogoImage} alt=\"E-Floresta Logo\" className=\"topBar_logo\"/></Link>\r\n            </div>\r\n\r\n            <ButtonGroup className=\"buttons_TopBar\" size=\"lg\">\r\n                <Link to=\"/homepage\">\r\n                    <Button id=\"option1\">Página Inicial</Button>\r\n                </Link>\r\n\r\n                <Link to=\"/map\">\r\n                    <Button id=\"option2\">Registar Parcela</Button>\r\n                </Link>\r\n\r\n                {localStorage.getItem('role') == 'D' ? <Link to=\"/my-parcels\">\r\n                    <Button id=\"option3\">Minhas Parcelas</Button>\r\n                </Link> : <></>}\r\n\r\n                {localStorage.getItem('role') == 'C' ? <Link to=\"/parcels-entity\">\r\n                    <Button id=\"option5\">Minhas Parcelas</Button>\r\n                </Link> : <></>}\r\n\r\n                {localStorage.getItem('role') == 'C' ? <Link to=\"/proposed-parcels-entity\">\r\n                    <Button id=\"option6\">Parcelas Pendentes</Button>\r\n                </Link> : <></>}\r\n\r\n                {localStorage.getItem('role') == 'C' ? <Link to=\"/statistics-entity\">\r\n                    <Button id=\"option9\">Estatísticas</Button>\r\n                </Link> : <></>}\r\n\r\n                {localStorage.getItem('role').includes('B')  ? <Link to=\"/approve-parcels\">\r\n                    <Button id=\"option7\">Parcelas Pendentes</Button>\r\n                </Link> : <></>}\r\n\r\n                {localStorage.getItem('role').includes('B') ? <Link to=\"/all-parcels\">\r\n                    <Button id=\"option8\">Visualizar Parcelas</Button>\r\n                </Link> : <></>}\r\n\r\n                <Link to=\"/rankings\">\r\n                    <Button id=\"option10\">Rankings</Button>\r\n                </Link>\r\n\r\n                <Link to=\"/about-us\">\r\n                    <Button id=\"option4\">Sobre</Button>\r\n                </Link>\r\n            </ButtonGroup>\r\n\r\n            <Dropdown className=\"my-account-dropdown_TopBar\">\r\n                <Dropdown.Toggle className=\"dropdown_TopBar\">\r\n                    A Minha Conta\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu className=\"dropdown-content_TopBar\">\r\n                    <Dropdown.Item onClick={() => navigate(\"/profile\")}>Perfil</Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => {localStorage.removeItem('token'); navigate(\"/\")}}><b>Encerrar\r\n                        sessão</b></Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopBar","import  './Profile.css'\r\nimport ProfileImage from './profile_picture.png'\r\nimport TopBar from '../TopBar/TopBar.js'\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport { useState } from 'react'\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport React, {useEffect} from 'react'\r\n\r\nconst Profile = () => {\r\n    const navigate = useNavigate();\r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [nif, setNif] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    const [state, setState] = useState(\"\"); //TODO: ver se e preciso\r\n\r\n\r\n    let xmlhttp = new XMLHttpRequest();\r\n\r\n    //Permite correr a funcao quando a pagina e carregada\r\n    useEffect(() => {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState === 4) {\r\n                if (xmlhttp.status === 200) {\r\n                    const obj = JSON.parse(xmlhttp.responseText);\r\n                    setUsername(obj.username);\r\n                    setEmail(obj.email)\r\n                    setName(obj.name);\r\n                    setPhone(obj.phone);\r\n                    setNif(obj.nif);\r\n                    setType(obj.type);\r\n                    setState(obj.state);\r\n                } else if(xmlhttp.status == 403 ||xmlhttp.status == 404) {\r\n                    alert(\"Não tem permissões para efetuar esta operação.\");\r\n                    localStorage.removeItem(\"token\");\r\n                    navigate(\"/\");\r\n                }\r\n                else {\r\n                    alert(\"Não foi possível obter informação.\");\r\n                }\r\n            }\r\n        }\r\n\r\n        var myObj = {token:localStorage.getItem('token')};\r\n        var myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/info/profileinfo\");\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }, [])\r\n\r\n    return(\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <TopBar />\r\n            <div className=\"profile_info\">\r\n                <img src={ProfileImage} alt=\"Profile picture\" className=\"profile_pic\"/>\r\n                <p></p>\r\n                <div id=\"username\">\r\n                    <p className=\"label\">Username: {username}</p>\r\n                </div>\r\n                <div id=\"email\">\r\n                    <p className=\"label\">E-mail: {email}</p>\r\n                </div>\r\n                <div id=\"name\">\r\n                    <p className=\"label\">Nome Completo: {name}</p>\r\n                </div>\r\n                <div id=\"phone\">\r\n                    <p className=\"label\">Telemóvel/Telefone: {phone}</p>\r\n                </div>\r\n                <div id=\"nif\">\r\n                    <p className=\"label\">NIF: {nif}</p>\r\n                </div>\r\n                <div id=\"type\">\r\n                    <p className=\"label\">Tipo de utilizador: {type}</p>\r\n                </div>\r\n\r\n                <div className=\"btn-group\" id=\"change-profile-info\">\r\n                    <div id=\"changeProfileInfo_Profile\">\r\n                        <Link to=\"/change-profile\">\r\n                            <button type=\"button\" className=\"btn btn-secondary btn-sm\">Editar Perfil</button>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div id=\"changePassword_Profile\">\r\n                        <Link to=\"/change-password\">\r\n                            <button type=\"button\" className=\"btn btn-warning btn-sm\">Alterar Palavra-Passe</button>\r\n                        </Link>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Profile","import React, {Component, useEffect} from 'react';\r\n//import csv from \"./teste.csv\";\r\n\r\n\r\nconst CSVConverter = () => {\r\n\r\n    function checkCSV() {\r\n\r\n        let xmlhttp = new XMLHttpRequest();\r\n\r\n        if(localStorage.getItem(\"csv\") === null){\r\n            xmlhttp.onreadystatechange = function () {\r\n                if (xmlhttp.readyState == 4) {\r\n                    if (xmlhttp.status == 200) {\r\n                        let csv = xmlhttp.responseText;\r\n                        let json = csvJSON(csv);\r\n                        localStorage.setItem('csv', json);\r\n                    }\r\n                }\r\n            }\r\n\r\n            var myObj = { token: localStorage.getItem('token') };\r\n            var myJson = JSON.stringify(myObj);\r\n\r\n            xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/getCSV\", false);\r\n            xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n            xmlhttp.send(myJson);\r\n        }\r\n    }\r\n\r\n    function csvJSON(csv){\r\n\r\n        let lines=csv.split(\"\\n\");\r\n        let obj = {};\r\n\r\n\r\n        for(let i=1;i<lines.length-1;i++){\r\n            let currentline=lines[i].split(\";\");\r\n\r\n            let distrito = currentline[1];\r\n            if(!obj.hasOwnProperty(distrito)){\r\n                obj[distrito] = {};\r\n            }\r\n\r\n            let concelho = currentline[2];\r\n            if(!obj[distrito].hasOwnProperty(concelho)){\r\n                obj[distrito][concelho] = {};\r\n            }\r\n\r\n            let freguesia = currentline[3];\r\n            obj[distrito][concelho][freguesia] ={\r\n                dicofre:freguesia = currentline[4]\r\n            }\r\n        }\r\n\r\n        return JSON.stringify(obj);\r\n    }\r\n\r\n    useEffect(() =>\r\n    {\r\n        checkCSV();\r\n    }, [])\r\n\r\n    return(\r\n        <></>\r\n    )\r\n}\r\n\r\n\r\nexport default CSVConverter","import  './LoggedHomepage.css'\r\nimport TopBar from '../TopBar/TopBar.js'\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport {Button, Carousel, Modal} from \"react-bootstrap\";\r\nimport {GoogleMap, LoadScript, Polygon} from \"@react-google-maps/api\";\r\nimport React, { Component }  from 'react';\r\nimport CSVConverter from \"../util/CSVConverter\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst LoggedHomepage = () => {\r\n\r\n    return(\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <TopBar />\r\n\r\n            <CSVConverter/>\r\n\r\n            <div className=\"lgh_body\">\r\n\r\n                <div className=\"hero-register_LoggedHome\">\r\n                    <div className=\"hero-register-text_LoggedHome\">\r\n                        <h1><b>Registe as suas parcelas</b></h1>\r\n                        No nosso site é possível registar as suas parcelas de forma rápida e fácil. <br/>\r\n                        Clique na aba \"Registar Parcelas\". Clique no mapa para desenhar o seu terreno e marcar <br/>\r\n                        os seus limites e registe as informações respetivas ao mesmo do lado direito, preenchendo <br/>\r\n                        e selecionando os campos exigidos. Por fim, clique em Submeter. <br/>\r\n                        <p></p>\r\n                        <Link to=\"/map\">\r\n                            <Button id=\"buttonHero-register_LoggedHome\" variant=\"dark\">Registe já</Button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"hero-myParcels_LoggedHome\">\r\n                    <div className=\"hero-myParcels-text_LoggedHome\">\r\n                        <h1><b>Verifique as suas parcelas</b></h1>\r\n                        O site E-Floresta permite-lhe guardar toda a informação sobre os seus terrenos num único sítio,<br/>\r\n                        para um acesso rápido e fácil. Clique na aba \"Minhas Parcelas\". O mapa do lado esquerdo contém <br/>\r\n                        marcados todos os seus terrenos registados. Do lado direito, existe um cartão para cada uma das <br/>\r\n                        propriedades registadas. Clique em \"Detalhes\" para ver todas as informações sobre uma parcela. <br/>\r\n                        Clique em \"Editar\" para alterar alguma informação sobre a parcela em causa. <br/>\r\n                        <p></p>\r\n                        <Link to=\"/my-parcels\">\r\n                            <Button id=\"buttonHero-register_LoggedHome\" variant=\"dark\">Verifique as suas parcelas</Button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoggedHomepage\r\n","import React, {useEffect} from 'react'\r\nimport  './ChangeProfile.css'\r\nimport TopBar from '../TopBar/TopBar.js'\r\nimport ProfileImage from \"./profile_picture.png\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {useState} from \"react\";\r\n\r\nconst ChangeProfile = () => {\r\n    const navigate = useNavigate();\r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [nif, setNif] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n\r\n    let xmlhttp = new XMLHttpRequest();\r\n\r\n    useEffect(() => {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState == 4) {\r\n                if (xmlhttp.status == 200) {\r\n                    const obj = JSON.parse(xmlhttp.responseText);\r\n                    setUsername(obj.username);\r\n                    setEmail(obj.email)\r\n                    setName(obj.name);\r\n                    setPhone(obj.phone);\r\n                    setNif(obj.nif);\r\n                    setType(obj.type);\r\n                } else if(xmlhttp.status == 403 ||xmlhttp.status == 404) {\r\n                    alert(\"Não tem permissões para efetuar esta operação.\");\r\n                    localStorage.removeItem(\"token\");\r\n                    navigate(\"/\");\r\n                }\r\n                else {\r\n                    alert(\"Não foi possível obter informação.\");\r\n                }\r\n            }\r\n        }\r\n\r\n        var myObj = {token:localStorage.getItem('token')};\r\n        var myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/info/profileinfo\");\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }, [])\r\n\r\n\r\n    function changeProfile() {\r\n\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState === 4) {\r\n                if (xmlhttp.status === 200) {\r\n                    alert(\"Informação alterada com sucesso.\");\r\n                    navigate(\"/profile\");\r\n                } else if(xmlhttp.status === 403 ||xmlhttp.status === 404) {\r\n                    alert(\"Não tem permissões para efetuar esta operação.\");\r\n                    localStorage.removeItem(\"token\");\r\n                    navigate(\"/\");\r\n                }\r\n                else {\r\n                    alert(\"Não foi possível obter informação.\");\r\n                }\r\n            }\r\n        }\r\n\r\n        var myObj = {name:document.getElementById(\"change-complete-name\").value,\r\n            phone:document.getElementById(\"change-phone\").value,\r\n            nif:document.getElementById(\"change-nif\").value,\r\n            token:localStorage.getItem('token')\r\n        };\r\n\r\n        var myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/modify/info\");\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <TopBar />\r\n\r\n            <div className=\"profileInfo_ChangeProfile\">\r\n                <img src={ProfileImage} alt=\"Profile picture\" className=\"profile_pic\"/>\r\n                <p></p>\r\n                <div id=\"username_ChangeProfile\">\r\n                    <p className=\"label\" > Username: {username} </p>\r\n                </div>\r\n                <div id=\"email_ChangeProfile\">\r\n                    <p className=\"label\" > E-mail: {email} </p>\r\n                </div>\r\n                <div id=\"name_ChangeProfile\">\r\n                    <label className=\"label\"> Nome Completo: </label>\r\n                    <input id=\"change-complete-name\" type=\"text\" value={name}/>\r\n                </div>\r\n                <div id=\"phone_ChangeProfile\">\r\n                    <label className=\"label\"> Telemóvel/Telefone: </label>\r\n                    <input id=\"change-phone\" type=\"number\" value={phone} maxLength=\"9\"/>\r\n                </div>\r\n                <div id=\"nif_ChangeProfile\">\r\n                    <label className=\"label\" for=\"change-nif\">NIF:</label>\r\n                    <input id=\"change-nif\" type=\"number\" value={nif} maxLength=\"9\"/>\r\n                </div>\r\n                <div id=\"type_ChangeProfile\">\r\n                    <p className=\"label\"> Tipo de utilizador: {type} </p>\r\n                </div>\r\n\r\n                <div className=\"btn-group\" id=\"confirmAndCancel_ChangeProfile\">\r\n                    <div id=\"confirmChanges_ChangeProfile\">\r\n                        <Button type=\"button\" className=\"btn btn-success btn-sm\" onClick={changeProfile} >Confirmar Alterações</Button>\r\n                    </div>\r\n\r\n                    <div id=\"cancelChanges_ChangeProfile\">\r\n                        <Link to=\"/profile\">\r\n                            <Button type=\"button\" className=\"btn btn-secondary btn-sm\">Cancelar Alterações </Button>\r\n                        </Link>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default ChangeProfile","import  './AboutUs.css'\r\nimport TopBar from '../TopBar/TopBar.js'\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport React, { Component }  from 'react';\r\n\r\nconst AboutUs = () => {\r\n    return(\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <TopBar />\r\n            <div className=\"about-us\">\r\n                <h1>Equipa E-Floresta!</h1>\r\n            </div>\r\n\r\n            <div className=\"initial-text\">\r\n                O interior de Portugal está a viver um processo de desertificação populacional provocado pelo movimento\r\n                dos mais jovens para o litoral e pelo envelhecimento da população com graves consequências económicas,\r\n                sociais e ambientais. Em particular, a gestão da floresta torna-se incomportável, dando origem a perdas\r\n                económicas e ambientais resultantes dos incêndios florestais. Assim, a autarquia de Mação pretende\r\n                reordenar o seu território liderando uma iniciativa que promove a gestão integrada dos terrenos florestais\r\n                para ganhar escala e reduzir custos. <p> Esta plataforma web permite registar a adesão voluntária dos proprietários\r\n                a esta iniciativa comunitária e, posteriormente, seguir a sua gestão em termos de custos e proveitos. </p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default AboutUs","import React, {useEffect} from 'react'\r\nimport {GoogleMap, LoadScript} from '@react-google-maps/api';\r\nimport {Marker} from '@react-google-maps/api';\r\nimport {useState} from 'react'\r\nimport {Polygon} from '@react-google-maps/api';\r\nimport \"./Map.css\"\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport {getAreaOfPolygon, getDistance, getPathLength} from 'geolib';\r\nimport CSVConverter from \"../util/CSVConverter\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst google = window.google;\r\n\r\nconst containerStyle = {\r\n    width: '75vw',\r\n    height: 'calc(100vh - 60px)'\r\n};\r\n\r\nconst center = {\r\n    lat: 38.660677,\r\n    lng: -9.205971\r\n};\r\n\r\nconst options = {\r\n    fillColor: \"Khaki\",\r\n    fillOpacity: 0.3,\r\n    strokeColor: \"DarkOrange\",\r\n    strokeOpacity: 1,\r\n    strokeWeight: 2,\r\n    clickable: false,\r\n    draggable: false,\r\n    editable: false,\r\n    geodesic: false,\r\n    zIndex: 1\r\n}\r\n\r\n\r\nconst Map = () => {\r\n    const navigate = useNavigate();\r\n    const obj = JSON.parse(localStorage.getItem('csv'));\r\n    const distritos = Object.keys(obj);\r\n    const distritoList = [];\r\n    for(let i = 0; i<distritos.length; i++) {\r\n        distritoList.push(<option>{distritos[i]}</option>)\r\n    }\r\n\r\n    const [file, setFile] = useState();\r\n    const [documentState, setDocument] = useState();\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData(e.target);\r\n        submitParcel(formData);\r\n    }\r\n\r\n    const [markerList, setMarker] = useState([]);\r\n    const [paths, setPaths] = useState([]);\r\n    const [area, setArea] = useState(0);\r\n    const [perimeter, setPerimeter] = useState(0);\r\n\r\n    const [distrito, setDistrito] = useState(\"\");\r\n    const [concelhoOptions, setConcelhoOptions] = useState([]);\r\n    const [freguesiaOptions, setFreguesiaOptions] = useState([]);\r\n\r\n\r\n    function handleSetDistrito(distrito){\r\n        setDistrito(distrito);\r\n        let listC = Object.keys(obj[distrito]);\r\n\r\n        let list = [];\r\n        for(let i = 0; i<listC.length; i++){\r\n            list.push(<option>{listC[i]}</option>);\r\n        }\r\n        setConcelhoOptions(list);\r\n    }\r\n\r\n    function handleSetConcelho(concelho){\r\n        console.log(obj);\r\n        console.log(distrito);\r\n        console.log(concelho);\r\n        let listF = Object.keys(obj[distrito][concelho]);\r\n\r\n        let list = [];\r\n        for(let i = 0; i<listF.length; i++){\r\n            list.push(<option>{listF[i]}</option>);\r\n        }\r\n        setFreguesiaOptions(list);\r\n    }\r\n\r\n\r\n    React.useEffect(() => {\r\n        setPerimeter(getPathLength(paths) + (paths.length>1 ? getDistance(paths[paths.length-1], paths[0]) : 0));\r\n        setArea(Math.round(getAreaOfPolygon(paths)));\r\n    }, [paths]);\r\n\r\n\r\n    function addMarker(lat, lng) {\r\n        const google = window.google;\r\n\r\n        console.log(lat, lng);\r\n\r\n        setMarker(markerList.concat(<Marker key={markerList.length} id={markerList.length}\r\n                                            position={{\r\n                                                lat: lat,\r\n                                                lng: lng\r\n                                            }}\r\n                                            icon={{\r\n                                                path: google.maps.SymbolPath.CIRCLE,\r\n                                                fillColor: \"#ff8000\",\r\n                                                fillOpacity: 1.0,\r\n                                                strokeWeight: 0,\r\n                                                scale: 5\r\n                                            }}/>))\r\n\r\n        setPaths(paths.concat({\r\n            lat: lat,\r\n            lng: lng\r\n        }));\r\n    }\r\n\r\n\r\n    function rollback() {\r\n        setMarker(markerList.filter((element, index) => index < markerList.length - 1));\r\n        setPaths(paths.filter((element, index) => index < paths.length - 1));\r\n    }\r\n\r\n    function submitParcel(f) {\r\n        let xmlhttp = new XMLHttpRequest();\r\n\r\n        xmlhttp.onreadystatechange = function() {\r\n            if (xmlhttp.readyState == 4) {\r\n                if (xmlhttp.status == 200) {\r\n                    alert(\"Parcela registada com sucesso.\");\r\n                    navigate(\"/map\");\r\n                } else if(xmlhttp.status == 400) {\r\n                    alert(\"Todos os campos obrigatórios devem ser preenchidos.\");\r\n                    alert(xmlhttp.responseText);\r\n                } else if(xmlhttp.status == 403 || xmlhttp.status == 404) {\r\n                    alert(\"Não tem permissões para efetuar esta operação.\");\r\n                    localStorage.removeItem(\"token\");\r\n                    navigate(\"/\");\r\n                } else if(xmlhttp.status == 409) {\r\n                    alert(\"Já possui uma parcela com o mesmo nome.\")\r\n                }\r\n            }\r\n        }\r\n\r\n        f.append('token', localStorage.getItem('token'));\r\n        f.append('name', document.getElementById(\"formParcelName\").value);\r\n        f.append('distrito', document.getElementById(\"formDistritoDropdown\").value);\r\n        f.append('concelho', document.getElementById(\"formConcelhoDropdown\").value);\r\n        f.append('freguesia', document.getElementById(\"formFreguesiaDropdown\").value);\r\n        f.append('photo', file);\r\n        f.append('coordinates', JSON.stringify(paths));\r\n        f.append('area', area.toString());\r\n        f.append('perimeter', perimeter.toString());\r\n        f.append('document', documentState);\r\n        f.append('usage', document.getElementById(\"formParcelUsage\").value);\r\n        f.append('oldUsage', document.getElementById(\"formParcelOldUsage\").value);\r\n        f.append('cover', document.getElementById(\"formParcelCover\").value);\r\n\r\n        for (var pair of f.entries()) {\r\n            console.log(pair[0]+ ', ' + pair[1]);\r\n        }\r\n\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/register?token=\" + localStorage.getItem(\"token\"), true);\r\n        xmlhttp.send(f);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"mapDiv_Map\">\r\n            <CSVConverter/><LoadScript\r\n            googleMapsApiKey=\"AIzaSyAzmUVpLtuvY1vhrHL_-rcDyk_krHMdSjQ\"\r\n        >\r\n\r\n            <GoogleMap\r\n                mapContainerStyle={containerStyle}\r\n                center={center}\r\n                zoom={10}\r\n                tilt={0}\r\n                onClick={ev => {\r\n                    addMarker(ev.latLng.lat(), ev.latLng.lng())\r\n                }}\r\n            >\r\n                <Polygon\r\n                    paths={paths}\r\n                    options={options}\r\n                />\r\n                {markerList}\r\n                <></>\r\n            </GoogleMap>\r\n        </LoadScript>\r\n\r\n            <div className=\"wrapper\">\r\n                <div id=\"sideBar\">\r\n                    <div id=\"parcelInfo\">\r\n                        <div id=\"parcelArea\">\r\n                            <div className=\"MapInfo_Map\">Área</div>\r\n                            <div className=\"MapInfo_Map\">{area}m²</div>\r\n                        </div>\r\n                        <br/>\r\n                        <div id=\"parcelPerimeter\">\r\n                            <div className=\"MapInfo_Map\">Perímetro</div>\r\n                            <div className=\"MapInfo_Map\">{perimeter}m</div>\r\n                        </div>\r\n                    </div>\r\n                    <button type=\"button\" id=\"rollback\" className={paths.length > 0 ? \"btn btn-success\" : \"btn btn-secondary\"} onClick={rollback}>Voltar atrás</button>\r\n                </div>\r\n\r\n\r\n                <div className=\"submit_Map\">\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group className=\"mt-3\" controlId=\"formParcelName\">\r\n                            <Form.Label> <strong>Nome da Parcela</strong> </Form.Label>\r\n                            <Form.Control className=\"map_fields\" required type=\"text\" placeholder=\"Nome da parcela\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mt-3\" controlId=\"formDistritoDropdown\">\r\n                            <Form.Label> <strong>Distrito</strong> </Form.Label>\r\n                            <Form.Select className=\"map_fields\" onChange={(e) => handleSetDistrito(e.target.value)}>\r\n                                {distritoList}\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mt-3\" controlId=\"formConcelhoDropdown\">\r\n                            <Form.Label> <strong>Concelho</strong> </Form.Label>\r\n                            <Form.Select className=\"map_fields\" onChange={(e) => handleSetConcelho(e.target.value)}>\r\n                                {concelhoOptions}\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mt-3\" controlId=\"formFreguesiaDropdown\">\r\n                            <Form.Label> <strong>Freguesia</strong> </Form.Label>\r\n                            <Form.Select className=\"map_fields\">\r\n                                {freguesiaOptions}\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mt-3\" controlId=\"formParcelCover\">\r\n                            <Form.Label> <strong>Cobertura do solo</strong> </Form.Label>\r\n                            <Form.Control className=\"map_fields\" required type=\"text\" placeholder=\"Cobertura do solo\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mt-3\" controlId=\"formParcelUsage\">\r\n                            <Form.Label> <strong>Utilização do solo</strong> </Form.Label>\r\n                            <Form.Control className=\"map_fields\" required type=\"text\" placeholder=\"Utilização do solo\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mt-3\" controlId=\"formParcelOldUsage\">\r\n                            <Form.Label> <strong>Utilização prévia do solo</strong> </Form.Label>\r\n                            <Form.Control className=\"map_fields\" required type=\"text\" placeholder=\"Utilização prévia do solo\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"position-relative mt-3\" controlId=\"formParcelPhoto\">\r\n                            <Form.Label> <strong>Foto</strong> </Form.Label>\r\n                            <Form.Control\r\n                                className=\"map_fields\"\r\n                                type=\"file\"\r\n                                required\r\n                                name=\"file\"\r\n                                accept = \".png\"\r\n                                onChange={(e) => setFile(e.target.files[0])}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"position-relative mt-3\" controlId=\"formParcelPdf\">\r\n                            <Form.Label> <strong>PDF</strong> </Form.Label>\r\n                            <Form.Control\r\n                                className=\"map_fields\"\r\n                                type=\"file\"\r\n                                required\r\n                                name=\"file\"\r\n                                accept = \".pdf\"\r\n                                onChange={(e) => setDocument(e.target.files[0])}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Button className=\"mt-3 mb-3\" variant=\"success\" type=\"submit\">\r\n                            Submeter\r\n                        </Button>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default React.memo(Map)","import TopBar from \"../TopBar/TopBar.js\"\r\nimport Map from \"../Map/Map.js\"\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport React, { Component }  from 'react';\r\n\r\nconst RegisterParcel = () => {\r\n    return(\r\n        <>\r\n\r\n        <CheckIfLoggedOut />\r\n        <TopBar/>\r\n            <div className=\"map_RegisterPortion\">\r\n                <Map/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RegisterParcel","import React, { Component }  from 'react';\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst CheckIfLoggedIn = () => {\r\n    const navigate = useNavigate();\r\n    let token = localStorage.getItem('token');\r\n    if(token != null) {\r\n        //O utilizador saiu da pag sem fazer logout e ainda tem um token valido, logo nao precisa de fazer login novamente\r\n        navigate(\"/homepage\");\r\n    }\r\n\r\n    return(\r\n        <></>\r\n    )\r\n}\r\n\r\nexport default CheckIfLoggedIn","import './ChangePassword.css'\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport React, { Component }  from 'react';\r\n\r\nconst ChangePassword = () => {\r\n    const navigate = useNavigate();\r\n    let oldPassword, newPassword, confirmation\r\n\r\n    let xmlhttp = new XMLHttpRequest();\r\n\r\n    function changePassword() {\r\n\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState == 4) {\r\n                if (xmlhttp.status == 200) {\r\n                    alert(\"Palavra-passe alterada com sucesso.\");\r\n                    navigate(\"/profile\");\r\n                } else if (xmlhttp.status == 400) {\r\n                    alert(\"A nova palavra-passe e a confirmação não coincidem.\")\r\n                } else if (xmlhttp.status == 403 || xmlhttp.status == 404) {  //TODO: tratar de forma diferente se a pessoa errar a oldPassword\r\n                    alert(\"Não tem permissões para efetuar esta operação.\");\r\n                    localStorage.removeItem(\"token\");\r\n                    navigate(\"/\");\r\n                } else {\r\n                    alert(\"Não foi alterar a palavra-passe.\");\r\n                }\r\n            }\r\n        }\r\n\r\n        var myObj = {\r\n            oldPassword: document.getElementById(\"old-password\").value,\r\n            newPassword: document.getElementById(\"new-password\").value,\r\n            confirmation: document.getElementById(\"confirm-password\").value,\r\n            token: localStorage.getItem('token')\r\n        };\r\n\r\n        var myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/modify/password\");\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CheckIfLoggedOut/>\r\n            <TopBar/>\r\n\r\n            <div className=\"body-changePassword\">\r\n                <div id=\"oldPassword_ChangePassword\">\r\n                    Palavra-Passe Antiga: {oldPassword} <input className=\"fields_ChangePassword\" id=\"old-password\" type=\"password\"/>\r\n                </div>\r\n                <div id=\"newPassword_ChangePassword\">\r\n                    Nova Palavra-Passe: {newPassword} <input className=\"fields_ChangePassword\" id=\"new-password\" type=\"password\"/>\r\n                </div>\r\n                <div id=\"confirmPassword_ChangePassword\">\r\n                    Confirmar nova Palavra-Passe: {confirmation} <input className=\"fields_ChangePassword\" id=\"confirm-password\" type=\"password\"/>\r\n                </div>\r\n\r\n                <div className=\"btn-group\" id=\"confirmAndCancel_ChangePassword\">\r\n                    <div id=\"confirm_ChangePassword\">\r\n                        <Button type=\"button\" className=\"btn btn-success btn-sm\" onClick={changePassword} >Confirmar Alterações</Button>\r\n                    </div>\r\n\r\n                    <div id=\"cancel_ChangePassword\">\r\n                        <Link to=\"/profile\">\r\n                            <Button type=\"button\" className=\"btn btn-secondary btn-sm\">Cancelar Alterações </Button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ChangePassword","import {Modal, Toast} from \"react-bootstrap\";\r\nimport React from 'react';\r\nimport {GoogleMap, Polygon} from \"@react-google-maps/api\";\r\nimport {useState} from \"react\";\r\nimport {getCenterOfBounds, getDistance, orderByDistance} from \"geolib\";\r\n\r\n\r\nconst center = {\r\n    lat: 38.660677,\r\n    lng: -9.205971\r\n};\r\n\r\nconst options = {\r\n    fillColor: \"Khaki\",\r\n    fillOpacity: 0.3,\r\n    strokeColor: \"DarkOrange\",\r\n    strokeOpacity: 1,\r\n    strokeWeight: 2,\r\n    clickable: false,\r\n    draggable: false,\r\n    editable: false,\r\n    geodesic: false,\r\n    zIndex: 1\r\n}\r\n\r\nconst modalContainerStyle = {\r\n    width: '100%',\r\n    height: '45vh'\r\n};\r\n\r\nconst ParcelDetailsModal = (props) => {\r\n\r\n    const [obj, setObj] = useState({});\r\n    const [centerLoc, setCenterLoc] = useState(center);\r\n    const [zoom, setZoom] = useState(15);\r\n    const handleClose = () => props.setShow(false);\r\n\r\n    let xmlhttp = new XMLHttpRequest();\r\n\r\n    function loadModalValues() {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState === 4) {\r\n                if (xmlhttp.status === 200) {\r\n                    setObj(JSON.parse(xmlhttp.responseText));\r\n                }\r\n            }\r\n        }\r\n        let myObj = {token:localStorage.getItem('token')};\r\n        let myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/parcelInfo?parcelName=\"+props.obj.owner+\"_\"+props.obj.name); //TODO:alterar link\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n    function onLoad(coordinates) {\r\n        let centerPoint = getCenterOfBounds(JSON.parse(props.obj.coordinates));\r\n        setCenterLoc(centerPoint);\r\n\r\n        let arr = orderByDistance(centerPoint, JSON.parse(props.obj.coordinates));\r\n        let mostDistant = arr[arr.length-1];\r\n        let dist = getDistance(centerPoint, mostDistant, 1);\r\n        setZoom(Math.round(97.1634 - (69.2069*Math.pow((dist*9), 0.0174478)))-1);\r\n    }\r\n\r\n    return <>\r\n        <Modal\r\n            onShow={loadModalValues}\r\n            show={props.show}\r\n            onHide={handleClose}\r\n            backdrop=\"static\"\r\n            dialogClassName=\"modal-xl\"\r\n            keyboard={false}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title> Parcela: {props.obj.name} </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n\r\n            <GoogleMap\r\n                mapContainerStyle={modalContainerStyle}\r\n                center={{\r\n                    lat:centerLoc.latitude,\r\n                    lng:centerLoc.longitude}\r\n                }\r\n                zoom={zoom}\r\n                tilt={0}\r\n                onLoad={() => onLoad(props.obj.coordinates)}\r\n\r\n            >\r\n                <Polygon\r\n                    paths={JSON.parse(props.obj.coordinates === undefined ? \"[]\" : props.obj.coordinates)}\r\n                    options={options}\r\n                />\r\n            </GoogleMap>\r\n\r\n            </Modal.Body>\r\n\r\n            <Modal.Body>\r\n                <label><b>Proprietário:</b> {props.obj.owner} </label><br/>\r\n                <label><b>Gerente:</b> {props.obj.manager === \"\" ? \" - \" : props.obj.manager} </label><br/>\r\n                <label><b>Freguesia:</b> {props.obj.freguesia} </label><br/>\r\n                <label><b>Concelho:</b> {props.obj.concelho} </label><br/>\r\n                <label><b>Distrito:</b> {props.obj.distrito} </label><br/>\r\n                <label><b>Área da parcela:</b> {props.obj.area}m² </label><br/>\r\n                <label><b>Tipo de cobertura do solo:</b> {obj.cover} </label><br/>\r\n                <label><b>Utilização atual do solo:</b> {obj.usage} </label><br/>\r\n                <label><b>Utilização prévia do solo:</b> {obj.oldUsage} </label><br/>\r\n                <label><b>Descrição:</b> {obj.description} </label><br/>\r\n                <button onClick={() => (window.open(obj.documentURL), '_blank')} type=\"button\">Ver documento</button>\r\n            </Modal.Body>\r\n        </Modal>\r\n    </>\r\n}\r\n\r\nexport default ParcelDetailsModal;","import './ParcelEditModal.css'\r\n\r\nimport {Button, ButtonGroup, Modal} from \"react-bootstrap\";\r\nimport {GoogleMap, Marker, Polygon} from \"@react-google-maps/api\";\r\nimport {useState} from \"react\";\r\nimport {getAreaOfPolygon, getCenterOfBounds, getDistance, getPathLength, orderByDistance} from \"geolib\";\r\nimport React from 'react'\r\n\r\n\r\nconst center = {\r\n    lat: 38.660677,\r\n    lng: -9.205971\r\n};\r\n\r\nconst options = {\r\n    fillColor: \"Khaki\",\r\n    fillOpacity: 0.2,\r\n    strokeColor: \"DarkOrange\",\r\n    strokeOpacity: 1,\r\n    strokeWeight: 2,\r\n    clickable: false,\r\n    draggable: false,\r\n    editable: false,\r\n    geodesic: false,\r\n    zIndex: 1\r\n}\r\nconst optionsSecondary = {\r\n    fillColor: \"DarkCyan\",\r\n    fillOpacity: 0.4,\r\n    strokeColor: \"Aqua\",\r\n    strokeOpacity: 1,\r\n    strokeWeight: 2,\r\n    clickable: false,\r\n    draggable: false,\r\n    editable: false,\r\n    geodesic: false,\r\n    zIndex: 1\r\n}\r\n\r\nconst modalContainerStyle = {\r\n    width: '100%',\r\n    height: '45vh'\r\n};\r\n\r\n\r\nconst ParcelEditModal = (props) => {\r\n    const [markerList, setMarker] = useState([]);\r\n    const [paths, setPaths] = useState([]);\r\n    const [area, setArea] = useState(0);\r\n    const [perimeter, setPerimeter] = useState(0);\r\n    const [zoom, setZoom] = useState(15);\r\n\r\n    const [managerValue, setmanagerValue] = useState(\"\");\r\n    const [managerRequestValue, setmanagerRequestValue] = useState(\"\");\r\n    const [changedInfo, setChangedInfo] = useState(false);\r\n    const [centerLoc, setCenterLoc] = useState(center);\r\n    const [info, setInfo] = useState({});\r\n\r\n    const [managerList, setManager] = useState([]);\r\n\r\n    const handleEditClose = () => closeModal();\r\n\r\n    function closeModal(){\r\n        props.setShow(false);\r\n        setMarker([]);\r\n        setPaths([]);\r\n    }\r\n\r\n    let xmlhttp = new XMLHttpRequest();\r\n\r\n\r\n    function onLoad() {\r\n        let centerPoint = getCenterOfBounds(JSON.parse(props.obj.coordinates));\r\n        setCenterLoc({\r\n            lat: centerPoint.latitude,\r\n            lng: centerPoint.longitude\r\n        });\r\n\r\n        let arr = orderByDistance(centerPoint, JSON.parse(props.obj.coordinates));\r\n        let mostDistant = arr[arr.length-1];\r\n        let dist = getDistance(centerPoint, mostDistant, 1);\r\n        setZoom(Math.round(97.1634 - (69.2069*Math.pow((dist*9), 0.0174478)))-1);\r\n    }\r\n\r\n    function addMarker(lat, lng) {\r\n        const google = window.google;\r\n\r\n        setMarker(markerList.concat(<Marker key={markerList.length} id={markerList.length}\r\n                                            position={{\r\n                                                lat: lat,\r\n                                                lng: lng\r\n                                            }}\r\n                                            icon={{\r\n                                                path: google.maps.SymbolPath.CIRCLE,\r\n                                                fillColor: \"Aqua\",\r\n                                                fillOpacity: 1.0,\r\n                                                strokeWeight: 0,\r\n                                                scale: 5\r\n                                            }}/>))\r\n\r\n        setPaths(paths.concat({\r\n            lat: lat,\r\n            lng: lng\r\n        }));\r\n    }\r\n\r\n    function rollback() {\r\n        setMarker(markerList.filter((element, index) => index < markerList.length - 1));\r\n        setPaths(paths.filter((element, index) => index < paths.length - 1));\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setPerimeter(getPathLength(paths) + (paths.length>1 ? getDistance(paths[paths.length-1], paths[0]) : 0));\r\n        setArea(Math.round(getAreaOfPolygon(paths)));\r\n    }, [paths]);\r\n\r\n    function hasManager() {\r\n        if(props.obj.manager !== \"\") {\r\n            return(\r\n                <label>\r\n                    <b>Gerente:</b> {props.obj.manager}\r\n                    <Button onClick={() => removeManager()} id=\"rmv-manager_MyParcels\" className=\"managerButtons_ParcelEditModal\" variant=\"danger\" size=\"sm\">Remover gerente</Button>\r\n                </label>\r\n            )\r\n        } else {\r\n            return(\r\n                <label>\r\n                    <b>Gerente:</b>\r\n\r\n                    <select id=\"dropdown-basic\" className=\"managerButtons_ParcelEditModal\" onChange={(e) => {setmanagerValue(e.target.value)}/*(e) => {managerValue = e}*/}>\r\n                        {managerList}\r\n                    </select>\r\n\r\n                    <Button onClick={() => {sendManagerRequest()}} id=\"add-manager_MyParcels\" className=\"managerButtons_ParcelEditModal\" variant=\"success\" size=\"sm\">Adicionar gerente</Button>\r\n\r\n                </label>\r\n            )\r\n        }\r\n    }\r\n\r\n    function managerRequest(){\r\n\r\n        return(<label>\r\n            <b>Pedido enviado:</b> {managerRequestValue}\r\n            <Button onClick={() => {removeRequest()}} id=\"rmv-manager_MyParcels\" className=\"managerButtons_ParcelEditModal\" variant=\"danger\" size=\"sm\">Cancelar pedido</Button>\r\n        </label>)\r\n    }\r\n\r\n    function removeManager(){\r\n        let myObj = {token:localStorage.getItem('token')};\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObj),\r\n        };\r\n\r\n        fetch(\"https://moonlit-oven-349523.appspot.com/rest/parcel/removemanager/\" + props.obj.owner + \"_\" + props.obj.name, options)\r\n            .then((r) =>{\r\n                if(r.ok){\r\n                    alert(\"Gerente removido.\");\r\n                    window.location.reload();\r\n                }\r\n            });\r\n    }\r\n\r\n    function removeRequest(){\r\n        let myObj = {token:localStorage.getItem('token')};\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObj),\r\n        };\r\n\r\n        fetch(\"https://moonlit-oven-349523.appspot.com/rest/parcel/rejectrequest/\" + props.obj.owner + \"_\" + props.obj.name, options)\r\n            .then((r) =>{\r\n                if(r.ok){\r\n                    alert(\"Pedido removido.\");\r\n                    window.location.reload();\r\n                }\r\n            });\r\n    }\r\n\r\n    function loadModalValues() {\r\n        let myObjManager = {token:localStorage.getItem('token')};\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObjManager),\r\n        };\r\n\r\n        fetch(\"https://moonlit-oven-349523.appspot.com/rest/parcel/availablemanagers/\"+props.obj.owner+\"_\"+props.obj.name, options)\r\n            .then((r) => {\r\n                if(r.ok){\r\n                    r.text().then((text) => {\r\n                        const managersObj = JSON.parse(text);\r\n                        let arr = [];\r\n\r\n                        for(let i = 0; i<managersObj.length; i++){\r\n                            arr.push(<option value={managersObj[i]}>{managersObj[i]}</option>)\r\n                        }\r\n                        setmanagerValue(managersObj[0]);\r\n                        setManager(arr);\r\n                    })\r\n                }\r\n            });\r\n\r\n\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState === 4) {\r\n                if (xmlhttp.status === 200) {\r\n                    setInfo(JSON.parse(xmlhttp.responseText));\r\n                    setmanagerRequestValue(JSON.parse(xmlhttp.responseText).managerRequest);\r\n                }\r\n            }\r\n        }\r\n        let myObj = {token:localStorage.getItem('token')};\r\n        let myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/parcelInfo?parcelName=\"+props.obj.owner+\"_\"+props.obj.name);\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n    function sendManagerRequest() {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState === 4) {\r\n                if (xmlhttp.status === 200) {\r\n                    alert(\"Pedido enviado.\")\r\n                }\r\n            }\r\n        }\r\n        var myObj = {token:localStorage.getItem('token'),\r\n                        managerName:managerValue};\r\n        console.log(myObj);\r\n        var myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/sendrequest/\" + props.obj.owner + \"_\" + props.obj.name); //TODO:alterar link\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n    async function sendNewInfo(){\r\n        let arr = [];\r\n\r\n        if(changedInfo){\r\n            arr.push(sendInfo());\r\n            console.log(\"yau\");\r\n        }\r\n        if(document.getElementById(\"file-editParcelModal_ApproveParcels\").files[0] !== undefined){\r\n            arr.push(sendDocument(document.getElementById(\"file-editParcelModal_ApproveParcels\").files[0]));\r\n        }\r\n        if(document.getElementById(\"photo-editParcelModal_ApproveParcels\").files[0] !== undefined){\r\n            arr.push(sendPhoto(document.getElementById(\"photo-editParcelModal_ApproveParcels\").files[0]));\r\n        }\r\n        if(paths.length > 2){\r\n            arr.push(sendCoordinates(paths));\r\n            console.log(\"send\");\r\n        }\r\n\r\n        Promise.all(arr).then(() => {alert(\"Success\"); window.location.reload()}).catch(() => alert(\"Error\"));\r\n    }\r\n\r\n    async function sendInfo(){\r\n        let myObj = {cover:document.getElementById(\"cobertSolo-editParcelModal_ApproveParcels\").value,\r\n            usage:document.getElementById(\"utilAtSolo-editParcelModal_ApproveParcels\").value,\r\n            oldUsage:document.getElementById(\"utilPrevSolo-editParcelModal_ApproveParcels\").value,\r\n            description:document.getElementById(\"description-editParcelModal_ApproveParcels\").value,\r\n            token:localStorage.getItem('token')};\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(myObj),\r\n        };\r\n\r\n        return fetch(\"https://moonlit-oven-349523.appspot.com/rest/parcel/modify/\" + props.obj.owner + \"_\" + props.obj.name+\"/info\", options);\r\n    }\r\n\r\n    async function sendDocument(document){\r\n        let formData = new FormData();\r\n        formData.append('token', localStorage.getItem('token'));\r\n        formData.append('document', document);\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            body: formData,\r\n        };\r\n\r\n        return fetch(\"https://moonlit-oven-349523.appspot.com/rest/parcel/modify/\" + props.obj.owner + \"_\" + props.obj.name+\"/document\", options);\r\n    }\r\n\r\n    async function sendPhoto(photo){\r\n        let formData = new FormData();\r\n        formData.append('token', localStorage.getItem('token'));\r\n        formData.append('photo', photo);\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            body: formData,\r\n        };\r\n\r\n        return fetch(\"https://moonlit-oven-349523.appspot.com/rest/parcel/modify/\" + props.obj.owner + \"_\" + props.obj.name+\"/photo\", options);\r\n    }\r\n\r\n    async function sendCoordinates(paths){\r\n        let formData = new FormData();\r\n        formData.append('token', localStorage.getItem('token'));\r\n        formData.append('coordinates', JSON.stringify(paths));\r\n        formData.append('area', area.toString());\r\n        formData.append('perimeter', perimeter.toString());\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            body: formData,\r\n        };\r\n\r\n        return fetch(\"https://moonlit-oven-349523.appspot.com/rest/parcel/modify/\" + props.obj.owner + \"_\" + props.obj.name+\"/coordinates\", options);\r\n    }\r\n\r\n\r\n    return <>\r\n        <Modal\r\n            onShow={loadModalValues}\r\n            show={props.show}\r\n            onHide={handleEditClose}\r\n            backdrop=\"static\"\r\n            dialogClassName=\"modal-xl\"\r\n            keyboard={false}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title> Parcela: {props.obj.name} </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n\r\n                <GoogleMap\r\n                    mapContainerStyle={modalContainerStyle}\r\n                    center={centerLoc}\r\n\r\n                    zoom={zoom}\r\n                    tilt={0}\r\n                    onLoad={() => onLoad(paths)}\r\n                    onClick={ev => {\r\n                        addMarker(ev.latLng.lat(), ev.latLng.lng())\r\n                    }}\r\n                >\r\n                    <Polygon\r\n                        paths={JSON.parse(props.obj.coordinates === undefined ? \"[]\" : props.obj.coordinates)}\r\n                        options={options}\r\n                    />\r\n                    <Polygon\r\n                        paths={paths}\r\n                        options={optionsSecondary}\r\n                    />\r\n                    {markerList}\r\n                    \r\n                </GoogleMap>\r\n\r\n                <div>\r\n\r\n                    <ButtonGroup className=\"buttons-editParcelModal_ApproveParcels\" size=\"sm\">\r\n\r\n                        <Button id=\"rollback-editParcelModal_ApproveParcels\" variant=\"secondary\" className={paths.length > 0 ? \"btn btn-success\" : \"btn btn-secondary\"} onClick={rollback}> Retroceder </Button>\r\n\r\n                    </ButtonGroup>\r\n                    <label id=\"newA-editParcelModal_ApproveParcels\"> <b>Nova área:{area}</b> </label>\r\n                    <label id=\"newP-editParcelModal_ApproveParcels\"> <b>Novo perímetro:{perimeter}</b> </label>\r\n                </div>\r\n                <p></p>\r\n\r\n                <label className=\"labels-editParcelModal_ApproveParcels\"><b>Proprietário:</b> {props.obj.owner} </label><br/>\r\n\r\n                <label className=\"labels-editParcelModal_ApproveParcels\"> {managerRequestValue===\"\"?hasManager():managerRequest()} </label><br/>\r\n\r\n                <label className=\"labels-editParcelModal_ApproveParcels\"><b>Freguesia:</b> {props.obj.freguesia} </label><br/>\r\n\r\n                <label className=\"labels-editParcelModal_ApproveParcels\"><b>Concelho:</b> {props.obj.concelho} </label><br/>\r\n\r\n                <label className=\"labels-editParcelModal_ApproveParcels\"><b>Distrito:</b> {props.obj.distrito} </label><br/>\r\n\r\n                <label className=\"labels-editParcelModal_ApproveParcels\"><b>Área da parcela:</b> {props.obj.area}m² </label><br/>\r\n\r\n\r\n                <label for=\"cobertSolo-editParcelModal_ApproveParcels\"><b>Tipo de cobertura do solo:</b>\r\n                    <input onChange={ () => (setChangedInfo(true))} id=\"cobertSolo-editParcelModal_ApproveParcels\" className=\"inputs-editParcelModal\" type=\"text\" defaultValue={info.cover} />\r\n                </label><br/>\r\n\r\n                <label for=\"utilAtSolo-editParcelModal_ApproveParcels\"><b>Utilização atual do solo:</b>\r\n                    <input onChange={ () => (setChangedInfo(true))} id=\"utilAtSolo-editParcelModal_ApproveParcels\" className=\"inputs-editParcelModal\" type=\"text\" defaultValue={info.usage} />\r\n                </label><br/>\r\n\r\n                <label for=\"utilPrevSolo-editParcelModal_ApproveParcels\"><b>Utilização prévia do solo:</b>\r\n                    <input onChange={ () => (setChangedInfo(true))} id=\"utilPrevSolo-editParcelModal_ApproveParcels\" className=\"inputs-editParcelModal\" type=\"text\" defaultValue={info.oldUsage} />\r\n                </label><br/>\r\n\r\n                <label htmlFor=\"description-editParcelModal_ApproveParcels\"><b>Descrição:</b>\r\n                    <input onChange={ () => (setChangedInfo(true))} id=\"description-editParcelModal_ApproveParcels\" className=\"inputs-editParcelModal\"\r\n                           type=\"text\" defaultValue={info.description}/>\r\n                </label><br/>\r\n\r\n                <label htmlFor=\"file-editParcelModal_ApproveParcels\"><b>Alterar Documento: </b>\r\n                    <input id=\"file-editParcelModal_ApproveParcels\" type=\"file\" name=\"upload\" accept=\"application/pdf\" />\r\n                </label><br/>\r\n\r\n                <label htmlFor=\"photo-editParcelModal_ApproveParcels\"><b>Alterar Fotografia: </b>\r\n                    <input id=\"photo-editParcelModal_ApproveParcels\" type=\"file\" name=\"upload\" accept=\"image/png\" />\r\n                </label><br/>\r\n\r\n                <p></p>\r\n\r\n                <Button type=\"button\" className=\"btn btn-success btn-sm\" onClick={sendNewInfo}> Confirmar Alterações </Button>\r\n\r\n            </Modal.Body>\r\n        </Modal>\r\n    </>\r\n\r\n}\r\n\r\n\r\nexport default ParcelEditModal;","import \"./MyParcels.css\"\r\n\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport {Badge, Button, Card, Col, Row} from \"react-bootstrap\";\r\nimport {useEffect, useState} from 'react'\r\nimport React from 'react';\r\nimport {GoogleMap, LoadScript, Polygon} from \"@react-google-maps/api\";\r\nimport ParcelDetailsModal from \"../util/ParcelDetailsModal/ParcelDetailsModal\";\r\nimport ParcelEditModal from \"../util/ParcelEditModal/ParcelEditModal\";\r\n\r\nconst containerStyle = {\r\n    width: '75vw',\r\n    height: '93.5vh'\r\n};\r\n\r\nconst center = {\r\n    lat: 38.660677,\r\n    lng: -9.205971\r\n};\r\n\r\nconst options = {\r\n    fillColor: \"Khaki\",\r\n    fillOpacity: 0.2,\r\n    strokeColor: \"DarkOrange\",\r\n    strokeOpacity: 1,\r\n    strokeWeight: 2,\r\n    clickable: false,\r\n    draggable: false,\r\n    editable: false,\r\n    geodesic: false,\r\n    zIndex: 1\r\n}\r\n\r\n\r\nconst MyParcels = () => {\r\n    const [obj, setObj] = useState({});\r\n\r\n    const [paths, setPaths] = useState([]);\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [editShow, setEditShow] = useState(false);\r\n\r\n    const handleShow = (obj) => {\r\n        console.log(\"show\")\r\n        setObj(obj);\r\n        setShow(true);\r\n        setEditShow(false);\r\n    }\r\n    const handleEditShow = (obj) => {\r\n        console.log(\"showedit\")\r\n        setObj(obj);\r\n        setShow(false);\r\n        setEditShow(true);\r\n    }\r\n\r\n    const [parcelList, setPList] = useState([]);\r\n\r\n    let xmlhttp = new XMLHttpRequest();\r\n\r\n    let arr = [];\r\n    let pathsArr = [];\r\n\r\n    function isParcelVerified(verified) {\r\n        if(verified) {\r\n            return(\r\n                <Badge pill bg=\"success\">Verificada</Badge>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <Badge pill bg=\"secondary\">Por verificar</Badge>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState === 4) {\r\n                if (xmlhttp.status === 200) {\r\n                    const obj = JSON.parse(xmlhttp.responseText);\r\n                    for(let i = 0; i<obj.length; i++){\r\n                        arr.push(<Card className=\"parcel-card_MyParcels\" style={{ width: '15rem',cursor: \"default\"}}>\r\n                            <Card.Img className=\"parcel_picture\" variant=\"top\" src={obj[i].photoURL} />\r\n                            <Card.Body>\r\n                                <Card.Title>{obj[i].name} {isParcelVerified(obj[i].isApproved)} </Card.Title>\r\n                                <Card.Text>\r\n                                    <label className={\"w-100 text-truncate\"}>Área: {obj[i].area}m²</label><br/>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].freguesia}>Freguesia: {obj[i].freguesia}</label><br/>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].concelho}>Concelho: {obj[i].concelho}</label><br/>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].distrito}>Distrito: {obj[i].distrito}</label><br/>\r\n                                </Card.Text>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Button id=\"show-parcel-details_MyParcels\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => handleShow(obj[i])}>Detalhes</Button>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Button id=\"edit-parcel_MyParcels\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => handleEditShow(obj[i])}>Editar</Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card.Body>\r\n                        </Card>);\r\n\r\n                        pathsArr.push(\r\n                            <Polygon\r\n                                paths={JSON.parse(obj[i].coordinates)}\r\n                                options={options}\r\n                            />\r\n                        );\r\n                    }\r\n                    setPList(arr);\r\n                    setPaths(pathsArr);\r\n                }\r\n            }\r\n        }\r\n\r\n        var myObj = {token:localStorage.getItem('token')};\r\n        var myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/owned\");\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }, [])\r\n\r\n\r\n    return(\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <TopBar />\r\n\r\n            <LoadScript googleMapsApiKey=\"AIzaSyAzmUVpLtuvY1vhrHL_-rcDyk_krHMdSjQ\">\r\n\r\n                <ParcelDetailsModal obj={obj} show={show} setShow={setShow}/>\r\n\r\n                <ParcelEditModal obj={obj} show={editShow} setShow={setEditShow}/>\r\n\r\n                <div id=\"myParcelsBody\">\r\n\r\n                    <GoogleMap\r\n                        mapContainerStyle={containerStyle}\r\n                        center={center}\r\n                        zoom={10}\r\n                        tilt={0}\r\n                    >\r\n                        {paths}\r\n                    </GoogleMap>\r\n\r\n                    <div className=\"body_MyParcels\">\r\n                        <div className=\"container_MyParcels\">\r\n                            {parcelList}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </LoadScript>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyParcels","import \"./ProposedParcelsEntity.css\"\r\n\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport {useEffect, useState} from 'react'\r\nimport React, { Component }  from 'react';\r\nimport {Button, ButtonGroup, Card, Col, Modal, Row} from \"react-bootstrap\";\r\nimport {GoogleMap, LoadScript} from \"@react-google-maps/api\";\r\nimport ParcelEditModal from \"../util/ParcelEditModal/ParcelEditModal\";\r\nimport ParcelDetailsModal from \"../util/ParcelDetailsModal/ParcelDetailsModal\";\r\n\r\nconst center = {\r\n    lat: 38.660677,\r\n    lng: -9.205971\r\n};\r\n\r\nconst modalContainerStyle = {\r\n    width: '72vw',\r\n    height: '45vh'\r\n};\r\n\r\nconst ProposedParcelsEntity = () => {\r\n    const [obj, setObj] = useState({});\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleShow = (obj) => {\r\n        console.log(\"show\")\r\n        setObj(obj);\r\n        setShow(true);\r\n    }\r\n    const handleClose = () => setShow(false);\r\n\r\n    const [parcelList, setPList] = useState([]);\r\n\r\n    let xmlhttp = new XMLHttpRequest();\r\n    let arr = [];\r\n\r\n\r\n    function addManager(parcel) {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState === 4) {\r\n                if (xmlhttp.status === 200) {\r\n                    alert(\"Parcel accepted successfully\");\r\n                    window.location.reload();\r\n                }\r\n            }\r\n        }\r\n        let myObj = {\r\n            token: localStorage.getItem('token'),\r\n        };\r\n        let myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/acceptrequest/\"+parcel.owner+\"_\"+parcel.name); //TODO:alterar link\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n    function removeManager(parcel) {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState === 4) {\r\n                if (xmlhttp.status === 200) {\r\n                    alert(\"Parcel rejected successfully\");\r\n                    window.location.reload();\r\n                }\r\n            }\r\n        }\r\n        let myObj = {\r\n            token: localStorage.getItem('token'),\r\n        };\r\n        let myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/rejectrequest/\"+parcel.owner+\"_\"+parcel.name); //TODO:alterar link\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n    useEffect(() => {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState == 4) {\r\n                console.log(\"yau\");\r\n                if (xmlhttp.status == 200) {\r\n                    const obj = JSON.parse(xmlhttp.responseText);\r\n                    for(let i = 0; i<obj.length; i++){\r\n                        arr.push(<Card className=\"parcel-card_ProposedParcelsEntity\" style={{ width: '15rem',cursor: \"pointer\"}}>\r\n                            <Card.Img className=\"parcel_picture\" variant=\"top\" src={obj[i].photoURL} />\r\n                            <Card.Body>\r\n                                <Card.Title>{obj[i].name} </Card.Title>\r\n                                <Card.Text>\r\n                                    <label className={\"w-100 text-truncate\"}>Área: {obj[i].area}m²</label><br/>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].freguesia}>Freguesia: {obj[i].freguesia}</label><br/>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].concelho}>Concelho: {obj[i].concelho}</label><br/>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].distrito}>Distrito: {obj[i].distrito}</label><br/>\r\n                                </Card.Text>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Button id=\"show-parcel-details_ProposedParcelsEntity\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => handleShow(obj[i])}>Detalhes</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Button id=\"confirm-parcel_ProposedParcelsEntity\" onClick={() => addManager(obj[i])} className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\">Aceitar</Button>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Button id=\"reject-parcel_ProposedParcelsEntity\" onClick={() => removeManager(obj[i])} className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\">Rejeitar</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>);\r\n                    }\r\n                    setPList(arr);\r\n                }\r\n            }\r\n        }\r\n\r\n        var myObj = {token:localStorage.getItem('token')};\r\n        var myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/getrequested\");\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }, [])\r\n\r\n    return(\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <TopBar />\r\n\r\n            <LoadScript googleMapsApiKey=\"AIzaSyAzmUVpLtuvY1vhrHL_-rcDyk_krHMdSjQ\">\r\n                <ParcelDetailsModal obj={obj} show={show} setShow={setShow}/>\r\n            </LoadScript>\r\n\r\n\r\n            <div className=\"proposedParcelsEntityBody\">\r\n                <div className=\"container_ProposedParcelsEntity\">\r\n                    {parcelList}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProposedParcelsEntity","import \"./ParcelsEntity.css\"\r\n\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport {Badge, Button, ButtonGroup, Card, Col, Dropdown, Modal, Row} from \"react-bootstrap\";\r\nimport {useEffect, useState} from 'react'\r\nimport React from 'react';\r\nimport {GoogleMap, LoadScript, Polygon} from \"@react-google-maps/api\";\r\nimport ParcelDetailsModal from \"../util/ParcelDetailsModal/ParcelDetailsModal\";\r\nimport ParcelEditModal from \"../util/ParcelEditModal/ParcelEditModal\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\n\r\nconst containerStyle = {\r\n    width: '75vw',\r\n    height: '93.5vh'\r\n};\r\n\r\nconst center = {\r\n    lat: 38.660677,\r\n    lng: -9.205971\r\n};\r\n\r\nconst options = {\r\n    fillColor: \"Khaki\",\r\n    fillOpacity: 0.3,\r\n    strokeColor: \"DarkOrange\",\r\n    strokeOpacity: 1,\r\n    strokeWeight: 2,\r\n    clickable: false,\r\n    draggable: false,\r\n    editable: false,\r\n    geodesic: false,\r\n    zIndex: 1\r\n}\r\n\r\n\r\nconst ParcelsEntity = () => {\r\n    const navigate = useNavigate();\r\n    const [obj, setObj] = useState({});\r\n\r\n    const [paths, setPaths] = useState([]);\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleShow = (obj) => {\r\n        console.log(\"show\")\r\n        setObj(obj);\r\n        setShow(true);\r\n    }\r\n\r\n    const handleClose = () => setShow(false);\r\n\r\n    const [parcelList, setPList] = useState([]);\r\n\r\n    let xmlhttp = new XMLHttpRequest();\r\n\r\n    let arr = [];\r\n    let pathsArr = [];\r\n\r\n    function removeManager(parcelName, owner){\r\n        let xmlhttp = new XMLHttpRequest();\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState == 4) {\r\n                if (xmlhttp.status == 200) {\r\n                    navigate(\"/parcels-entity\");\r\n                }\r\n            }\r\n        }\r\n        let myObj = {token:localStorage.getItem('token')};\r\n        let myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/removemanager/\" + owner + \"_\" + parcelName);\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState == 4) {\r\n                if (xmlhttp.status == 200) {\r\n                    const obj = JSON.parse(xmlhttp.responseText);\r\n                    for(let i = 0; i<obj.length; i++){\r\n                        arr.push(<Card className=\"parcel-card_ParcelsEntity\" style={{ width: '15rem',cursor: \"pointer\"}}>\r\n                            <Card.Img className=\"parcel_picture\" variant=\"top\" src={obj[i].photoURL} />\r\n                            <Card.Body>\r\n                                <Card.Title>{obj[i].name} </Card.Title>\r\n                                <Card.Text>\r\n                                    <label className={\"w-100 text-truncate\"}>Área: {obj[i].area}m²</label><br/>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].freguesia}>Freguesia: {obj[i].freguesia}</label><br/>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].concelho}>Concelho: {obj[i].concelho}</label><br/>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].distrito}>Distrito: {obj[i].distrito}</label><br/>\r\n                                </Card.Text>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Button id=\"show-parcel-details_ParcelsEntity\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => handleShow(obj[i])}>Detalhes</Button>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Button id=\"remove-parcel_ParcelsEntity\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => removeManager(obj[i].name, obj[i].owner)}>Remover</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>);\r\n\r\n                        pathsArr.push(\r\n                            <Polygon\r\n                                paths={JSON.parse(obj[i].coordinates)}\r\n                                options={options}\r\n                            />\r\n                        );\r\n                    }\r\n                    setPList(arr);\r\n                    setPaths(pathsArr);\r\n                }\r\n            }\r\n        }\r\n\r\n        let myObj = {token:localStorage.getItem('token')};\r\n        let myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/managed\");\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }, [])\r\n\r\n\r\n    return(\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <TopBar />\r\n\r\n            <LoadScript googleMapsApiKey=\"AIzaSyAzmUVpLtuvY1vhrHL_-rcDyk_krHMdSjQ\">\r\n\r\n                <ParcelDetailsModal obj={obj} show={show} setShow={setShow}/>\r\n\r\n                <div id=\"ParcelsEntityBody\">\r\n\r\n                    <GoogleMap\r\n                        mapContainerStyle={containerStyle}\r\n                        center={center}\r\n                        zoom={10}\r\n                        tilt={0}\r\n                    >\r\n                        {paths}\r\n                    </GoogleMap>\r\n\r\n                    <div className=\"body_ParcelsEntity\">\r\n                        <div className=\"container_ParcelsEntity\">\r\n                            {parcelList}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </LoadScript>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ParcelsEntity","import \"./ApproveParcels.css\"\r\n\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport {useEffect, useState} from 'react'\r\nimport React, { Component }  from 'react';\r\nimport {Button, ButtonGroup, Card, Col, Container, Dropdown, Modal, Row} from \"react-bootstrap\";\r\nimport {GoogleMap, LoadScript} from \"@react-google-maps/api\";\r\nimport ParcelDetailsModal from \"../util/ParcelDetailsModal/ParcelDetailsModal\";\r\nimport ParcelEditModal from \"../util/ParcelEditModal/ParcelEditModal\";\r\n\r\nconst center = {\r\n    lat: 38.660677,\r\n    lng: -9.205971\r\n};\r\n\r\nconst ApproveParcels = () => {\r\n    const [obj, setObj] = useState({});\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [editShow, setEditShow] = useState(false);\r\n\r\n    const handleShow = (obj) => {\r\n        console.log(\"show\")\r\n        setObj(obj)\r\n        setShow(true);\r\n        setEditShow(false);\r\n    }\r\n\r\n    const handleEditShow = (obj) => {\r\n        console.log(\"showedit\")\r\n        setObj(obj)\r\n        setShow(false);\r\n        setEditShow(true);\r\n    }\r\n\r\n    const [parcelList, setPList] = useState([]);\r\n\r\n    let xmlhttp = new XMLHttpRequest();\r\n    let arr = [];\r\n\r\n    function approveParcel(parcel) {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState == 4) {\r\n                if (xmlhttp.status == 200) {\r\n                    alert(\"Parcel approved successfully\");\r\n                    window.location.reload();\r\n                }\r\n            }\r\n        }\r\n        let myObj = {\r\n            token: localStorage.getItem('token'),\r\n        };\r\n        let myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/approve/\"+parcel.owner+\"_\"+parcel.name); //TODO:alterar link\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n    function rejectParcel(parcel) {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState == 4) {\r\n                if (xmlhttp.status == 200) {\r\n                    alert(\"Parcel approved successfully\");\r\n                    window.location.reload();\r\n                }\r\n            }\r\n        }\r\n        let myObj = {\r\n            token: localStorage.getItem('token'),\r\n        };\r\n        let myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/reject/\"+parcel.owner+\"_\"+parcel.name); //TODO:alterar link\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }\r\n\r\n    useEffect(() => {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState == 4) {\r\n                if (xmlhttp.status == 200) {\r\n                    const obj = JSON.parse(xmlhttp.responseText);\r\n                    for(let i = 0; i<obj.length; i++){\r\n                        arr.push(<Card className=\"parcel-card_ApproveParcels\" style={{ width: '15rem',cursor: \"pointer\"}}>\r\n                            <Card.Img className=\"parcel_picture\" variant=\"top\" src={obj[i].photoURL} />\r\n                            <Card.Body>\r\n                                <Card.Title>{obj[i].name} </Card.Title>\r\n                                <Card.Text>\r\n                                    <label className={\"w-100 text-truncate\"}>Área: {obj[i].area}m²</label>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].freguesia}>Freguesia: {obj[i].freguesia}</label>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].concelho}>Concelho: {obj[i].concelho}</label>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].distrito}>Distrito: {obj[i].distrito}</label>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Button id=\"show-parcel-details_ApproveParcels\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => handleShow(obj[i])}>Detalhes</Button>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Button id=\"edit-parcel_ApproveParcels\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => handleEditShow(obj[i])}>Editar</Button>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Button id=\"confirm-parcel_ApproveParcels\" onClick={() => approveParcel(obj[i])} className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\">Aprovar</Button>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Button id=\"reject-parcel_ApproveParcels\" onClick={() => rejectParcel(obj[i])} className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\">Rejeitar</Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card.Text>\r\n\r\n                            </Card.Body>\r\n                        </Card>);\r\n                    }\r\n                    setPList(arr);\r\n                }\r\n            }\r\n        }\r\n\r\n        var myObj = {token:localStorage.getItem('token')};\r\n        var myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/pendingbyregion\");\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }, [])\r\n\r\n    return(\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <TopBar />\r\n\r\n            <LoadScript googleMapsApiKey=\"AIzaSyAzmUVpLtuvY1vhrHL_-rcDyk_krHMdSjQ\">\r\n\r\n                <ParcelDetailsModal obj={obj} show={show} setShow={setShow}/>\r\n\r\n                <ParcelEditModal obj={obj} show={editShow} setShow={setEditShow}/>\r\n\r\n            </LoadScript>\r\n\r\n            <div className=\"approveParcelsBody\">\r\n                <div className=\"container_ApproveParcels\">\r\n                    {parcelList}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ApproveParcels","import \"./AllParcels.css\"\r\n\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport {useEffect, useState} from 'react'\r\nimport React, { Component }  from 'react';\r\nimport {Button, ButtonGroup, Card, Col, Container, Dropdown, Modal, Row} from \"react-bootstrap\";\r\nimport {GoogleMap, LoadScript} from \"@react-google-maps/api\";\r\nimport ParcelDetailsModal from \"../util/ParcelDetailsModal/ParcelDetailsModal\";\r\nimport ParcelEditModal from \"../util/ParcelEditModal/ParcelEditModal\";\r\n\r\n\r\nconst AllParcels = () => {\r\n\r\n    const [obj, setObj] = useState({});\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [editShow, setEditShow] = useState(false);\r\n\r\n    const handleShow = (obj) => {\r\n        console.log(\"show\")\r\n        setObj(obj)\r\n        setShow(true);\r\n        setEditShow(false);\r\n    }\r\n\r\n    const handleEditShow = (obj) => {\r\n        console.log(\"showedit\")\r\n        setObj(obj)\r\n        setShow(false);\r\n        setEditShow(true);\r\n    }\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleEditClose = () => setEditShow(false);\r\n\r\n    const [parcelList, setPList] = useState([]);\r\n\r\n    let xmlhttp = new XMLHttpRequest();\r\n    let arr = [];\r\n\r\n    useEffect(() => {\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState == 4) {\r\n                if (xmlhttp.status == 200) {\r\n                    const obj = JSON.parse(xmlhttp.responseText);\r\n                    for(let i = 0; i<obj.length; i++){\r\n\r\n\r\n                        arr.push(<Card className=\"parcel-card_AllParcels\" style={{ width: '15rem',cursor: \"pointer\"}}>\r\n                            <Card.Img className=\"parcel_picture_AllParcels\" variant=\"top\" src={obj[i].photoURL} />\r\n                            <Card.Body>\r\n                                <Card.Title>{obj[i].name} </Card.Title>\r\n                                <Card.Text>\r\n                                    <label className={\"w-100 text-truncate\"}>Área: {obj[i].area}m²</label>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].freguesia}>Freguesia: {obj[i].freguesia}</label>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].concelho}>Concelho: {obj[i].concelho}</label>\r\n                                    <label className={\"w-100 text-truncate\"} title={obj[i].distrito}>Distrito: {obj[i].distrito}</label>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Button id=\"show-parcel-details_AllParcels\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => handleShow(obj[i])}>Detalhes</Button>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Button id=\"edit-parcel_AllParcels\" className={\"w-100 mb-2\"} variant=\"primary\" size=\"sm\" onClick={() => handleEditShow(obj[i])}>Editar</Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card.Text>\r\n\r\n                            </Card.Body>\r\n                        </Card>);\r\n                    }\r\n                    setPList(arr);\r\n                }\r\n            }\r\n        }\r\n\r\n        var myObj = {token:localStorage.getItem('token')};\r\n        var myJson = JSON.stringify(myObj);\r\n\r\n        xmlhttp.open(\"POST\", \"https://moonlit-oven-349523.appspot.com/rest/parcel/approvedbyregion\");\r\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xmlhttp.send(myJson);\r\n    }, [])\r\n\r\n    return(<>\r\n        <CheckIfLoggedOut />\r\n        <TopBar />\r\n\r\n            <LoadScript googleMapsApiKey=\"AIzaSyAzmUVpLtuvY1vhrHL_-rcDyk_krHMdSjQ\">\r\n\r\n                <ParcelDetailsModal obj={obj} show={show} setShow={setShow}/>\r\n\r\n                <ParcelEditModal obj={obj} show={editShow} setShow={setEditShow}/>\r\n\r\n            </LoadScript>\r\n\r\n            <div className=\"allParcelsBody\">\r\n\r\n                <div className=\"container_AllParcels\">\r\n                    {parcelList}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AllParcels","import './StatisticsEntity.css'\r\nimport React, { useState } from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport Chart from 'chart.js/auto';\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport {Col, Form, Row} from \"react-bootstrap\";\r\n\r\n\r\nconst StatisticsEntity = () => {\r\n //   const [freguesiaOptions, setFreguesiaOptions] = useState([]);\r\n\r\n    const [utilSoloByNumber] = useState({\r\n        labels: ['Privado', 'Comercial', 'Pasto', 'Floresta', 'Agrícola', 'Residencial', 'Transporte', 'Recreativo'],\r\n        datasets: [\r\n            {\r\n                label: 'Percentagem por quantidade de parcelas',\r\n                backgroundColor: [\r\n                    'rgba(0, 0, 0, 0.2)',\r\n                    'rgba(51, 51, 255, 0.2)',\r\n                    'rgba(75, 192, 192, 0.2)',\r\n                    'rgba(102, 204, 0, 0.2)',\r\n                    'rgba(255, 206, 86, 0.2)',\r\n                    'rgba(255, 128, 0, 0.2)',\r\n                    'rgba(255, 99, 132, 0.2)',\r\n                    'rgba(204, 153, 255, 0.2)'\r\n                ],\r\n                borderColor: [\r\n                    'rgba(0, 0, 0, 1)',\r\n                    'rgba(51, 51, 255, 1)',\r\n                    'rgba(75, 192, 192, 1)',\r\n                    'rgba(102, 204, 0, 1)',\r\n                    'rgba(255, 206, 86, 1)',\r\n                    'rgba(255, 128, 0, 1)',\r\n                    'rgba(255, 99, 132, 1)',\r\n                    'rgba(204, 153, 255, 1)'\r\n                ],\r\n                borderWidth: 2,\r\n                data: [0.4, 0.12, 0.10, 0.05, 0.1, 0.03, 0.1, 0.1],\r\n            },\r\n        ],\r\n    });\r\n\r\n\r\n    const [utilSoloByArea] = useState({\r\n        labels: ['Privado', 'Comercial', 'Pasto', 'Floresta', 'Agrícola', 'Residencial', 'Transporte', 'Recreativo'],\r\n        datasets: [\r\n            {\r\n                label: 'Percentagem por área de parcelas',\r\n                backgroundColor: [\r\n                    'rgba(0, 0, 0, 0.2)',\r\n                    'rgba(51, 51, 255, 0.2)',\r\n                    'rgba(75, 192, 192, 0.2)',\r\n                    'rgba(102, 204, 0, 0.2)',\r\n                    'rgba(255, 206, 86, 0.2)',\r\n                    'rgba(255, 128, 0, 0.2)',\r\n                    'rgba(255, 99, 132, 0.2)',\r\n                    'rgba(204, 153, 255, 0.2)'\r\n                ],\r\n                borderColor: [\r\n                    'rgba(0, 0, 0, 1)',\r\n                    'rgba(51, 51, 255, 1)',\r\n                    'rgba(75, 192, 192, 1)',\r\n                    'rgba(102, 204, 0, 1)',\r\n                    'rgba(255, 206, 86, 1)',\r\n                    'rgba(255, 128, 0, 1)',\r\n                    'rgba(255, 99, 132, 1)',\r\n                    'rgba(204, 153, 255, 1)'\r\n                ],\r\n                borderWidth: 2,\r\n                data: [0.2, 0.05, 0.15, 0.05, 0.3, 0.04, 0.2, 0.01],\r\n            },\r\n        ],\r\n    });\r\n\r\n\r\n    const [nrParcelsPerFreguesiaInConcelho] = useState({\r\n        labels: ['Colares', 'S. João das Lampas', 'S. Martinho', 'Terrugem', 'Santa Maria e S.Miguel', 'S. Pedro de Penaferrim', 'Montelavar',\r\n        'Pero Pinheiro', 'Algueirão-Men Martins', 'Rio de Mouro', 'Agualva-Cacém', 'Massamá', 'Belas', 'Almargem do Bispo', 'Casal de Cambra',\r\n        'Monte Abraão', 'Queluz'],\r\n        datasets: [\r\n            {\r\n                label: 'Parcelas nas Freguesias de Sintra',\r\n                backgroundColor: 'rgba(176, 192, 144, 0.5)',\r\n                borderColor: 'rgb(62, 80, 58)',\r\n                data: [35, 12, 69, 46, 2, 84, 82, 34, 56, 90, 42, 26, 98, 19, 78, 38, 50],\r\n            },\r\n        ],\r\n    });\r\n\r\n\r\n    return (\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <TopBar />\r\n\r\n            <div className=\"statistics-background\">\r\n                <Row>\r\n                    <p></p>\r\n                    <h2 className=\"stats-entity-title\"> Tipos de Utilização do Solo </h2>\r\n\r\n                    <Col className=\"stats-entity-container\">\r\n                        <h6 className=\"graph-entity-title\"> Percentagem por quantidade de parcelas </h6>\r\n                        <Pie className=\"util-solo-graph_StatsEntity\" data={utilSoloByNumber} options={{ responsive: true }} />\r\n                    </Col>\r\n\r\n                    <Col className=\"stats-entity-container\">\r\n                        <h6 className=\"graph-entity-title\"> Percentagem por área de parcelas </h6>\r\n                        <Pie className=\"util-solo-graph_StatsEntity\" data={utilSoloByArea} options={{ responsive: true }} />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <h2 className=\"stats-entity-title\"> Número de Parcelas num Concelho de uma Freguesia </h2>\r\n\r\n                <Row className=\"stats-entity-container\">\r\n                    <Bar className=\"nrParcels-in-concelho-per-freguesia_StatsEntity\" data={nrParcelsPerFreguesiaInConcelho} options={{ responsive: true }} />\r\n                </Row>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default StatisticsEntity;","import React, {useEffect} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport Image from \"../logo.png\";\r\nimport {Spinner} from \"react-bootstrap\";\r\nimport {useLocation} from \"react-router-dom\";\r\nimport {useState} from \"react\";\r\n\r\n\r\n\r\nconst ConfirmationPage = () => {\r\n    const [confirmed, setConfirmed] = useState(false);\r\n    const search = useLocation().search;\r\n    const name = new URLSearchParams(search).get('id');\r\n    console.log(name);\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://moonlit-oven-349523.appspot.com/rest/register/confirm/\" + name).then(r => setConfirmed(true)).catch( () =>alert(\"yau\"));\r\n    }, [])\r\n\r\n    function body(){\r\n        if(confirmed){\r\n            return(<span>O seu e-mail foi confirmado com sucesso, pode voltar à pagina inicial.</span>)\r\n        }\r\n        else{\r\n            return(<>\r\n                <span>A confirmar o seu e-mail, por favor aguarde...</span>\r\n                <Spinner animation=\"border\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Loading...</span>\r\n                </Spinner></>)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div className=\"home_top\">\r\n\r\n                <div>\r\n                    <Link to=\"/\"><img src={Image} alt=\"E-Floresta Logo\" className=\"home_logo\" /></Link>\r\n                </div>\r\n            </div>\r\n            {body()}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ConfirmationPage","import './Rankings.css'\r\nimport React, { useState } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport Chart from 'chart.js/auto';\r\nimport CheckIfLoggedOut from \"../util/CheckIfLoggedOut\";\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport {Row} from \"react-bootstrap\";\r\n\r\n\r\nconst Rankings = () => {\r\n\r\n    const [userTrust] = useState({\r\n        labels: ['Valentina', 'Valdisnei', 'Josefino', 'Amelia', 'Tristão'],\r\n        datasets: [\r\n            {\r\n                label: 'Utilizadores com melhor User trust',\r\n                backgroundColor: 'rgba(176, 192, 144, 0.5)',\r\n                borderColor: 'rgb(62, 80, 58)',\r\n                data: [98,96,90,87,82],\r\n            },\r\n        ],\r\n    });\r\n\r\n    const [biggerArea] = useState({\r\n        labels: ['Matilda', 'Cleide', 'Cristiano', 'Josemiro', 'Palmira'],\r\n        datasets: [\r\n            {\r\n                label: 'Utilizadores com maior área de parcelas',\r\n                backgroundColor: 'rgba(176, 192, 144, 0.5)',\r\n                borderColor: 'rgb(62, 80, 58)',\r\n                data: [3524,3283,2987,2365,2013],\r\n            },\r\n        ],\r\n    });\r\n\r\n    const [mostParcels] = useState({\r\n        labels: ['Carla', 'Clotilde', 'Ambrósio', 'Gisela', 'Jurandir'],\r\n        datasets: [\r\n            {\r\n                label: 'Utilizadores com mais parcelas registadas',\r\n                backgroundColor: 'rgba(176, 192, 144, 0.5)',\r\n                borderColor: 'rgb(62, 80, 58)',\r\n                data: [45,41,38,34,29],\r\n            },\r\n        ],\r\n    });\r\n\r\n\r\n    return (\r\n        <>\r\n            <CheckIfLoggedOut />\r\n            <TopBar />\r\n\r\n            <div className=\"rankings-background\">\r\n\r\n                <p></p>\r\n                <h2 className=\"rankings-title\"> Ranking de utilizadores com mais pontos de confiança </h2>\r\n\r\n                <Row className=\"rankings-container\">\r\n                    <Bar className=\"userTrust_Rankings\" data={userTrust} options={ {indexAxis: 'y', responsive: true } } />\r\n                </Row>\r\n\r\n                <p></p>\r\n                <h2 className=\"rankings-title\"> Ranking de utilizadores com maior área de parcelas </h2>\r\n\r\n                <Row className=\"rankings-container\">\r\n                    <Bar className=\"biggerArea_Rankings\" data={biggerArea} options={ {indexAxis: 'y', responsive: true } } />\r\n                </Row>\r\n\r\n                <p></p>\r\n                <h2 className=\"rankings-title\"> Ranking de utilizadores com mais parcelas registadas</h2>\r\n\r\n                <Row className=\"rankings-container\">\r\n                    <Bar className=\"mostParcels_Rankings\" data={mostParcels} options={ {indexAxis: 'y', responsive: true } } />\r\n                </Row>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default Rankings;","import Image from './logo.png'\r\n\r\nimport './App.css'\r\nimport CreateAndLogin from './CreateAndLogin/CreateAndLogin'\r\nimport Profile from './Profile/Profile'\r\nimport LoggedHomepage from \"./LoggedHomepage/LoggedHomepage\"\r\nimport ChangeProfile from \"./ChangeProfile/ChangeProfile\"\r\nimport AboutUs from \"./AboutUs/AboutUs\"\r\nimport RegisterParcel from './RegisterParcel/RegisterParcel'\r\nimport CheckIfLoggedIn from './util/CheckIfLoggedIn'\r\nimport ChangePassword from \"./ChangePassword/ChangePassword\";\r\nimport MyParcels from \"./MyParcels/MyParcels\";\r\nimport ProposedParcelsEntity from \"./ProposedParcelsEntity/ProposedParcelsEntity\";\r\nimport ParcelsEntity from \"./ParcelsEntity/ParcelsEntity\";\r\nimport ApproveParcels from \"./ApproveParcels/ApproveParcels\";\r\nimport AllParcels from \"./AllParcels/AllParcels\";\r\nimport StatisticsEntity from \"./StatisticsEntity/StatisticsEntity\";\r\nimport ConfirmationPage from \"./ConfirmationPage/ConfirmationPage\";\r\nimport Rankings from \"./Rankings/Rankings\";\r\n\r\nimport Front_img from \"./front_img.jpg\";\r\nimport React, { Component }  from 'react';\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes, Route, Link\r\n} from \"react-router-dom\"\r\n\r\n\r\n\r\n\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n      <Router>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home />} />\r\n          <Route path=\"/create-and-login\" element={<CreateAndLogin />} />\r\n          <Route path=\"/map\" element={<RegisterParcel />} />\r\n          <Route path=\"/profile\" element={<Profile />} />\r\n          <Route path=\"/homepage\" element={<LoggedHomepage />} />\r\n          <Route path=\"/change-profile\" element={<ChangeProfile />} />\r\n          <Route path=\"/change-password\" element={<ChangePassword />} />\r\n          <Route path=\"/about-us\" element={<AboutUs />} />\r\n          <Route path=\"/my-parcels\" element={<MyParcels />} />\r\n          <Route path=\"/proposed-parcels-entity\" element={<ProposedParcelsEntity />} />\r\n          <Route path=\"/parcels-entity\" element={<ParcelsEntity />} />\r\n          <Route path=\"/approve-parcels\" element={<ApproveParcels />} />\r\n          <Route path=\"/all-parcels\" element={<AllParcels />} />\r\n          <Route path=\"/statistics-entity\" element={<StatisticsEntity />} />\r\n          <Route path=\"/confirmation\" element={<ConfirmationPage />} />\r\n          <Route path=\"/rankings\" element={<Rankings />} />\r\n        </Routes>\r\n      </Router>\r\n  )\r\n}\r\n\r\nconst Home = () => {\r\n  return (\r\n      <>\r\n        <CheckIfLoggedIn />\r\n\r\n        <div className=\"home_top\">\r\n\r\n          <div>\r\n            <Link to=\"/\"><img src={Image} alt=\"E-Floresta Logo\" className=\"home_logo\" /></Link>\r\n          </div>\r\n\r\n          <div className=\"home_button\">\r\n            <Link to=\"/create-and-login\">\r\n              <Button id=\"topButton_Home\" type=\"button\">Login | Criar Conta</Button>\r\n            </Link>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"home_body\">\r\n\r\n            <div className=\"hero-image_Home\">\r\n                <div className=\"hero-text_Home\">\r\n                    <h1><b>E-Floresta</b></h1>\r\n                    <p>Registe as suas parcelas de forma rápida e fácil</p>\r\n                    <Link to=\"/create-and-login\">\r\n                        <Button id=\"button-hero_Home\" variant=\"dark\">Comece já</Button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"text_Home\">\r\n                <div>\r\n                    <h1>\r\n                        O que é o projeto E-Floresta?\r\n                    </h1>\r\n\r\n                    O interior de Portugal está a viver um processo de desertificação populacional provocado pelo movimento\r\n                    dos mais jovens para o litoral e pelo envelhecimento da população com graves consequências económicas,\r\n                    sociais e ambientais. Em particular, a gestão da floresta torna-se incomportável, dando origem a perdas\r\n                    económicas e ambientais resultantes dos incêndios florestais. Assim, a autarquia de Mação pretende\r\n                    reordenar o seu território liderando uma iniciativa que promove a gestão integrada dos terrenos florestais\r\n                    para ganhar escala e reduzir custos. <p> Esta plataforma web permite registar a adesão voluntária dos proprietários\r\n                    a esta iniciativa comunitária e, posteriormente, seguir a sua gestão em termos de custos e proveitos. </p>\r\n                </div>\r\n                <div>\r\n                    <img src={Front_img}/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n      </>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\n\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom/client'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.createRoot(document.getElementById('root')).render(<App />)","module.exports = __webpack_public_path__ + \"static/media/logo.e6484752.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.e6484752.png\";","module.exports = __webpack_public_path__ + \"static/media/profile_picture.9acfe78b.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.e6484752.png\";","module.exports = __webpack_public_path__ + \"static/media/profile_picture.9acfe78b.png\";","module.exports = __webpack_public_path__ + \"static/media/front_img.b7ac53e9.jpg\";"],"sourceRoot":""}